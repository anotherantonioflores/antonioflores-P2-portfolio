[
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "About me",
    "section": "",
    "text": "Ricardo Antonio Flores III, CSM\nI am a passionate problem solver and leader. Throughout my academic and professional career, I have sought to lead by example, go above and beyond, and push the boundaries of success. Whether I’m testing different machine learning models, leading a team of developers on an Agile project, or continuing to expand my knowledge through constant learning, I will always give 100%.\nWith a background in public speaking, as well as a wealth of diverse leadership experiences, I bring an adaptable set of skills that allow me to perform at my best no matter the circumstance. Currently, I am seeking to bring these skills into the world of Data Analytics. I want to be a leader in the world of Data who brings up those around me while communicating clearly to my stakeholders."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html",
    "href": "coding-exercise/coding-exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "We will be using data from the Gapminder package in R\n\n#Please install all packages not already installed using\n#a command similar to one below\n#install.packages(\"dslabs\")\n\nlibrary(dslabs) #How we will access the dataset\nlibrary(tidyr) #For cleaning and analyzing the data\nlibrary(dplyr) #For creating pipes to sort, filter data\nlibrary(ggplot2) # For creating nice visuals\nlibrary(scales) # For scaling data \n\nTaking a look at the structure of the data\n\n# This will give us dimensions and column details\nstr(gapminder)\n\n'data.frame':   10545 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  115.4 148.2 208 NA 59.9 ...\n $ life_expectancy : num  62.9 47.5 36 63 65.4 ...\n $ fertility       : num  6.19 7.65 7.32 4.43 3.11 4.55 4.82 3.45 2.7 5.57 ...\n $ population      : num  1636054 11124892 5270844 54681 20619075 ...\n $ gdp             : num  NA 1.38e+10 NA NA 1.08e+11 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 4 1 1 2 2 3 2 5 4 3 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 19 11 10 2 15 21 2 1 22 21 ...\n\n\nAssessing the quartiles for each column\n\n#This will give us an idea of how each column's data is spread out, and give us some insight about outliers\nsummary(gapminder)\n\n                country           year      infant_mortality life_expectancy\n Albania            :   57   Min.   :1960   Min.   :  1.50   Min.   :13.20  \n Algeria            :   57   1st Qu.:1974   1st Qu.: 16.00   1st Qu.:57.50  \n Angola             :   57   Median :1988   Median : 41.50   Median :67.54  \n Antigua and Barbuda:   57   Mean   :1988   Mean   : 55.31   Mean   :64.81  \n Argentina          :   57   3rd Qu.:2002   3rd Qu.: 85.10   3rd Qu.:73.00  \n Armenia            :   57   Max.   :2016   Max.   :276.90   Max.   :83.90  \n (Other)            :10203                  NA's   :1453                    \n   fertility       population             gdp               continent   \n Min.   :0.840   Min.   :3.124e+04   Min.   :4.040e+07   Africa  :2907  \n 1st Qu.:2.200   1st Qu.:1.333e+06   1st Qu.:1.846e+09   Americas:2052  \n Median :3.750   Median :5.009e+06   Median :7.794e+09   Asia    :2679  \n Mean   :4.084   Mean   :2.701e+07   Mean   :1.480e+11   Europe  :2223  \n 3rd Qu.:6.000   3rd Qu.:1.523e+07   3rd Qu.:5.540e+10   Oceania : 684  \n Max.   :9.220   Max.   :1.376e+09   Max.   :1.174e+13                  \n NA's   :187     NA's   :185         NA's   :2972                       \n             region    \n Western Asia   :1026  \n Eastern Africa : 912  \n Western Africa : 912  \n Caribbean      : 741  \n South America  : 684  \n Southern Europe: 684  \n (Other)        :5586  \n\n\nVerifying the type of object that we will be accesssing\n\nclass(gapminder)\n\n[1] \"data.frame\"\n\n# Tells us that R is viewing this as a data frame which will help us with maintaining column types and cleaning the dataset"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#analyzing-life-expectancy-in-africa",
    "href": "coding-exercise/coding-exercise.html#analyzing-life-expectancy-in-africa",
    "title": "R Coding Exercise",
    "section": "",
    "text": "We will be using data from the Gapminder package in R\n\n#Please install all packages not already installed using\n#a command similar to one below\n#install.packages(\"dslabs\")\n\nlibrary(dslabs) #How we will access the dataset\nlibrary(tidyr) #For cleaning and analyzing the data\nlibrary(dplyr) #For creating pipes to sort, filter data\nlibrary(ggplot2) # For creating nice visuals\nlibrary(scales) # For scaling data \n\nTaking a look at the structure of the data\n\n# This will give us dimensions and column details\nstr(gapminder)\n\n'data.frame':   10545 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  115.4 148.2 208 NA 59.9 ...\n $ life_expectancy : num  62.9 47.5 36 63 65.4 ...\n $ fertility       : num  6.19 7.65 7.32 4.43 3.11 4.55 4.82 3.45 2.7 5.57 ...\n $ population      : num  1636054 11124892 5270844 54681 20619075 ...\n $ gdp             : num  NA 1.38e+10 NA NA 1.08e+11 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 4 1 1 2 2 3 2 5 4 3 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 19 11 10 2 15 21 2 1 22 21 ...\n\n\nAssessing the quartiles for each column\n\n#This will give us an idea of how each column's data is spread out, and give us some insight about outliers\nsummary(gapminder)\n\n                country           year      infant_mortality life_expectancy\n Albania            :   57   Min.   :1960   Min.   :  1.50   Min.   :13.20  \n Algeria            :   57   1st Qu.:1974   1st Qu.: 16.00   1st Qu.:57.50  \n Angola             :   57   Median :1988   Median : 41.50   Median :67.54  \n Antigua and Barbuda:   57   Mean   :1988   Mean   : 55.31   Mean   :64.81  \n Argentina          :   57   3rd Qu.:2002   3rd Qu.: 85.10   3rd Qu.:73.00  \n Armenia            :   57   Max.   :2016   Max.   :276.90   Max.   :83.90  \n (Other)            :10203                  NA's   :1453                    \n   fertility       population             gdp               continent   \n Min.   :0.840   Min.   :3.124e+04   Min.   :4.040e+07   Africa  :2907  \n 1st Qu.:2.200   1st Qu.:1.333e+06   1st Qu.:1.846e+09   Americas:2052  \n Median :3.750   Median :5.009e+06   Median :7.794e+09   Asia    :2679  \n Mean   :4.084   Mean   :2.701e+07   Mean   :1.480e+11   Europe  :2223  \n 3rd Qu.:6.000   3rd Qu.:1.523e+07   3rd Qu.:5.540e+10   Oceania : 684  \n Max.   :9.220   Max.   :1.376e+09   Max.   :1.174e+13                  \n NA's   :187     NA's   :185         NA's   :2972                       \n             region    \n Western Asia   :1026  \n Eastern Africa : 912  \n Western Africa : 912  \n Caribbean      : 741  \n South America  : 684  \n Southern Europe: 684  \n (Other)        :5586  \n\n\nVerifying the type of object that we will be accesssing\n\nclass(gapminder)\n\n[1] \"data.frame\"\n\n# Tells us that R is viewing this as a data frame which will help us with maintaining column types and cleaning the dataset"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#processing-data",
    "href": "coding-exercise/coding-exercise.html#processing-data",
    "title": "R Coding Exercise",
    "section": "Processing data",
    "text": "Processing data\nFirst we will segment only data from African countries into a new data frame.\n\n# Using pipes from dplyr\nafricadata = gapminder |&gt;\n  filter(continent == 'Africa') # Using two == signifies comparison operator vs assignment operator\n\nNext we will create two new objects from this Africa data set, one with both Life Expectancy and Infant Mortality, and one with both Life Expectancy and Population.\n\nafrica_IM_LE = africadata[3:4] #Slicing only two columns of interest\nafrica_POP_LE = africadata[4:6] #Slicing three columns since we want both 4 and 6\nafrica_POP_LE = africa_POP_LE[-2] #Removing middle unneeded columns\n\nLets take a look at the structure and summary of the two new data objects.\n\nstr(africa_POP_LE)\n\n'data.frame':   2907 obs. of  2 variables:\n $ life_expectancy: num  47.5 36 38.3 50.3 35.2 ...\n $ population     : num  11124892 5270844 2431620 524029 4829291 ...\n\nstr(africa_IM_LE)\n\n'data.frame':   2907 obs. of  2 variables:\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n\nsummary(africa_POP_LE)\n\n life_expectancy   population       \n Min.   :13.20   Min.   :    41538  \n 1st Qu.:48.23   1st Qu.:  1605232  \n Median :53.98   Median :  5570982  \n Mean   :54.38   Mean   : 12235961  \n 3rd Qu.:60.10   3rd Qu.: 13888152  \n Max.   :77.60   Max.   :182201962  \n                 NA's   :51         \n\nsummary(africa_IM_LE)\n\n infant_mortality life_expectancy\n Min.   : 11.40   Min.   :13.20  \n 1st Qu.: 62.20   1st Qu.:48.23  \n Median : 93.40   Median :53.98  \n Mean   : 95.12   Mean   :54.38  \n 3rd Qu.:124.70   3rd Qu.:60.10  \n Max.   :237.40   Max.   :77.60  \n NA's   :226"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#plotting",
    "href": "coding-exercise/coding-exercise.html#plotting",
    "title": "R Coding Exercise",
    "section": "Plotting",
    "text": "Plotting\nPlotting Life Expectancy as function of Infant Mortality.\n\nafrica_IM_LE |&gt; # Using pipes again\n  ggplot(aes(x=infant_mortality, y=life_expectancy))+ #Using GGplot for better visualizations\n  geom_point() #geom_point is ggplots method for scatterplots\n\nWarning: Removed 226 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\nWe can clearly see a negative correlation between our variables of interest, implying as infant mortality increases, life expectancy decreases.\nNext plotting Life Expectancy as a function of Population\n\nafrica_POP_LE |&gt;\n  ggplot(aes(x = population, y =life_expectancy))+\n  geom_point()+\n  scale_x_log10(labels = label_comma()) #Using the scales library to scale the x axis with log10\n\nWarning: Removed 51 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\nWe generally see a positive correlation between these two variables. As in the previous plot we can note several ‘lines’ of data made up of datapoints very close to each other. These represent the data of distinct countries, year after year, increasing or decreasing."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#additional-data-processing",
    "href": "coding-exercise/coding-exercise.html#additional-data-processing",
    "title": "R Coding Exercise",
    "section": "Additional Data Processing",
    "text": "Additional Data Processing\nWe need find a a singular year to explore.\nIn order to do that, we need to identify which years are not missing data for the Infant Mortality variable.\n\n#We start by counting the number of NAs per country, per year\nCountNAs = africadata |&gt;\n  group_by(year) |&gt; # When we group, we need to summarize\n  summarise(sum(is.na(infant_mortality)))#so we use the total number of NA values in this column to group on\n\nCountNAs #Generating table\n\n# A tibble: 57 × 2\n    year `sum(is.na(infant_mortality))`\n   &lt;int&gt;                          &lt;int&gt;\n 1  1960                             10\n 2  1961                             17\n 3  1962                             16\n 4  1963                             16\n 5  1964                             15\n 6  1965                             14\n 7  1966                             13\n 8  1967                             11\n 9  1968                             11\n10  1969                              7\n# ℹ 47 more rows\n\n#Clicking through the table will show when the number of NAs drop to 0 for many years\nplot(CountNAs) # Plotting our findings\n\n\n\n\n\n\n\n\nAs both the table and plot show, around 1981, the number of NAs for the Infant Mortality variable dropped to 0 until 2016, when the number of NAs jumped. So we need to choose a year between that year range.We will choose 2000 for this exercise.\n\n# Creating a new data object\nafrica2000 = africadata |&gt; \n  filter(year == 2000)# We only want rows where the year column is 2000\n\n\n# Checking both the structure and summary of our new data object\n\nstr(africa2000)\n\n'data.frame':   51 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  2000 2000 2000 2000 2000 2000 2000 2000 2000 2000 ...\n $ infant_mortality: num  33.9 128.3 89.3 52.4 96.2 ...\n $ life_expectancy : num  73.3 52.3 57.2 47.6 52.6 46.7 54.3 68.4 45.3 51.5 ...\n $ fertility       : num  2.51 6.84 5.98 3.41 6.59 7.06 5.62 3.7 5.45 7.35 ...\n $ population      : num  31183658 15058638 6949366 1736579 11607944 ...\n $ gdp             : num  5.48e+10 9.13e+09 2.25e+09 5.63e+09 2.61e+09 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\nsummary(africa2000)\n\n         country        year      infant_mortality life_expectancy\n Algeria     : 1   Min.   :2000   Min.   : 12.30   Min.   :37.60  \n Angola      : 1   1st Qu.:2000   1st Qu.: 60.80   1st Qu.:51.75  \n Benin       : 1   Median :2000   Median : 80.30   Median :54.30  \n Botswana    : 1   Mean   :2000   Mean   : 78.93   Mean   :56.36  \n Burkina Faso: 1   3rd Qu.:2000   3rd Qu.:103.30   3rd Qu.:60.00  \n Burundi     : 1   Max.   :2000   Max.   :143.30   Max.   :75.00  \n (Other)     :45                                                  \n   fertility       population             gdp               continent \n Min.   :1.990   Min.   :    81154   Min.   :2.019e+08   Africa  :51  \n 1st Qu.:4.150   1st Qu.:  2304687   1st Qu.:1.274e+09   Americas: 0  \n Median :5.550   Median :  8799165   Median :3.238e+09   Asia    : 0  \n Mean   :5.156   Mean   : 15659800   Mean   :1.155e+10   Europe  : 0  \n 3rd Qu.:5.960   3rd Qu.: 17391242   3rd Qu.:8.654e+09   Oceania : 0  \n Max.   :7.730   Max.   :122876723   Max.   :1.329e+11                \n                                                                      \n                       region  \n Eastern Africa           :16  \n Western Africa           :16  \n Middle Africa            : 8  \n Northern Africa          : 6  \n Southern Africa          : 5  \n Australia and New Zealand: 0  \n (Other)                  : 0"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#additional-plotting",
    "href": "coding-exercise/coding-exercise.html#additional-plotting",
    "title": "R Coding Exercise",
    "section": "Additional Plotting",
    "text": "Additional Plotting\nNow, lets generate the same plots from before, with just data from Africa in the year 2000.\nPlotting Life Expectancy as function of Infant Mortality\n\nafrica2000 |&gt; # Our new data object\n  ggplot(aes(x=infant_mortality, y=life_expectancy))+\n  geom_point()\n\n\n\n\n\n\n\n\nWe still see the same negative correlation as before, albeit less strong.\nNext plotting Life Expectancy as a function of Population\n\nafrica2000 |&gt;\n  ggplot(aes(x = population, y =life_expectancy))+\n  geom_point()+\n  scale_x_log10(labels = label_comma()) #Using Scales again\n\n\n\n\n\n\n\n\nWe do not see a real trend in this plot, which differs from the initial plot with all the data from African."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#modeling",
    "href": "coding-exercise/coding-exercise.html#modeling",
    "title": "R Coding Exercise",
    "section": "Modeling",
    "text": "Modeling\nWe will fit two models using two different predictors (infant mortality and population) to predict life expectancy.\n\nfit1 = lm(life_expectancy ~ infant_mortality, data=africa2000) # Initializing model using infant_mortality as predictor\n\nfit2 =lm(life_expectancy ~ population, data=africa2000)\n#Model using Population as predictor\n\nNow we run summary() to display the results of our two model runs.\n\nsummary(fit1) #Summary will show us all the important info of our two models\n\n\nCall:\nlm(formula = life_expectancy ~ infant_mortality, data = africa2000)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-22.6651  -3.7087   0.9914   4.0408   8.6817 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      71.29331    2.42611  29.386  &lt; 2e-16 ***\ninfant_mortality -0.18916    0.02869  -6.594 2.83e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.221 on 49 degrees of freedom\nMultiple R-squared:  0.4701,    Adjusted R-squared:  0.4593 \nF-statistic: 43.48 on 1 and 49 DF,  p-value: 2.826e-08\n\n\n\nsummary(fit2) \n\n\nCall:\nlm(formula = life_expectancy ~ population, data = africa2000)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-18.429  -4.602  -2.568   3.800  18.802 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 5.593e+01  1.468e+00  38.097   &lt;2e-16 ***\npopulation  2.756e-08  5.459e-08   0.505    0.616    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.524 on 49 degrees of freedom\nMultiple R-squared:  0.005176,  Adjusted R-squared:  -0.01513 \nF-statistic: 0.2549 on 1 and 49 DF,  p-value: 0.6159"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#model-conclusions",
    "href": "coding-exercise/coding-exercise.html#model-conclusions",
    "title": "R Coding Exercise",
    "section": "Model Conclusions",
    "text": "Model Conclusions\nAs expected model 1 (Predictor: Infant Mortality) has a significant effect (p-value is far below .05), and that effect is negative (intercept is -.1891).\nAlso as expected, model 2 (Predictor: Population) did not have a substantial effect (p-value .6 &gt; .05)."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#data-structure",
    "href": "coding-exercise/coding-exercise.html#data-structure",
    "title": "R Coding Exercise",
    "section": "Data Structure",
    "text": "Data Structure\nThis dataset contains 7 variables, including movie body_weight, bone_density, and sex, with a total of 780 observations.\n\nstr(mice_weights)\n\n'data.frame':   780 obs. of  7 variables:\n $ body_weight : num  27.6 23 28.7 32.6 28.6 ...\n $ bone_density: num  0.616 0.769 0.684 0.644 0.53 ...\n $ percent_fat : num  7.26 4.95 6.02 9.54 6.99 ...\n $ sex         : Factor w/ 2 levels \"F\",\"M\": 1 1 1 1 1 1 1 1 1 1 ...\n $ diet        : Factor w/ 2 levels \"chow\",\"hf\": 1 1 1 1 1 1 1 1 1 1 ...\n $ gen         : Factor w/ 5 levels \"4\",\"7\",\"8\",\"9\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ litter      : Factor w/ 2 levels \"1\",\"2\": 1 1 1 1 1 1 1 1 1 1 ..."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#data-summary",
    "href": "coding-exercise/coding-exercise.html#data-summary",
    "title": "R Coding Exercise",
    "section": "Data Summary",
    "text": "Data Summary\nHere’s a brief summary of the mice_weights dataset, this will help us understand the available data and identifying any potential outliers.\n\nsummary(mice_weights)\n\n  body_weight     bone_density     percent_fat     sex       diet     gen     \n Min.   :18.13   Min.   :0.2708   Min.   : 2.552   F:398   chow:394   4 : 97  \n 1st Qu.:28.09   1st Qu.:0.4888   1st Qu.: 5.566   M:382   hf  :386   7 :195  \n Median :32.98   Median :0.5643   Median : 8.276                      8 :193  \n Mean   :34.08   Mean   :0.5697   Mean   : 8.594                      9 : 97  \n 3rd Qu.:39.37   3rd Qu.:0.6373   3rd Qu.:10.926                      11:198  \n Max.   :65.15   Max.   :0.9980   Max.   :22.154                              \n                 NA's   :4        NA's   :4                                   \n litter \n 1:442  \n 2:338"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#data-type",
    "href": "coding-exercise/coding-exercise.html#data-type",
    "title": "R Coding Exercise",
    "section": "Data Type",
    "text": "Data Type\n\nclass(mice_weights)\n\n[1] \"data.frame\""
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#objects-structure",
    "href": "coding-exercise/coding-exercise.html#objects-structure",
    "title": "R Coding Exercise",
    "section": "Objects Structure",
    "text": "Objects Structure\n\nstr(weight_density)\n\n'data.frame':   776 obs. of  2 variables:\n $ body_weight : num  27.6 23 28.7 32.6 28.6 ...\n $ bone_density: num  0.616 0.769 0.684 0.644 0.53 ...\n\n\n\nstr(weight_sex)\n\n'data.frame':   780 obs. of  2 variables:\n $ body_weight: num  27.6 23 28.7 32.6 28.6 ...\n $ sex        : Factor w/ 2 levels \"F\",\"M\": 1 1 1 1 1 1 1 1 1 1 ..."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#objects-summary",
    "href": "coding-exercise/coding-exercise.html#objects-summary",
    "title": "R Coding Exercise",
    "section": "Objects Summary",
    "text": "Objects Summary\n\nsummary(weight_density)\n\n  body_weight     bone_density   \n Min.   :18.13   Min.   :0.2708  \n 1st Qu.:28.05   1st Qu.:0.4888  \n Median :32.95   Median :0.5643  \n Mean   :34.05   Mean   :0.5697  \n 3rd Qu.:39.37   3rd Qu.:0.6373  \n Max.   :65.15   Max.   :0.9980  \n\n\n\nsummary(weight_sex)\n\n  body_weight    sex    \n Min.   :18.13   F:398  \n 1st Qu.:28.09   M:382  \n Median :32.98          \n Mean   :34.08          \n 3rd Qu.:39.37          \n Max.   :65.15"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#bone-density-vs-body-weight",
    "href": "coding-exercise/coding-exercise.html#bone-density-vs-body-weight",
    "title": "R Coding Exercise",
    "section": "Bone Density vs Body Weight",
    "text": "Bone Density vs Body Weight\nI included a scatterplot to visually examine the relationship between these two variables. It appears there is a positive relationship, and I will now proceed to create a linear model to explore this further.\n\nggplot(weight_density, aes(x = bone_density, y = body_weight)) + \n  geom_point() + \n   labs(x = \"Bone Density\", y = \"Body Weight\") +\n  ggtitle(\"Scatterplot of Body Weight by Bone Density\")"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#bone-density-vs-sex",
    "href": "coding-exercise/coding-exercise.html#bone-density-vs-sex",
    "title": "R Coding Exercise",
    "section": "Bone Density vs Sex",
    "text": "Bone Density vs Sex\nMales generally weigh more, and females have more outliers in weight distribution.\n\nggplot(weight_sex, aes(x = sex, y = body_weight)) + \n  geom_boxplot() +\n  labs(x = \"Sex\", y = \"Body Weight\") +\n  ggtitle(\"Boxplot of Body Weight by Sex\")"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#body-weight-bone-density",
    "href": "coding-exercise/coding-exercise.html#body-weight-bone-density",
    "title": "R Coding Exercise",
    "section": "Body Weight ~ Bone Density",
    "text": "Body Weight ~ Bone Density\n\nlmBD = lm(body_weight~bone_density, data = weight_density)\nsummary(lmBD)\n\n\nCall:\nlm(formula = body_weight ~ bone_density, data = weight_density)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-17.0564  -5.5995  -0.8832   5.1219  29.5985 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)    19.159      1.401   13.67   &lt;2e-16 ***\nbone_density   26.139      2.414   10.83   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 7.538 on 774 degrees of freedom\nMultiple R-squared:  0.1316,    Adjusted R-squared:  0.1305 \nF-statistic: 117.3 on 1 and 774 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#body-weight-sex",
    "href": "coding-exercise/coding-exercise.html#body-weight-sex",
    "title": "R Coding Exercise",
    "section": "Body Weight ~ Sex",
    "text": "Body Weight ~ Sex\n\nlmBD = lm(body_weight~sex, data = weight_sex)\nsummary(lmBD)\n\n\nCall:\nlm(formula = body_weight ~ sex, data = weight_sex)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-14.960  -4.912  -0.899   4.338  35.391 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  29.7588     0.3391   87.76   &lt;2e-16 ***\nsexM          8.8207     0.4846   18.20   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.765 on 778 degrees of freedom\nMultiple R-squared:  0.2987,    Adjusted R-squared:  0.2978 \nF-statistic: 331.4 on 1 and 778 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hello there!",
    "section": "",
    "text": "Hello there!\n\nPlease use the Menu Bar above to look around.\nMy Resume and Bio can be found on the About Me page.\nMy Data Analysis Projects can be found in the Projects menu.\nData Exercises that I performed for a Graduate Class can be observed in the Exercises menu.\n\n\n\nContact\nEmail: antoniogeo0@gmail.com\nPhone: (830)-245-4748\nLinkedIn: Ricardo Antonio Flores III"
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html",
    "href": "presentation-exercise/presentation-exercise.html",
    "title": "Presentation Exercise",
    "section": "",
    "text": "Recreating Chart with AI Prompts\nThis is the chart we will attempt to recreate. It comes from a Gapminder article regarding Life Expectancy\n\nThe data for this chart was easily found on their site.\n\n\nPrompts for generating chart/code from AI\nI will be using ChatGPT-4 for this exercise.\n   Unfortunately I hit some kind of wall here. Apparently there’s a limit to the amount of Data Analysis prompts you can issue on the free version of ChatGPT.\n  \n\n\nCode from Chatgpt\nThis will not run because of incorrect y variable name\n\n# Load necessary library\n#library(ggplot2)\n\n# Load the data\n#data &lt;- read.csv('Life_expectancy.csv')\n\n# Create the plot\n#ggplot(data, aes(x = time, y = Life.expectancy.)) +\n # geom_line(color = 'black') +\n  #geom_ribbon(aes(ymin = 0, ymax = Life.expectancy.), fill = 'black', alpha = 0.1) +\n  #labs(title = 'AVERAGE LIFE EXPECTANCY FROM 1800 TO TODAY', x = 'Year', y = 'Life Expectancy') +\n  #annotate(\"text\", x = 1845, y = 30, label = \"Famine\", size = 4, hjust = 0) +\n  #annotate(\"text\", x = 1918, y = 26, label = \"Spanish flu\", size = 4, hjust = 0) +\n  #annotate(\"text\", x = 1945, y = 47, label = \"World War II\", size = 4, hjust = 0) +\n  #geom_point(aes(x = 1800, y = 31), color = 'black', size = 3) +\n  #geom_point(aes(x = 2017, y = 72), color = 'black', size = 3) +\n  #annotate(\"text\", x = 1800, y = 31, label = \"1800\\n31 years\", hjust = -0.2, vjust = 1.5, size = 4) +\n  #annotate(\"text\", x = 2017, y = 72, label = \"2017\\n72 years\", hjust = 1.2, vjust = -0.5, size = 4) +\n  #theme_minimal()\n\nIf we correct the variable name and verify that the data will be read in correctly, we get the below plot.\n\n #Load necessary library\nlibrary(here)\n\nhere() starts at C:/Users/Client/Documents/antonioflores-P2-portfolio\n\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\ndata_location &lt;-here(\"presentation-exercise\",\"Life_expectancy.csv\")\ndata &lt;- read.csv(data_location)\n\n# Create the plot\nggplot(data, aes(x = time, y = Life.expectancy)) +\n  geom_line(color = 'black') +\n geom_ribbon(aes(ymin = 0, ymax = Life.expectancy), fill = 'black', alpha = 0.1) +\n labs(title = 'AVERAGE LIFE EXPECTANCY FROM 1800 TO TODAY', x = 'Year', y = 'Life Expectancy') +\n annotate(\"text\", x = 1845, y = 30, label = \"Famine\", size = 4, hjust = 0) +\n annotate(\"text\", x = 1918, y = 26, label = \"Spanish flu\", size = 4, hjust = 0) +\n annotate(\"text\", x = 1945, y = 47, label = \"World War II\", size = 4, hjust = 0) +\n geom_point(aes(x = 1800, y = 31), color = 'black', size = 3) +\n geom_point(aes(x = 2017, y = 72), color = 'black', size = 3) +\n annotate(\"text\", x = 1800, y = 31, label = \"1800\\n31 years\", hjust = -0.2, vjust = 1.5, size = 4) +\n annotate(\"text\", x = 2017, y = 72, label = \"2017\\n72 years\", hjust = 1.2, vjust = -0.5, size = 4) +\n theme_minimal()\n\nWarning in geom_point(aes(x = 1800, y = 31), color = \"black\", size = 3): All aesthetics have length 1, but the data has 301 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\nWarning in geom_point(aes(x = 2017, y = 72), color = \"black\", size = 3): All aesthetics have length 1, but the data has 301 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\n\n\nMy edits\nThe main changes:\n- Small variables name fix\n- Rotating annotations\n- A few cosmetic fixes\n\n# Load necessary library\nlibrary(ggplot2)\nlibrary(here)\nlibrary(tidyr)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Load the data\ndata &lt;- read.csv(data_location)\n\n\n#a little cleaning\ndata1 = data %&gt;% \n  filter(time &lt; 2018)\n\n\n# Create the plot\nggplot(data1, aes(x = time, y = Life.expectancy)) +\n  geom_line(color = 'black', size=.75) +\n  geom_ribbon(aes(ymin = 0, ymax = Life.expectancy), fill = 'black', alpha = 0.1) +\n  labs(title = 'AVERAGE LIFE EXPECTANCY FROM 1800 TO TODAY', x = 'Year', y = 'Life Expectancy') +\n  annotate(\"text\", x = 1877, y = 35, label = \"Famine\", size = 4, hjust = 0, angle = 90) +\n  annotate(\"text\", x = 1918, y = 40, label = \"Spanish flu\", size = 4, hjust = 0, angle = 90) +\n  annotate(\"text\", x = 1941, y = 50, label = \"World War II\", size = 4, hjust = 0, angle = 90) +\n  geom_point(aes(x = 1800, y = 31), color = 'black', size = 3) +\n  geom_point(aes(x = 2017, y = 72), color = 'black', size = 3) +\n  annotate(\"text\", x = 1806, y = 43, label = \"1800\", vjust = 1.5, size = 4) +\n  annotate(\"text\", x = 2011, y = 75, label = \"2017\", hjust = 1.2, vjust = -0.5, size = 4) +\n  annotate(\"text\", x = 2017, y = 70, label = \"72 years\", hjust = 1.2, vjust = -0.5, size = 6) +\n  annotate(\"text\", x = 1817, y = 40, label = \"31 years\", vjust = 1.5, size = 6) +\n\n  theme_minimal()+\n  theme(panel.grid = element_blank(), axis.line = element_line(colour = \"black\"))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning in geom_point(aes(x = 1800, y = 31), color = \"black\", size = 3): All aesthetics have length 1, but the data has 218 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\nWarning in geom_point(aes(x = 2017, y = 72), color = \"black\", size = 3): All aesthetics have length 1, but the data has 218 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nAttaching for final comparison \n\n\nCreating Table\nThe prompt for this code was fairly straightforward\n\n\nInitial Code from Chat-GPT\nI just changed the data reading code so it could run properly\n\n#install.packages(\"knitr\")\nlibrary(knitr)\n\nWarning: package 'knitr' was built under R version 4.3.3\n\n# Sample data\ndata &lt;- read.csv(data_location)\n\n# Create a professional-looking table\nkable(data[1:10, ], caption = \"Sample Life Expectancy Data\")\n\n\nSample Life Expectancy Data\n\n\ngeo\nname\ntime\nLife.expectancy\n\n\n\n\nworld\nWorld\n1800\n30.64173\n\n\nworld\nWorld\n1801\n30.71239\n\n\nworld\nWorld\n1802\n30.60052\n\n\nworld\nWorld\n1803\n30.27759\n\n\nworld\nWorld\n1804\n30.19749\n\n\nworld\nWorld\n1805\n30.78082\n\n\nworld\nWorld\n1806\n30.79082\n\n\nworld\nWorld\n1807\n30.73985\n\n\nworld\nWorld\n1808\n30.70976\n\n\nworld\nWorld\n1809\n30.73241\n\n\n\n\n\nThis code will not run because it using an old method\n\n#install.packages(\"gt\")\n\n#library(gt)\n\n# Sample data\n#data_location &lt;- here(\"presentation-exercise\",\"Life_expectancy.csv\")\n#data &lt;- read.csv(data_location)\n\n\n# Create a professional-looking table with gt\n#gt_table &lt;- gt(data[1:10, ]) %&gt;%\n # tab_header(\n  #  title = \"Sample Life Expectancy Data\",\n   # subtitle = \"First 10 rows of the dataset\"\n  #) %&gt;%\n  #fmt_number(\n   # columns = vars(`Life expectancy `),\n    #decimals = 2\n#  ) %&gt;%\n  #tab_options(\n   # table.font.names = \"Arial\",\n    #table.border.top.width = px(2),\n    #table.border.bottom.width = px(2)\n#  )\n\n# Display the table\n#print(gt_table)\n\n\n\n\nMy edits\n\n#install.packages(\"gt\")\n\nlibrary(gt)\n\nWarning: package 'gt' was built under R version 4.3.3\n\n# Sample data\ndata &lt;- read.csv('Life_expectancy.csv')\n\n# Create a professional-looking table with gt\ngt_table &lt;- gt(data[1:10,3:4 ]) %&gt;%\n   cols_label(\n    Life.expectancy = \"Life Expectancy\",\n    time = \"Year\"\n  ) %&gt;% \n   tab_header(\n    title = \"Sample Life Expectancy Data\",\n    subtitle = \"First 10 rows of the dataset\"\n  ) %&gt;%\n  fmt_number(\n    columns = c(\"Life.expectancy\"),\n    decimals = 2\n  ) %&gt;%\n  tab_options(\n    table.font.names = \"Arial\",\n    table.border.top.width = px(2),\n    table.border.bottom.width = px(2)\n  )\n\n# Display the table\ngt_table\n\n\n\n\n\n\n\n\nSample Life Expectancy Data\n\n\nFirst 10 rows of the dataset\n\n\nYear\nLife Expectancy\n\n\n\n\n1800\n30.64\n\n\n1801\n30.71\n\n\n1802\n30.60\n\n\n1803\n30.28\n\n\n1804\n30.20\n\n\n1805\n30.78\n\n\n1806\n30.79\n\n\n1807\n30.74\n\n\n1808\n30.71\n\n\n1809\n30.73"
  },
  {
    "objectID": "starter-analysis-exercise/code/analysis-code/readme.html",
    "href": "starter-analysis-exercise/code/analysis-code/readme.html",
    "title": "Antonio Flores - Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory analysis and statistical analysis on the processed/cleaned data. The code produces a few tables and figures, which are saved in the results folder.\nIt’s the same code done 3 times:\n\nFirst, there is an R script that you can run which does all the computations.\nSecond, there is a Quarto file which contains exactly the same code as the R script.\nThird, my current favorite, is a Quarto file with an approach where the code is pulled in from the R script and run.\n\nThe last version has the advantage of having code in one place for easy writing/debugging, and then being able to pull the code into the Quarto file for a nice combination of text/commentary and code.\nEach way of doing this is a reasonable approach, pick whichever one you prefer or makes the most sense for your setup. Whichever approach you choose, add ample documentation/commentary so you and others can easily understand what’s going on and what is done."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda.html",
    "href": "starter-analysis-exercise/code/eda-code/eda.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nhere() starts at C:/Users/crew_/OneDrive/Escritorio/Guille/UTSA Masters/MSDA/DA6833/PracticumII-Course/antonioflores-P2-portfolio\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\n\nWarning: package 'skimr' was built under R version 4.3.3\n\nlibrary(ggplot2)\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          3     \n_______________________          \nColumn type frequency:           \n  factor                   1     \n  numeric                  2     \n________________________         \nGroup variables            None  \n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean   sd  p0 p25 p50 p75 p100 hist \n1 Height                0             1 166.  16.0 133 156 166 178  183 ▂▁▃▃▇\n2 Weight                0             1  70.1 21.2  45  55  70  80  110 ▇▂▃▂▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda2.html",
    "href": "starter-analysis-exercise/code/eda-code/eda2.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nhere() starts at C:/Users/crew_/OneDrive/Escritorio/Guille/UTSA Masters/MSDA/DA6833/PracticumII-Course/antonioflores-P2-portfolio\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\n\nWarning: package 'skimr' was built under R version 4.3.3\n\nlibrary(ggplot2)\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          5     \n_______________________          \nColumn type frequency:           \n  character                1     \n  factor                   1     \n  numeric                  3     \n________________________         \nGroup variables            None  \n\n── Variable type: character ────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate min max empty n_unique whitespace\n1 Hair_Color            0             1   4   6     0        4          0\n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean   sd  p0 p25 p50 p75 p100 hist \n1 Height                0             1 166.  16.0 133 156 166 178  183 ▂▁▃▃▇\n2 Weight                0             1  70.1 21.2  45  55  70  80  110 ▇▂▃▂▂\n3 Age                   0             1  49.2 26.0  15  24  55  70   89 ▇▁▇▅▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\nBoxplot - Hair_Color x Height\n\np5 &lt;- ggplot(mydata, aes(x=Hair_Color, y=Height)) + \n  geom_boxplot()\np5\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-hair-boxplot.png\")\nggsave(filename = figure_file, plot=p5) \n\nSaving 7 x 5 in image\n\n\nScatterplot - Weight x Age\n\np6 = ggplot(mydata, aes(x = Weight, y = Age)) +      geom_point()\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"age-weight-scatterplot.png\")\nggsave(filename = figure_file, plot=p6) \n\nSaving 7 x 5 in image\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/readme.html",
    "href": "starter-analysis-exercise/code/eda-code/readme.html",
    "title": "Antonio Flores - Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory data analysis (EDA) on the processed/cleaned data. The code produces a few tables and figures, which are saved in the appropriate results sub-folder."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \n\nWarning: package 'skimr' was built under R version 4.3.3\n\nlibrary(here) #to set paths\n\nhere() starts at C:/Users/crew_/OneDrive/Escritorio/Guille/UTSA Masters/MSDA/DA6833/PracticumII-Course/antonioflores-P2-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 3 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`      \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                 \n1 Height          height in centimeters                 numeric value &gt;0 or NA\n2 Weight          weight in kilograms                   numeric value &gt;0 or NA\n3 Gender          identified gender (male/female/other) M/F/O/NA              \n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 3\n$ Height &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155\", …\n$ Weight &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\", \"M…\n\nsummary(rawdata)\n\n    Height              Weight          Gender         \n Length:14          Min.   :  45.0   Length:14         \n Class :character   1st Qu.:  55.0   Class :character  \n Mode  :character   Median :  70.0   Mode  :character  \n                    Mean   : 602.7                     \n                    3rd Qu.:  90.0                     \n                    Max.   :7000.0                     \n                    NA's   :1                          \n\nhead(rawdata)\n\n# A tibble: 6 × 3\n  Height Weight Gender\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt; \n1 180        80 M     \n2 175        70 O     \n3 sixty      60 F     \n4 178        76 F     \n5 192        90 NA    \n6 6          55 F     \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55\n70\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\nhist(d1$Height)\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \n\nWarning: package 'skimr' was built under R version 4.3.3\n\nlibrary(here) #to set paths\n\nhere() starts at C:/Users/crew_/OneDrive/Escritorio/Guille/UTSA Masters/MSDA/DA6833/PracticumII-Course/antonioflores-P2-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata2.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 5 × 3\n  `Variable Name` `Variable Definition`                         `Allowed Values`\n  &lt;chr&gt;           &lt;chr&gt;                                         &lt;chr&gt;           \n1 Height          height in centimeters                         numeric value &gt;…\n2 Weight          weight in kilograms                           numeric value &gt;…\n3 Gender          identified gender (male/female/other)         M/F/O/NA        \n4 Age             Age in years                                  numeric value &gt;…\n5 Hair_Color      indentified hair colors (black/blonde/brown/… black/blonde/br…\n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 5\n$ Height     &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"15…\n$ Weight     &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender     &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\"…\n$ Age        &lt;dbl&gt; 55, 72, 30, 24, 41, 89, 15, 18, 21, 29, 39, 45, 55, 70\n$ Hair_Color &lt;chr&gt; \"brown\", \"black\", \"brown\", \"blonde\", \"red\", \"gray\", \"brown\"…\n\nsummary(rawdata)\n\n    Height              Weight          Gender               Age       \n Length:14          Min.   :  45.0   Length:14          Min.   :15.00  \n Class :character   1st Qu.:  55.0   Class :character   1st Qu.:25.25  \n Mode  :character   Median :  70.0   Mode  :character   Median :40.00  \n                    Mean   : 602.7                      Mean   :43.07  \n                    3rd Qu.:  90.0                      3rd Qu.:55.00  \n                    Max.   :7000.0                      Max.   :89.00  \n                    NA's   :1                                          \n  Hair_Color       \n Length:14         \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n                   \n\nhead(rawdata)\n\n# A tibble: 6 × 5\n  Height Weight Gender   Age Hair_Color\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;     \n1 180        80 M         55 brown     \n2 175        70 O         72 black     \n3 sixty      60 F         30 brown     \n4 178        76 F         24 blonde    \n5 192        90 NA        41 red       \n6 6          55 F         89 gray      \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nHair_Color\n0\n1\n3\n6\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55.00\n70\n90\n7000\n▇▁▁▁▁\n\n\nAge\n0\n1.00\n43.07\n22.56\n15\n25.25\n40\n55\n89\n▇▅▅▃▂\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nHair_Color\n0\n1\n3\n6\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nAge\n0\n1.00\n44.08\n23.15\n15\n24.00\n41\n55\n89\n▇▃▅▃▂\n\n\n\n\nhist(d1$Height)\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nHair_Color\n0\n1\n3\n6\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nAge\n0\n1.00\n44.08\n23.15\n15\n24.00\n41\n55\n89\n▇▃▅▃▂\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nHair_Color\n0\n1\n3\n6\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179.0\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85.0\n110\n▇▂▃▃▂\n\n\nAge\n0\n1\n45.91\n24.78\n15\n22.5\n45\n62.5\n89\n▇▂▆▃▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHair_Color\n0\n1\n3\n6\n0\n5\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179.0\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85.0\n110\n▇▂▃▃▂\n\n\nAge\n0\n1\n45.91\n24.78\n15\n22.5\n45\n62.5\n89\n▇▂▆▃▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHair_Color\n0\n1\n4\n6\n0\n4\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nAge\n0\n1\n49.22\n25.98\n15\n24\n55\n70\n89\n▇▁▇▅▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/readme.html",
    "href": "starter-analysis-exercise/code/processing-code/readme.html",
    "title": "Antonio Flores - Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code for processing data.\nCurrently, there is just a single Quarto file to illustrate how the processing can look like.\nInstead of a Quarto file that contains code, it is also possible to use R scripts or a combination of R scripts and Quarto code. Those approaches are illustrated in the full dataanalysis-template repository."
  },
  {
    "objectID": "starter-analysis-exercise/code/readme.html",
    "href": "starter-analysis-exercise/code/readme.html",
    "title": "Antonio Flores - Data Analysis Portfolio",
    "section": "",
    "text": "Place your various R or Quarto files in the appropriate folders.\nYou can either have fewer large scripts, or multiple scripts that do only specific actions. Those can be R or Quarto files. In either case, document the scripts and what goes on in them so well that someone else (including future you) can easily figure out what is happening.\nThe scripts should load the appropriate data (e.g. raw or processed), perform actions, and save results (e.g. processed data, figures, computed values) in the appropriate folders. Document somewhere what inputs each script takes and where output is placed.\nIf scripts need to be run in a specific order, document this. Either as comments in the script, or in a separate text file such as this readme file. Ideally of course in both locations.\nDepending on your specific project, you might want to have further folders/sub-folders."
  },
  {
    "objectID": "starter-analysis-exercise/data/raw-data/readme.html",
    "href": "starter-analysis-exercise/data/raw-data/readme.html",
    "title": "Antonio Flores - Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains a simple made-up data-set in an Excel file.\nIt contains the variables Height, Weight and Gender of a few imaginary individuals.\nThe dataset purposefully contains some faulty entries that need to be cleaned.\nGenerally, any dataset should contain some meta-data explaining what each variable in the dataset is. (This is often called a Codebook.) For this simple example, the codebook is given as a second sheet in the Excel file.\nThis raw data-set should generally not be edited by hand. It should instead be loaded and processed/cleaned using code."
  },
  {
    "objectID": "starter-analysis-exercise/data/readme.html",
    "href": "starter-analysis-exercise/data/readme.html",
    "title": "Antonio Flores - Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all data at various stages.\nThis data is being loaded/manipulated/changed/saved with code from the code folders.\nYou should place the raw data in the raw_data folder and not edit it. Ever!\nIdeally, load the raw data into R and do all changes there with code, so everything is automatically reproducible and documented.\nSometimes, you need to edit the files in the format you got. For instance, Excel files are sometimes so poorly formatted that it’s close to impossible to read them into R, or the persons you got the data from used color to code some information, which of course won’t import into R. In those cases, you might have to make modifications in a software other than R. If you need to make edits in whatever format you got the data (e.g. Excel), make a copy and place those copies in a separate folder, AND ONLY EDIT THOSE COPIES. Also, write down somewhere the edits you made.\nAdd as many sub-folders as suitable. If you only have a single processing step, one sub-folder for processed data is enough. If you have multiple stages of cleaning and processing, additional sub-folders might be useful. Adjust based on the complexity of your project.\nI suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data:\nhttp://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata"
  },
  {
    "objectID": "starter-analysis-exercise/products/readme.html",
    "href": "starter-analysis-exercise/products/readme.html",
    "title": "Antonio Flores - Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all the products of your project.\nFor a classical academic project, this will be a peer-reviewed manuscript, and should be placed into a manuscript folder.\nFor our case, since we’ll want to put it on the website, we call it a report.\nOften you need a library of references in bibtex format, as well as a CSL style file that determines reference formatting. Since those files might be used by several of the products, I’m placing them in the main products folder. Feel free to re-organize."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "",
    "text": "ARIANA ALVERADO contributed to this exercise.\nThe structure below is one possible setup for a data analysis project (including the course project). For a manuscript, adjust as needed. You don’t need to have exactly these sections, but the content covering those sections should be addressed.\nThis uses MS Word as output format. See here for more information. You can switch to other formats, like html or pdf. See the Quarto documentation for other formats."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.1 General Background Information",
    "text": "2.1 General Background Information\nProvide enough background on your topic that others can understand the why and how of your analysis"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.2 Description of data and data source",
    "text": "2.2 Description of data and data source\nAdded two new variables:\n1) Age - numeric variable\n2) Hair_Color - categorical variable"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.3 Questions/Hypotheses to be addressed",
    "text": "2.3 Questions/Hypotheses to be addressed\nState the research questions you plan to answer with this analysis.\nTo cite other work (important everywhere, but likely happens first in introduction), make sure your references are in the bibtex file specified in the YAML header above (here dataanalysis_template_references.bib) and have the right bibtex key. Then you can include like this:\nExamples of reproducible research projects can for instance be found in (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, Shen, & Handel, 2020)"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.1 Data aquisition",
    "text": "3.1 Data aquisition\nAs applicable, explain where and how you got the data. If you directly import the data from an online source, you can combine this section with the next."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.2 Data import and cleaning",
    "text": "3.2 Data import and cleaning\nWrite code that reads in the file and cleans it so it’s ready for analysis. Since this will be fairly long code for most datasets, it might be a good idea to have it in one or several R scripts. If that is the case, explain here briefly what kind of cleaning/processing you do, and provide more details and well documented code somewhere (e.g. as supplement in a paper). All materials, including files that contain code, should be commented well so everyone can follow along."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.3 Statistical analysis",
    "text": "3.3 Statistical analysis\nExplain anything related to your statistical analyses."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.1 Exploratory/Descriptive analysis",
    "text": "4.1 Exploratory/Descriptive analysis\nUse a combination of text/tables/figures to explore and describe your data. Show the most important descriptive results here. Additional ones should go in the supplement. Even more can be in the R and Quarto files that are part of your project.\nTable 1 shows a summary of the data.\nNote the loading of the data providing a relative path using the ../../ notation. (Two dots means a folder up). You never want to specify an absolute path like C:\\ahandel\\myproject\\results\\ because if you share this with someone, it won’t work for them since they don’t have that path. You can also use the here R package to create paths. See examples of that below. I recommend the here package, but I’m showing the other approach here just in case you encounter it.\n\n\n\n\nTable 1: Data summary table.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_type\nskim_variable\nn_missing\ncomplete_rate\ncharacter.min\ncharacter.max\ncharacter.empty\ncharacter.n_unique\ncharacter.whitespace\nfactor.ordered\nfactor.n_unique\nfactor.top_counts\nnumeric.mean\nnumeric.sd\nnumeric.p0\nnumeric.p25\nnumeric.p50\nnumeric.p75\nnumeric.p100\nnumeric.hist\n\n\n\n\ncharacter\nHair_Color\n0\n1\n4\n6\n0\n4\n0\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nfactor\nGender\n0\n1\nNA\nNA\nNA\nNA\nNA\nFALSE\n3\nM: 4, F: 3, O: 2\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nnumeric\nHeight\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n165.66667\n15.97655\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nnumeric\nWeight\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n70.11111\n21.24526\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nnumeric\nAge\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n49.22222\n25.97969\n15\n24\n55\n70\n89\n▇▁▇▅▂"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.2 Basic statistical analysis",
    "text": "4.2 Basic statistical analysis\nTo get some further insight into your data, if reasonable you could compute simple statistics (e.g. simple models with 1 predictor) to look for associations between your outcome(s) and each individual predictor variable. Though note that unless you pre-specified the outcome and main exposure, any “p&lt;0.05 means statistical significance” interpretation is not valid.\nFigure 1 shows a scatterplot figure produced by one of the R scripts.\n\n\n\n\n\n\n\n\nFigure 1: Height and weight stratified by gender.\n\n\n\n\n\nFigure 2 shows a boxplot figure measuring height, grouped by hair color.\n\n\n\n\n\n\n\n\nFigure 2: Height and hair color displayed on boxplot.\n\n\n\n\n\nFigure 3 shows a scatterplot measuring Age by Weight.\n\n\n\n\n\n\n\n\nFigure 3: Age and weight displayed on a scatterplot."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.3 Full analysis",
    "text": "4.3 Full analysis\nUse one or several suitable statistical/machine learning methods to analyze your data and to produce meaningful figures, tables, etc. This might again be code that is best placed in one or several separate R scripts that need to be well documented. You want the code to produce figures and data ready for display as tables, and save those. Then you load them here.\nExample Table 2 shows a summary of a linear model fit.\n\n\n\n\nTable 2: Linear model fit table.\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n149.2726967\n23.3823360\n6.3839942\n0.0013962\n\n\nWeight\n0.2623972\n0.3512436\n0.7470519\n0.4886517\n\n\nGenderM\n-2.1244913\n15.5488953\n-0.1366329\n0.8966520\n\n\nGenderO\n-4.7644739\n19.0114155\n-0.2506112\n0.8120871\n\n\n\n\n\n\n\n\nTable 3 shows another summary of a linear model fit. This model uses height as the outcome and age and hair color as the predictors.\n\n\n\n\nTable 3: Linear model fit table 2.\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n136.6113074\n40.6766470\n3.3584702\n0.0283450\n\n\nAge\n0.5331763\n0.5061893\n1.0533141\n0.3516175\n\n\nHair_Colorblonde\n24.1919906\n33.9986276\n0.7115579\n0.5160360\n\n\nHair_Colorbrown\n-0.5212996\n25.1170129\n-0.0207548\n0.9844353\n\n\nHair_Colorgray\n-10.4988221\n22.4470831\n-0.4677143\n0.6643339"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.1 Summary and Interpretation",
    "text": "5.1 Summary and Interpretation\nSummarize what you did, what you found and what it means."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.2 Strengths and Limitations",
    "text": "5.2 Strengths and Limitations\nDiscuss what you perceive as strengths and limitations of your analysis."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.3 Conclusions",
    "text": "5.3 Conclusions\nWhat are the main take-home messages?\nInclude citations in your Rmd file using bibtex, the list of references will automatically be placed at the end\nThis paper (Leek & Peng, 2015) discusses types of analyses.\nThese papers (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, et al., 2020) are good examples of papers published using a fully reproducible setup similar to the one shown in this template.\nNote that this cited reference will show up at the end of the document, the reference formatting is determined by the CSL file specified in the YAML header. Many more style files for almost any journal are available. You also specify the location of your bibtex reference file in the YAML. You can call your reference file anything you like, I just used the generic word references.bib but giving it a more descriptive name is probably better."
  },
  {
    "objectID": "starter-analysis-exercise/results/figures/readme.html",
    "href": "starter-analysis-exercise/results/figures/readme.html",
    "title": "Antonio Flores - Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all figures.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/results/readme.html",
    "href": "starter-analysis-exercise/results/readme.html",
    "title": "Antonio Flores - Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains results produced by the code, such as figures and tables.\nDepending on the size and type of your project, you can either place it all in a single folder or create sub-folders. For instance you could create a folder for figures, another for tables. Or you could create a sub-folder for dataset 1, another for dataset 2. Or you could have a subfolder for exploratory analysis, another for final analysis. The options are endless, choose whatever makes sense for your project. For this template, there is just a a single folder, but having sub-folders is often a good idea."
  },
  {
    "objectID": "starter-analysis-exercise/results/tables-files/readme.html",
    "href": "starter-analysis-exercise/results/tables-files/readme.html",
    "title": "Antonio Flores - Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all tables (generally stored as Rds files) and other files.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "# Option 1: tidytuesdayR package \n#install.packages(\"tidytuesdayR\")\nlibrary(tidytuesdayR)\n\nWarning: package 'tidytuesdayR' was built under R version 4.3.3\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, week = 30)\n\n--- Compiling #TidyTuesday Information for 2024-07-23 ----\n\n\n--- There are 6 files available ---\n\n\n--- Starting Download ---\n\n\n\n    Downloading file 1 of 6: `auditions.csv`\n    Downloading file 2 of 6: `eliminations.csv`\n    Downloading file 3 of 6: `finalists.csv`\n    Downloading file 4 of 6: `ratings.csv`\n    Downloading file 5 of 6: `seasons.csv`\n    Downloading file 6 of 6: `songs.csv`\n\n\n--- Download complete ---\n\nauditions &lt;- tuesdata$auditions\neliminations &lt;- tuesdata$eliminations\nfinalists &lt;- tuesdata$finalists\nratings &lt;- tuesdata$ratings\nseasons &lt;- tuesdata$seasons\nsongs &lt;- tuesdata$songs\nhead(auditions)\n\n# A tibble: 6 × 12\n  season audition_date_start audition_date_end audition_city      audition_venue\n   &lt;dbl&gt; &lt;date&gt;              &lt;date&gt;            &lt;chr&gt;              &lt;chr&gt;         \n1      1 2002-04-20          2002-04-22        Los Angeles, Cali… Westin Bonave…\n2      1 2002-04-23          2002-04-25        Seattle, Washingt… Hyatt Regency…\n3      1 2002-04-26          2002-04-28        Chicago, Illinois  Congress Plaz…\n4      1 2002-04-29          2002-05-01        New York City, Ne… Millenium Hil…\n5      1 2002-05-03          2002-05-05        Atlanta, Georgia   AmericasMart/…\n6      1 2002-05-05          2002-05-07        Dallas, Texas      Wyndham Anato…\n# ℹ 7 more variables: episodes &lt;chr&gt;, episode_air_date &lt;chr&gt;,\n#   callback_venue &lt;chr&gt;, callback_date_start &lt;date&gt;, callback_date_end &lt;date&gt;,\n#   tickets_to_hollywood &lt;dbl&gt;, guest_judge &lt;chr&gt;\n\nhead(eliminations)\n\n# A tibble: 6 × 46\n  season place gender contestant        top_36 top_36_2 top_36_3 top_36_4 top_32\n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;             &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt;    &lt;chr&gt;    &lt;chr&gt; \n1      1 1     Female Kelly Clarkson    &lt;NA&gt;   &lt;NA&gt;     &lt;NA&gt;     &lt;NA&gt;     &lt;NA&gt;  \n2      1 2     Male   Justin Guarini    &lt;NA&gt;   &lt;NA&gt;     &lt;NA&gt;     &lt;NA&gt;     &lt;NA&gt;  \n3      1 3     Female Nikki McKibbin    &lt;NA&gt;   &lt;NA&gt;     &lt;NA&gt;     &lt;NA&gt;     &lt;NA&gt;  \n4      1 4     Female Tamyra Gray       &lt;NA&gt;   &lt;NA&gt;     &lt;NA&gt;     &lt;NA&gt;     &lt;NA&gt;  \n5      1 5     Male   R. J. Helton      &lt;NA&gt;   &lt;NA&gt;     &lt;NA&gt;     &lt;NA&gt;     &lt;NA&gt;  \n6      1 6     Female Christina Christ… &lt;NA&gt;   &lt;NA&gt;     &lt;NA&gt;     &lt;NA&gt;     &lt;NA&gt;  \n# ℹ 37 more variables: top_32_2 &lt;chr&gt;, top_32_3 &lt;chr&gt;, top_32_4 &lt;chr&gt;,\n#   top_30 &lt;chr&gt;, top_30_2 &lt;chr&gt;, top_30_3 &lt;chr&gt;, top_25 &lt;chr&gt;, top_25_2 &lt;chr&gt;,\n#   top_25_3 &lt;chr&gt;, top_24 &lt;chr&gt;, top_24_2 &lt;chr&gt;, top_24_3 &lt;chr&gt;, top_20 &lt;chr&gt;,\n#   top_20_2 &lt;chr&gt;, top_16 &lt;chr&gt;, top_14 &lt;chr&gt;, top_13 &lt;chr&gt;, top_12 &lt;chr&gt;,\n#   top_11 &lt;chr&gt;, top_11_2 &lt;chr&gt;, wildcard &lt;chr&gt;, comeback &lt;lgl&gt;, top_10 &lt;chr&gt;,\n#   top_9 &lt;chr&gt;, top_9_2 &lt;chr&gt;, top_8 &lt;chr&gt;, top_8_2 &lt;chr&gt;, top_7 &lt;chr&gt;,\n#   top_7_2 &lt;chr&gt;, top_6 &lt;chr&gt;, top_6_2 &lt;chr&gt;, top_5 &lt;chr&gt;, top_5_2 &lt;chr&gt;, …\n\nhead(finalists)\n\n# A tibble: 6 × 6\n  Contestant          Birthday  Birthplace           Hometown Description Season\n  &lt;chr&gt;               &lt;chr&gt;     &lt;chr&gt;                &lt;chr&gt;    &lt;chr&gt;        &lt;dbl&gt;\n1 Kelly Clarkson      24-Apr-82 Fort Worth, Texas    Burleso… \"She perfo…      1\n2 Justin Guarini      28-Oct-78 Columbus, Georgia    Doylest… \"He perfor…      1\n3 Nikki McKibbin      28-Sep-78 Grand Prairie, Texas &lt;NA&gt;     \"She had p…      1\n4 Tamyra Gray         26-Jul-79 Takoma Park, Maryla… Atlanta… \"She had a…      1\n5 R. J. Helton        17-May-81 Pasadena, Texas      Cumming… \"J. Helton…      1\n6 Christina Christian 21-Jun-81 Brooklyn, New York   &lt;NA&gt;     \".Christin…      1\n\nhead(ratings)\n\n# A tibble: 6 × 17\n  season show_number episode    airdate `18_49_rating_share` viewers_in_millions\n   &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;   &lt;chr&gt;                              &lt;dbl&gt;\n1      1           1 Auditions  June 1… 4.8                                 9.85\n2      1           2 Hollywood… June 1… 5.2                                11.2 \n3      1           3 Top 30: G… June 1… 5.2                                10.3 \n4      1           4 Top 30: G… June 1… 4.7                                 9.47\n5      1           5 Top 30: G… June 2… 4.5                                 9.08\n6      1           6 Top 30: G… June 2… 4.2                                 8.53\n# ℹ 11 more variables: timeslot_et &lt;chr&gt;, dvr_18_49 &lt;chr&gt;,\n#   dvr_viewers_millions &lt;chr&gt;, total_18_49 &lt;chr&gt;,\n#   total_viewers_millions &lt;chr&gt;, weekrank &lt;chr&gt;, ref &lt;lgl&gt;, share &lt;chr&gt;,\n#   nightlyrank &lt;dbl&gt;, rating_share_households &lt;chr&gt;, rating_share &lt;chr&gt;\n\nhead(seasons)\n\n# A tibble: 6 × 10\n  season winner     runner_up original_release original_network hosted_by judges\n   &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;chr&gt;            &lt;chr&gt;            &lt;chr&gt;     &lt;chr&gt; \n1      1 Kelly Cla… Justin G… June 11 (2002-0… Fox              Ryan Sea… Paula…\n2      2 Ruben Stu… Clay Aik… January 21 (200… Fox              Ryan Sea… Paula…\n3      3 Fantasia … Diana De… January 19 (200… Fox              Ryan Sea… Paula…\n4      4 Carrie Un… Bo Bice   January 18 (200… Fox              Ryan Sea… Paula…\n5      5 Taylor Hi… Katharin… January 17 (200… Fox              Ryan Sea… Paula…\n6      6 Jordin Sp… Blake Le… January 16 (200… Fox              Ryan Sea… Paula…\n# ℹ 3 more variables: no_of_episodes &lt;dbl&gt;, finals_venue &lt;chr&gt;, mentor &lt;chr&gt;\n\nhead(songs)\n\n# A tibble: 6 × 8\n  season    week                 order contestant song  artist song_theme result\n  &lt;chr&gt;     &lt;chr&gt;                &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;      &lt;chr&gt; \n1 Season_01 20020618_top_30_gro…     1 Tamyra Gr… And … Jenni… &lt;NA&gt;       Advan…\n2 Season_01 20020618_top_30_gro…     2 Jim Verra… When… Doris… &lt;NA&gt;       Advan…\n3 Season_01 20020618_top_30_gro…     3 Adriel He… I'll… Edwin… &lt;NA&gt;       Elimi…\n4 Season_01 20020618_top_30_gro…     4 Rodesia E… Dayd… The M… &lt;NA&gt;       Elimi…\n5 Season_01 20020618_top_30_gro…     5 Natalie B… Crazy Patsy… &lt;NA&gt;       Elimi…\n6 Season_01 20020618_top_30_gro…     6 Brad Estr… Just… James… &lt;NA&gt;       Elimi…\nlibrary(tidyverse)\nclean_songs = songs %&gt;% \n  mutate(artist = as.factor(artist)) %&gt;% \n  mutate(result = as.factor(result))\n\nsummary(clean_songs)\n\n    season              week               order         contestant       \n Length:2429        Length:2429        Min.   : 1.000   Length:2429       \n Class :character   Class :character   1st Qu.: 3.000   Class :character  \n Mode  :character   Mode  :character   Median : 5.000   Mode  :character  \n                                       Mean   : 5.931                     \n                                       3rd Qu.: 8.000                     \n                                       Max.   :40.000                     \n                                                                          \n     song                       artist      song_theme       \n Length:2429        Stevie Wonder  :  56   Length:2429       \n Class :character   The Beatles    :  51   Class :character  \n Mode  :character   Elton John     :  48   Mode  :character  \n                    Queen          :  34                     \n                    Whitney Houston:  32                     \n                    Billy Joel     :  26                     \n                    (Other)        :2182                     \n          result    \n Safe        :1155  \n Eliminated  : 476  \n Advanced    : 217  \n Bottom three:  96  \n Wild Card   :  59  \n (Other)     : 396  \n NA's        :  30\nplot(clean_songs$artist)"
  },
  {
    "objectID": "synthetic-data-exercise/Synthetic_Data.html",
    "href": "synthetic-data-exercise/Synthetic_Data.html",
    "title": "Synthetic Data Project",
    "section": "",
    "text": "library(tidyr)\nlibrary(here)\nlibrary(synthpop) # Primary library needed for creating Synthetic Data\nlibrary(performance) # Using this to test models and compare models\nlibrary(see) #Needed to supplement the above library\nlibrary(corrplot) # Used for Correlation Plot"
  },
  {
    "objectID": "synthetic-data-exercise/Synthetic_Data.html#reading-in-the-data",
    "href": "synthetic-data-exercise/Synthetic_Data.html#reading-in-the-data",
    "title": "Synthetic Data Project",
    "section": "Reading in the Data",
    "text": "Reading in the Data\nI chose a health data set with different bio variables like BMI and Blood Pressure.\n\ndata_location &lt;- here(\"synthetic-data-exercise\",\"Healthcare-Diabetes.csv\")\n\nrawdata &lt;- read.csv(data_location, sep = \",\")"
  },
  {
    "objectID": "synthetic-data-exercise/Synthetic_Data.html#before-generating-new-data-set",
    "href": "synthetic-data-exercise/Synthetic_Data.html#before-generating-new-data-set",
    "title": "Synthetic Data Project",
    "section": "Before generating new data set",
    "text": "Before generating new data set\nWe want to create some models to test with both data sets. Even thought the synthetic data will have different data than our original dataset, the results from the models should remain close to the same.\n\n#Using BMI as outcome with Glucose, BP, and Age as predictors\nfit1 = lm(BMI ~  Glucose + BloodPressure + Age,\n          data=rawdata)\n\n(results = summary(fit1))\n\n\nCall:\nlm(formula = BMI ~ Glucose + BloodPressure + Age, data = rawdata)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-34.258  -4.830  -0.362   4.587  45.961 \n\nCoefficients:\n               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   19.750111   0.741469  26.636  &lt; 2e-16 ***\nGlucose        0.052255   0.004672  11.185  &lt; 2e-16 ***\nBloodPressure  0.113870   0.007745  14.703  &lt; 2e-16 ***\nAge           -0.054728   0.012953  -4.225 2.47e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 7.58 on 2764 degrees of freedom\nMultiple R-squared:   0.12, Adjusted R-squared:  0.119 \nF-statistic: 125.6 on 3 and 2764 DF,  p-value: &lt; 2.2e-16\n\n\n\nfit2 = lm(BMI ~  Glucose + BloodPressure + Age,\n          data=rawdata)\n\n(summary(fit2))\n\n\nCall:\nlm(formula = BMI ~ Glucose + BloodPressure + Age, data = rawdata)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-34.258  -4.830  -0.362   4.587  45.961 \n\nCoefficients:\n               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   19.750111   0.741469  26.636  &lt; 2e-16 ***\nGlucose        0.052255   0.004672  11.185  &lt; 2e-16 ***\nBloodPressure  0.113870   0.007745  14.703  &lt; 2e-16 ***\nAge           -0.054728   0.012953  -4.225 2.47e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 7.58 on 2764 degrees of freedom\nMultiple R-squared:   0.12, Adjusted R-squared:  0.119 \nF-statistic: 125.6 on 3 and 2764 DF,  p-value: &lt; 2.2e-16\n\n\nDiscovered this incredibly useful took for visually assessing your model.\n\ncheck_model(fit1)\n\n\n\n\n\n\n\n\n\ncheck_model(fit2)\n\n\n\n\n\n\n\n\nBoth of our models look visually solid. Our prediction lines follows the observed data lines, and our residuals roughly fall long the normality line."
  },
  {
    "objectID": "synthetic-data-exercise/Synthetic_Data.html#modifying-data-slightly-before-we-generate-new-data-set",
    "href": "synthetic-data-exercise/Synthetic_Data.html#modifying-data-slightly-before-we-generate-new-data-set",
    "title": "Synthetic Data Project",
    "section": "",
    "text": "rawdata$Outcome = as.factor(rawdata$Outcome)\ncodebook.syn(rawdata)\n\n$tab\n                   variable   class nmiss perctmiss ndistinct\n1                        Id integer     0         0      2768\n2               Pregnancies integer     0         0        17\n3                   Glucose integer     0         0       136\n4             BloodPressure integer     0         0        47\n5             SkinThickness integer     0         0        53\n6                   Insulin integer     0         0       187\n7                       BMI numeric     0         0       253\n8  DiabetesPedigreeFunction numeric     0         0       523\n9                       Age integer     0         0        52\n10                  Outcome  factor     0         0         2\n               details\n1                     \n2                     \n3                     \n4                     \n5                     \n6                     \n7      Range: 0 - 80.6\n8  Range: 0.078 - 2.42\n9                     \n10             '0' '1'\n\n$labs\nNULL"
  },
  {
    "objectID": "synthetic-data-exercise/Synthetic_Data.html#creating-synthetic-data",
    "href": "synthetic-data-exercise/Synthetic_Data.html#creating-synthetic-data",
    "title": "Synthetic Data Project",
    "section": "Creating Synthetic Data",
    "text": "Creating Synthetic Data\n\nnew_seed = 21 # Setting our seed at a random value\nsynthetic_data = syn(rawdata, \n                     seed = new_seed) #This will give us our synthetic dataset\n\n\nSynthesis\n-----------\n Id Pregnancies Glucose BloodPressure SkinThickness Insulin BMI DiabetesPedigreeFunction Age Outcome\n\n\n\n#cleaning the synthetic dataset\nsynth_data_clean = sdc(synthetic_data, rawdata, \n                       label = \"FAKE DATA\",\n                       rm.replicated.uniques = TRUE)  #This is important! Sometimes, when we create \"fake\" synthetic data, we happen to recreate an actual observation in the original data set. So, in the name of privacy, we remove those observations.\n\nno. of replicated uniques: 4\n\nwrite.syn(synth_data_clean, \n          filename = \"synthetic_diabetes_data\",\n          filetype = \"csv\") #Outputting our synthetic data\n\nSynthetic data exported as csv file(s).\nInformation on synthetic data written to\n  C:/Users/Client/Documents/antonioflores-P2-portfolio/synthetic-data-exercise/synthesis_info_synthetic_diabetes_data.txt"
  },
  {
    "objectID": "synthetic-data-exercise/Synthetic_Data.html#comparing-the-data-sets",
    "href": "synthetic-data-exercise/Synthetic_Data.html#comparing-the-data-sets",
    "title": "Synthetic Data Project",
    "section": "Comparing the Data Sets",
    "text": "Comparing the Data Sets\n\ncompare(synthetic_data, rawdata, stat = \"counts\")\n\n\nComparing counts observed with synthetic\n\n\n\n\n\n\n\n\n\nPress return for next variable(s): \n\n\n\n\n\n\n\n\n\nPress return for next variable(s): \n\n\n\n\n\n\n\n\n\n\nSelected utility measures:\n                             pMSE   S_pMSE df\nId                       0.000028 0.309741  4\nPregnancies              0.000026 0.283048  4\nGlucose                  0.000021 0.229948  4\nBloodPressure            0.000067 0.738437  4\nSkinThickness            0.000222 3.271697  3\nInsulin                  0.000125 2.757808  2\nBMI                      0.000069 0.761283  4\nDiabetesPedigreeFunction 0.000196 2.174107  4\nAge                      0.000150 1.657246  4\nOutcome                  0.000001 0.039977  1\n\n\nWe can easily see that the synthetic dataset (light blue) closely resembles our original data set (dark blue)"
  },
  {
    "objectID": "synthetic-data-exercise/Synthetic_Data.html#testing-associations",
    "href": "synthetic-data-exercise/Synthetic_Data.html#testing-associations",
    "title": "Synthetic Data Project",
    "section": "Testing associations",
    "text": "Testing associations\n\nsynth_fit = lm.synds(BMI ~  Glucose + BloodPressure + Age,\n          data=synthetic_data)\n\ncompare(synth_fit, rawdata)\n\n\nCall used to fit models to the data:\nlm.synds(formula = BMI ~ Glucose + BloodPressure + Age, data = synthetic_data)\n\nDifferences between results based on synthetic and observed data:\n                Synthetic    Observed         Diff Std. coef diff CI overlap\n(Intercept)   19.75878326 19.75011087  0.008672388     0.01169623  0.9970162\nGlucose        0.05770880  0.05225509  0.005453708     1.16738806  0.7021914\nBloodPressure  0.08994052  0.11386986 -0.023929344    -3.08970102  0.2117965\nAge           -0.01893494 -0.05472831  0.035793376     2.76322362  0.2950831\n\nMeasures for one synthesis and 4 coefficients\nMean confidence interval overlap:  0.5515218\nMean absolute std. coef diff:  1.758002\n\nMahalanobis distance ratio for lack-of-fit (target 1.0): 4.61\nLack-of-fit test: 18.42926; p-value 0.001 for test that synthesis model is\ncompatible with a chi-squared test with 4 degrees of freedom.\n\nConfidence interval plot:\n\n\n\n\n\n\n\n\n\nThere are some differences between both data sets, but they are not significant. The P-value of this test is above .05 which in this case tells us there is not a substantial difference between the two model’s results. Assessing the visual chart we also see a fairly close similarity.\n\nsynth_fit2 = lm.synds(DiabetesPedigreeFunction ~  SkinThickness + Insulin + Pregnancies,\n          data=synthetic_data)\n\ncompare(synth_fit2, rawdata)\n\n\nCall used to fit models to the data:\nlm.synds(formula = DiabetesPedigreeFunction ~ SkinThickness + \n    Insulin + Pregnancies, data = synthetic_data)\n\nDifferences between results based on synthetic and observed data:\n                  Synthetic      Observed          Diff Std. coef diff\n(Intercept)    0.4199111517  0.3928253745  2.708578e-02      2.1836294\nSkinThickness  0.0022171649  0.0023947366 -1.775717e-04     -0.4220489\nInsulin        0.0004052427  0.0003978994  7.343269e-06      0.1219856\nPregnancies   -0.0038284710 -0.0009043188 -2.924152e-03     -1.6019283\n              CI overlap\n(Intercept)    0.4429415\nSkinThickness  0.8923325\nInsulin        0.9688807\nPregnancies    0.5913373\n\nMeasures for one synthesis and 4 coefficients\nMean confidence interval overlap:  0.723873\nMean absolute std. coef diff:  1.082398\n\nMahalanobis distance ratio for lack-of-fit (target 1.0): 1.84\nLack-of-fit test: 7.346747; p-value 0.1187 for test that synthesis model is\ncompatible with a chi-squared test with 4 degrees of freedom.\n\nConfidence interval plot:\n\n\n\n\n\n\n\n\n\nFairly similar results, but there appears to be more variation than the previous comparison\nNext, we can assess correlation as a whole.\n\nrawdatacor = cor(rawdata[1:9]) # Original dataset correlation between variables\nsynthdatacor = cor(synthetic_data$syn[1:9]) # Synthetic dataset correlation \ncorrplot(rawdatacor)\n\n\n\n\n\n\n\ncorrplot(synthdatacor)\n\n\n\n\n\n\n\n\nWe can see that these two correlation plots are virtual identical, indicating that the associations between variables stayed the same across the new data set."
  },
  {
    "objectID": "synthetic-data-exercise/Synthetic_Data.html#conclusions",
    "href": "synthetic-data-exercise/Synthetic_Data.html#conclusions",
    "title": "Synthetic Data Project",
    "section": "Conclusions",
    "text": "Conclusions\nOverall, we can conclude that our new synthetic data set maintains the same shape and spread as our original data set while maintaining key associations between variables. If the original data set were a true data from real patients, we have now created an anonymized dataset that can now be used for further analysis."
  },
  {
    "objectID": "synthetic-data-exercise/Synthetic_Data.html#modifying-data-slightly",
    "href": "synthetic-data-exercise/Synthetic_Data.html#modifying-data-slightly",
    "title": "Synthetic Data Project",
    "section": "Modifying data slightly",
    "text": "Modifying data slightly\n\nrawdata$Outcome = as.factor(rawdata$Outcome)\ncodebook.syn(rawdata)\n\n$tab\n                   variable   class nmiss perctmiss ndistinct\n1                        Id integer     0         0      2768\n2               Pregnancies integer     0         0        17\n3                   Glucose integer     0         0       136\n4             BloodPressure integer     0         0        47\n5             SkinThickness integer     0         0        53\n6                   Insulin integer     0         0       187\n7                       BMI numeric     0         0       253\n8  DiabetesPedigreeFunction numeric     0         0       523\n9                       Age integer     0         0        52\n10                  Outcome  factor     0         0         2\n               details\n1                     \n2                     \n3                     \n4                     \n5                     \n6                     \n7      Range: 0 - 80.6\n8  Range: 0.078 - 2.42\n9                     \n10             '0' '1'\n\n$labs\nNULL"
  },
  {
    "objectID": "cdcdata-exercise/code/cdcdata-exercise.html",
    "href": "cdcdata-exercise/code/cdcdata-exercise.html",
    "title": "Data Processing & Cleaning",
    "section": "",
    "text": "library(tidyr)# For simplifying data cleaning\n\nWarning: package 'tidyr' was built under R version 4.3.3\n\nlibrary(here) #For reading in data from absolute path\n\nhere() starts at C:/Users/Client/Documents/antonioflores-P2-portfolio\n\nlibrary(dplyr)# For Piping data\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(ggplot2) # EDA Charts/Graphs\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n#Reading in the Data\ndatalocation = here(\"cdcdata-exercise\", \"data\", \"Center_for_Medicare___Medicaid_Services__CMS____Medicare_Claims_data_20240701.csv\")\ndata = read.csv(datalocation)\nThe dataset comes from the CDC’s data repository and can be accessed with this link. Options exist for exporting via CSV or through the use of an API.\nHeart Disease Stroke Prevention\nThe Center for Medicare & Medicaid Services (CMS) gathers large amounts of health data from Medicare/Medicaid patients. From this data source, indicators have been computed by the CDC’s Division of Heart Disease and Stroke Prevention (DHDSP), and that is the dataset that will be used for this activity.\nBefore Cleaning: Each row contains a single data value for a particular category of a demographic (which is one of Race, Gender, Age) for each topic (Heart Failure, Stroke, etc), for each state, for each year(2016-2021).\nIn other words, for each year, there is a row for each state, for each state there is a row for each topic (5), for every topic there is a row for either percentage or rate, for each of these rows, there is a row for either gender, age, or race, and for each demographic there is one row per option (Male, Female, over75, etc.)\nstr(data)\n\n'data.frame':   33454 obs. of  30 variables:\n $ RowId                     : logi  NA NA NA NA NA NA ...\n $ YearStart                 : int  2016 2017 2018 2019 2020 2021 2017 2021 2019 2018 ...\n $ LocationAbbr              : chr  \"US\" \"US\" \"US\" \"US\" ...\n $ LocationDesc              : chr  \"United States\" \"United States\" \"United States\" \"United States\" ...\n $ DataSource                : chr  \"Medicare\" \"Medicare\" \"Medicare\" \"Medicare\" ...\n $ PriorityArea1             : chr  \"None\" \"None\" \"None\" \"None\" ...\n $ PriorityArea2             : logi  NA NA NA NA NA NA ...\n $ PriorityArea3             : chr  \"None\" \"None\" \"None\" \"None\" ...\n $ PriorityArea4             : logi  NA NA NA NA NA NA ...\n $ Class                     : chr  \"Cardiovascular Diseases\" \"Cardiovascular Diseases\" \"Cardiovascular Diseases\" \"Cardiovascular Diseases\" ...\n $ Topic                     : chr  \"Major Cardiovascular Disease\" \"Major Cardiovascular Disease\" \"Major Cardiovascular Disease\" \"Major Cardiovascular Disease\" ...\n $ Question                  : chr  \"Major cardiovascular disease hospitalization rate among Medicare Fee-For-Service beneficiaries (65+); CMS Medicare\" \"Major cardiovascular disease hospitalization rate among Medicare Fee-For-Service beneficiaries (65+); CMS Medicare\" \"Major cardiovascular disease hospitalization rate among Medicare Fee-For-Service beneficiaries (65+); CMS Medicare\" \"Major cardiovascular disease hospitalization rate among Medicare Fee-For-Service beneficiaries (65+); CMS Medicare\" ...\n $ Data_Value_Type           : chr  \"Crude\" \"Crude\" \"Crude\" \"Crude\" ...\n $ Data_Value_Unit           : chr  \"Rate per 100,000\" \"Rate per 100,000\" \"Rate per 100,000\" \"Rate per 100,000\" ...\n $ Data_Value                : num  2368 2404 2482 5395 4505 ...\n $ Data_Value_Alt            : num  2368 2404 2482 5395 4505 ...\n $ Data_Value_Footnote_Symbol: logi  NA NA NA NA NA NA ...\n $ Data_Value_Footnote       : logi  NA NA NA NA NA NA ...\n $ Low_Confidence_Limit      : num  2318 2358 2439 5382 4493 ...\n $ High_Confidence_Limit     : num  2418 2450 2526 5408 4518 ...\n $ Break_Out_Category        : chr  \"Race\" \"Race\" \"Race\" \"Gender\" ...\n $ Break_Out                 : chr  \"Unknown\" \"Unknown\" \"Unknown\" \"Male\" ...\n $ ClassId                   : chr  \"C1\" \"C1\" \"C1\" \"C1\" ...\n $ TopicId                   : chr  \"T1\" \"T1\" \"T1\" \"T1\" ...\n $ QuestionId                : chr  \"MD101\" \"MD101\" \"MD101\" \"MD101\" ...\n $ Data_Value_TypeID         : chr  \"Crude\" \"Crude\" \"Crude\" \"Crude\" ...\n $ BreakOutCategoryId        : chr  \"BOC04\" \"BOC04\" \"BOC04\" \"BOC02\" ...\n $ BreakOutId                : chr  \"RAC08\" \"RAC08\" \"RAC08\" \"GEN01\" ...\n $ LocationId                : int  59 59 59 59 59 59 59 59 30 59 ...\n $ GeoLocation               : chr  \"\" \"\" \"\" \"\" ...\nsummary(data)\n\n  RowId           YearStart    LocationAbbr       LocationDesc      \n Mode:logical   Min.   :2016   Length:33454       Length:33454      \n NA's:33454     1st Qu.:2017   Class :character   Class :character  \n                Median :2018   Mode  :character   Mode  :character  \n                Mean   :2018                                        \n                3rd Qu.:2020                                        \n                Max.   :2021                                        \n  DataSource        PriorityArea1      PriorityArea2  PriorityArea3     \n Length:33454       Length:33454       Mode:logical   Length:33454      \n Class :character   Class :character   NA's:33454     Class :character  \n Mode  :character   Mode  :character                  Mode  :character  \n                                                                        \n                                                                        \n                                                                        \n PriorityArea4     Class              Topic             Question        \n Mode:logical   Length:33454       Length:33454       Length:33454      \n NA's:33454     Class :character   Class :character   Class :character  \n                Mode  :character   Mode  :character   Mode  :character  \n                                                                        \n                                                                        \n                                                                        \n Data_Value_Type    Data_Value_Unit      Data_Value     Data_Value_Alt  \n Length:33454       Length:33454       Min.   :   0.0   Min.   :   0.0  \n Class :character   Class :character   1st Qu.:   5.1   1st Qu.:   5.1  \n Mode  :character   Mode  :character   Median :  25.0   Median :  25.0  \n                                       Mean   : 845.1   Mean   : 845.1  \n                                       3rd Qu.: 965.5   3rd Qu.: 965.5  \n                                       Max.   :8118.2   Max.   :8118.2  \n Data_Value_Footnote_Symbol Data_Value_Footnote Low_Confidence_Limit\n Mode:logical               Mode:logical        Min.   :  -1.0      \n NA's:33454                 NA's:33454          1st Qu.:   3.5      \n                                                Median :   8.3      \n                                                Mean   : 742.4      \n                                                3rd Qu.: 825.9      \n                                                Max.   :7925.8      \n High_Confidence_Limit Break_Out_Category  Break_Out           ClassId         \n Min.   :   -1.0       Length:33454       Length:33454       Length:33454      \n 1st Qu.:    7.2       Class :character   Class :character   Class :character  \n Median :   92.5       Mode  :character   Mode  :character   Mode  :character  \n Mean   : 1027.8                                                               \n 3rd Qu.: 1212.2                                                               \n Max.   :18238.6                                                               \n   TopicId           QuestionId        Data_Value_TypeID  BreakOutCategoryId\n Length:33454       Length:33454       Length:33454       Length:33454      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n  BreakOutId          LocationId    GeoLocation       \n Length:33454       Min.   : 1.00   Length:33454      \n Class :character   1st Qu.:17.00   Class :character  \n Mode  :character   Median :29.00   Mode  :character  \n                    Mean   :29.56                     \n                    3rd Qu.:44.00                     \n                    Max.   :59.00\nhead(data)\n\n  RowId YearStart LocationAbbr  LocationDesc DataSource PriorityArea1\n1    NA      2016           US United States   Medicare          None\n2    NA      2017           US United States   Medicare          None\n3    NA      2018           US United States   Medicare          None\n4    NA      2019           US United States   Medicare          None\n5    NA      2020           US United States   Medicare          None\n6    NA      2021           US United States   Medicare          None\n  PriorityArea2 PriorityArea3 PriorityArea4                   Class\n1            NA          None            NA Cardiovascular Diseases\n2            NA          None            NA Cardiovascular Diseases\n3            NA          None            NA Cardiovascular Diseases\n4            NA          None            NA Cardiovascular Diseases\n5            NA          None            NA Cardiovascular Diseases\n6            NA          None            NA Cardiovascular Diseases\n                         Topic\n1 Major Cardiovascular Disease\n2 Major Cardiovascular Disease\n3 Major Cardiovascular Disease\n4 Major Cardiovascular Disease\n5 Major Cardiovascular Disease\n6 Major Cardiovascular Disease\n                                                                                                            Question\n1 Major cardiovascular disease hospitalization rate among Medicare Fee-For-Service beneficiaries (65+); CMS Medicare\n2 Major cardiovascular disease hospitalization rate among Medicare Fee-For-Service beneficiaries (65+); CMS Medicare\n3 Major cardiovascular disease hospitalization rate among Medicare Fee-For-Service beneficiaries (65+); CMS Medicare\n4 Major cardiovascular disease hospitalization rate among Medicare Fee-For-Service beneficiaries (65+); CMS Medicare\n5 Major cardiovascular disease hospitalization rate among Medicare Fee-For-Service beneficiaries (65+); CMS Medicare\n6 Major cardiovascular disease hospitalization rate among Medicare Fee-For-Service beneficiaries (65+); CMS Medicare\n  Data_Value_Type  Data_Value_Unit Data_Value Data_Value_Alt\n1           Crude Rate per 100,000     2367.6         2367.6\n2           Crude Rate per 100,000     2403.7         2403.7\n3           Crude Rate per 100,000     2482.3         2482.3\n4           Crude Rate per 100,000     5395.0         5395.0\n5           Crude Rate per 100,000     4505.4         4505.4\n6           Crude Rate per 100,000     4694.6         4694.6\n  Data_Value_Footnote_Symbol Data_Value_Footnote Low_Confidence_Limit\n1                         NA                  NA               2318.3\n2                         NA                  NA               2358.1\n3                         NA                  NA               2438.9\n4                         NA                  NA               5381.7\n5                         NA                  NA               4493.3\n6                         NA                  NA               4682.0\n  High_Confidence_Limit Break_Out_Category Break_Out ClassId TopicId QuestionId\n1                2417.9               Race   Unknown      C1      T1      MD101\n2                2450.2               Race   Unknown      C1      T1      MD101\n3                2526.4               Race   Unknown      C1      T1      MD101\n4                5408.2             Gender      Male      C1      T1      MD101\n5                4517.5             Gender      Male      C1      T1      MD101\n6                4707.2             Gender      Male      C1      T1      MD101\n  Data_Value_TypeID BreakOutCategoryId BreakOutId LocationId GeoLocation\n1             Crude              BOC04      RAC08         59            \n2             Crude              BOC04      RAC08         59            \n3             Crude              BOC04      RAC08         59            \n4             Crude              BOC02      GEN01         59            \n5             Crude              BOC02      GEN01         59            \n6             Crude              BOC02      GEN01         59"
  },
  {
    "objectID": "cdcdata-exercise/code/cdcdata-exercise.html#exploratory-data-analysis",
    "href": "cdcdata-exercise/code/cdcdata-exercise.html#exploratory-data-analysis",
    "title": "Data Processing & Cleaning",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\nThe main variables I am exploring here are 1) Location 2) Year 3) Topic 4) Hispanic_pct 5) Hispanic_rate (Rate per 100,000)\n\nHispanic Rate Over Time, colored by Topic\n\n  good_data %&gt;% ggplot(aes(x=Year, y=Hispanic_rate, color = Topic)) + geom_point()\n\n\n\n\n\n\n\n\n\nHispanic Rate Boxplot\n\nboxplot(good_data$Hispanic_rate)\n\n\n\n\n\n\n\n\n\n\n\nExploring the Quartiles for Hispanic Rate/Percentage\n\nsummary(good_data$Hispanic_rate)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    0.0   440.3   852.6  1423.6  2283.8  7462.7 \n\nsummary(good_data$Hispanic_pct)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n  0.000   0.000   3.800   5.193   7.100 100.000     138 \n\n\n\n\nHispanic Rate Distributions across Different Topics\n\nggplot(good_data, aes(Hispanic_rate))+\n  geom_boxplot()+\n  facet_wrap(.~Topic)+\n  coord_flip()\n\n\n\n\n\n\n\n\n\n\nHispanic Rate Distributions across Years\n\nggplot(data=good_data)+\n  geom_boxplot(mapping =aes(Hispanic_rate))+\n  facet_wrap(.~Year)+\n  coord_flip()\n\n\n\n\n\n\n\n\n\n\nMean Hispanic Rate across Topic\n\ngood_data %&gt;% \n  group_by(Topic) %&gt;% \n  summarise(Mean = mean(Hispanic_rate, na.rm=TRUE)) %&gt;% \n  ggplot(aes(x=reorder(Topic, Mean), y=Mean))+\n    geom_bar(stat = \"identity\")+\n  coord_flip()\n\n\n\n\n\n\n\n\n\n\nMean Hispanic Percent across the Topic\n\ngood_data %&gt;% \n  group_by(Topic) %&gt;% \n  summarise(Mean = mean(Hispanic_pct, na.rm=TRUE)) %&gt;% \n  ggplot(aes(x=reorder(Topic, Mean), y=Mean))+\n    geom_bar(stat = \"identity\")+\n  coord_flip()\n\n\n\n\n\n\n\n\n\n\nHispanic Rate across Location, colored by Topic\n\ngood_data %&gt;% \n  group_by(Location, Topic) %&gt;% \n  summarise(Mean = mean(Hispanic_rate, na.rm=TRUE)) %&gt;% \n  ggplot(aes(x=reorder(Location, Mean), y=Mean, fill=Topic))+\n    geom_bar(stat = \"identity\")+\n  coord_flip()\n\n`summarise()` has grouped output by 'Location'. You can override using the\n`.groups` argument."
  },
  {
    "objectID": "cdcdata-exercise/code/cdcdata-exercise.html#data-cleaning",
    "href": "cdcdata-exercise/code/cdcdata-exercise.html#data-cleaning",
    "title": "Data Processing & Cleaning",
    "section": "Data Cleaning",
    "text": "Data Cleaning\nFirst, we’re just changing some fields that were mislabeled (e.g., Arizona Abbreviation was AR), converting categorical variables to factors, and removing useless columns)\n\ncleaned_data = data %&gt;% \n  mutate(LocationAbbr =replace(LocationAbbr, LocationDesc==\"Arizona\", \"AZ\")) %&gt;% \n  mutate(LocationAbbr =replace(LocationAbbr, LocationDesc==\"Maryland\", \"MD\")) %&gt;% \n  mutate(LocationAbbr = as.factor(LocationAbbr)) %&gt;% \n  mutate(LocationDesc = as.factor(LocationDesc)) %&gt;% \n  mutate(DataSource = as.factor(DataSource)) %&gt;% \n  mutate(Class = as.factor(Class)) %&gt;% \n  mutate(Topic = as.factor(Topic)) %&gt;% \n  mutate(Question = as.factor(Question)) %&gt;% \n  mutate(Data_Value_Type = as.factor(Data_Value_Type)) %&gt;%\n  mutate(Data_Value_Unit = as.factor(Data_Value_Unit)) %&gt;% \n  mutate(Data_Value_Unit = as.factor(Data_Value_Unit)) %&gt;% \n  mutate(Break_Out_Category = as.factor(Break_Out_Category)) %&gt;% \n  mutate(Break_Out = as.factor(Break_Out)) %&gt;% \n  select(!DataSource) %&gt;% \n  select(!RowId) %&gt;% \n  select(!Class) %&gt;% \n  select(!Data_Value_Type) %&gt;% \n  select(!Data_Value_Footnote_Symbol) %&gt;% \n  select(!Data_Value_Footnote) %&gt;% \n  select(!ClassId:GeoLocation) %&gt;% \n  select(!PriorityArea1:PriorityArea4)\n\nNext, in order to better assess the data, I tried to widen out the data so there would only be one line for every topic per state per year.\n(There was probably a way more efficient way to do this, but I couldn’t find it)\n\n#Breaking into three data frames for each main social demographic\n#Using pivot wider to turn demographic options into individual columns\n\n###Race\nracedata = cleaned_data %&gt;% \n  filter(Break_Out_Category==\"Race\") %&gt;% \n  select(YearStart, LocationAbbr, Data_Value_Unit, Topic, Data_Value, Break_Out_Category, Break_Out)\n\nlonger_race = racedata %&gt;% \n  pivot_wider(names_from = Break_Out, values_from = Data_Value) %&gt;% \n  arrange(LocationAbbr,YearStart, Topic, Data_Value_Unit) \n  \nlonger_race$ID = seq.int(nrow(longer_race))\n\n####Gender\ngenderdata = cleaned_data %&gt;% \n  filter(Break_Out_Category==\"Gender\") %&gt;% \n  select(YearStart, LocationAbbr, Data_Value_Unit, Topic, Data_Value, Break_Out_Category, Break_Out)\n\nlonger_gender = genderdata %&gt;% \n  pivot_wider(names_from = Break_Out, values_from = Data_Value) %&gt;% \n  arrange(LocationAbbr,YearStart, Topic, Data_Value_Unit) \n\nlonger_gender$ID = seq.int(nrow(longer_gender))\n\n###Age\n\nagedata = cleaned_data %&gt;% \n  filter(Break_Out_Category==\"Age\") %&gt;% \n  select(YearStart, LocationAbbr, Data_Value_Unit, Topic, Data_Value, Break_Out_Category, Break_Out)\n\nlonger_age = agedata %&gt;% \n  pivot_wider(names_from = Break_Out, values_from = Data_Value) %&gt;% \n  arrange(LocationAbbr,YearStart, Topic, Data_Value_Unit) \n\nlonger_age$ID = seq.int(nrow(longer_age))\n\n\n###Need to join these data frames together\nall_long1 = left_join(longer_race, longer_gender, by = 'ID')\n\nall_long = left_join(all_long1, longer_age, by = 'ID')\n\nJust removing deuplicate columns\n\n#selecting only non-duplicate columns\nclean_all = all_long %&gt;% \n  select(YearStart.x:Topic.x,Unknown:ID, Male:Female,`75+`)\n\nTrying to widen out the data some more with percent and rate data\n\npercent_date = clean_all %&gt;% \n  filter(Data_Value_Unit.x ==\"Percent (%)\")\n  \npercent_date$Second_ID = seq.int(nrow(percent_date))\n\nrate_data = clean_all %&gt;% \n  filter(Data_Value_Unit.x==\"Rate per 100,000\")\n  \nrate_data$Second_ID = seq.int(nrow(rate_data))\n\nrate_percent_data = left_join(percent_date, rate_data, by = \"Second_ID\")\n  \n#again removing uneeded columns\nrate_percent_data1 = rate_percent_data %&gt;%   \n  select(YearStart.x.x:LocationAbbr.x.x, Topic.x.x:`Non-Hispanic Black.x`, Male.x:Second_ID, Unknown.y:`Non-Hispanic Black.y`, Male.y:`75+.y`)\n\nFinally, renaming all remaining columns\n\ngood_data = rate_percent_data1 %&gt;% \n  rename(Year = YearStart.x.x,\n         Location = LocationAbbr.x.x,\n         Topic = Topic.x.x,\n         Unknown_pct = Unknown.x,\n         Non_Hispanic_Asian_pct = `Non-Hispanic Asian.x`,\n         Non_Hispanic_White_pct= `Non-Hispanic White.x`,\n         Hispanic_pct = Hispanic.x,\n         Other_pct = Other.x,\n         Non_Hispanic_Black_pct = `Non-Hispanic Black.x`,\n         Male_pct = Male.x,\n         Female_pct = Female.x,\n         Is75plus_pct = `75+.x`,\n         RowID = Second_ID,\n         Unknown_rate = Unknown.y,\n         Non_Hispanic_Asian_rate = `Non-Hispanic Asian.y`,\n         Non_Hispanic_White_rate= `Non-Hispanic White.y`,\n         Hispanic_rate = Hispanic.y,\n         Other_rate = Other.y,\n         Non_Hispanic_Black_rate = `Non-Hispanic Black.y`,\n         Male_rate = Male.y,\n         Female_rate = Female.y,\n         Is75plus_rate = `75+.y`\n         )\n\nAt this time, our data now has the following structure:\nThere 36 rows for each state/territory (52), consisting of 6 rows per year (6 years), one for each topic.\n\nsummary(good_data)\n\n      Year         Location                                           Topic    \n Min.   :2016   AK     :  36   Acute Myocardial Infarction (Heart Attack):312  \n 1st Qu.:2017   AL     :  36   Coronary Heart Disease                    :312  \n Median :2018   AR     :  36   Diseases of the Heart (Heart Disease)     :312  \n Mean   :2018   AZ     :  36   Heart Failure                             :312  \n 3rd Qu.:2020   CA     :  36   Major Cardiovascular Disease              :312  \n Max.   :2021   CO     :  36   Stroke                                    :312  \n                (Other):1656                                                   \n  Unknown_pct      Non_Hispanic_Asian_pct Non_Hispanic_White_pct\n Min.   :  0.000   Min.   :  0.000        Min.   : 0.00         \n 1st Qu.:  0.000   1st Qu.:  0.000        1st Qu.: 4.40         \n Median :  2.800   Median :  5.850        Median : 5.10         \n Mean   :  3.895   Mean   :  7.006        Mean   : 5.42         \n 3rd Qu.:  4.900   3rd Qu.:  9.100        3rd Qu.: 6.30         \n Max.   :100.000   Max.   :100.000        Max.   :13.30         \n NA's   :32        NA's   :86                                   \n  Hispanic_pct       Other_pct       Non_Hispanic_Black_pct    Male_pct     \n Min.   :  0.000   Min.   :  0.000   Min.   :  0.000        Min.   : 0.000  \n 1st Qu.:  0.000   1st Qu.:  3.400   1st Qu.:  3.000        1st Qu.: 4.400  \n Median :  3.800   Median :  5.700   Median :  5.000        Median : 5.100  \n Mean   :  5.193   Mean   :  6.422   Mean   :  5.273        Mean   : 5.389  \n 3rd Qu.:  7.100   3rd Qu.:  8.300   3rd Qu.:  6.400        3rd Qu.: 6.200  \n Max.   :100.000   Max.   :100.000   Max.   :100.000        Max.   :15.700  \n NA's   :138       NA's   :11        NA's   :47                             \n   Female_pct      Is75plus_pct        RowID         Unknown_rate   \n Min.   : 0.000   Min.   : 0.000   Min.   :   1.0   Min.   :   0.0  \n 1st Qu.: 4.400   1st Qu.: 5.000   1st Qu.: 468.8   1st Qu.: 346.6  \n Median : 5.300   Median : 6.100   Median : 936.5   Median : 555.2  \n Mean   : 5.614   Mean   : 6.395   Mean   : 936.5   Mean   : 937.1  \n 3rd Qu.: 6.700   3rd Qu.: 7.500   3rd Qu.:1404.2   3rd Qu.:1669.2  \n Max.   :13.600   Max.   :15.900   Max.   :1872.0   Max.   :3857.4  \n                                                                    \n Non_Hispanic_Asian_rate Non_Hispanic_White_rate Hispanic_rate   \n Min.   :   0.0          Min.   :  61.8          Min.   :   0.0  \n 1st Qu.: 445.8          1st Qu.: 645.1          1st Qu.: 440.3  \n Median : 817.1          Median : 955.3          Median : 852.6  \n Mean   :1254.5          Mean   :1748.8          Mean   :1423.6  \n 3rd Qu.:2054.8          3rd Qu.:3185.7          3rd Qu.:2283.8  \n Max.   :5405.4          Max.   :6083.1          Max.   :7462.7  \n                                                                 \n   Other_rate     Non_Hispanic_Black_rate   Male_rate       Female_rate    \n Min.   :   0.0   Min.   :   0.0          Min.   :  53.1   Min.   :  45.8  \n 1st Qu.: 610.3   1st Qu.: 607.8          1st Qu.: 784.3   1st Qu.: 497.6  \n Median : 955.4   Median :1177.4          Median :1125.1   Median : 835.8  \n Mean   :1639.8   Mean   :2005.0          Mean   :2006.4   Mean   :1553.9  \n 3rd Qu.:2716.2   3rd Qu.:3533.8          3rd Qu.:3618.7   3rd Qu.:2821.6  \n Max.   :6491.8   Max.   :7679.1          Max.   :6436.4   Max.   :5799.6  \n                                                                           \n Is75plus_rate \n Min.   :  77  \n 1st Qu.: 829  \n Median :1309  \n Mean   :2449  \n 3rd Qu.:4524  \n Max.   :8118"
  },
  {
    "objectID": "cdcdata-exercise/code/cdcdata-exercise.html#synthetic-data",
    "href": "cdcdata-exercise/code/cdcdata-exercise.html#synthetic-data",
    "title": "Data Processing & Cleaning",
    "section": "Synthetic Data",
    "text": "Synthetic Data\n\nlibrary(dplyr)\nlibrary(stringi)\n\nset.seed(123) # For reproducibility\n\n# Function to introduce missing values randomly\nintroduce_na &lt;- function(x, na_rate = 0.05) {\n  na_indices &lt;- sample(1:length(x), size = floor(na_rate * length(x)))\n  x[na_indices] &lt;- NA\n  return(x)\n}\n\n# Function to generate synthetic data with variability\ngenerate_synthetic_data = function(n) {\n  synthetic_data = data.frame(\n    Year = sample(2016:2021, n, replace = TRUE),\n    Location = sample(state.abb, n, replace = TRUE),\n    Topic = sample(c(\"Heart Attack\", \"Coronary Heart Disease\", \"Heart Disease\",\n                     \"Heart Failure\", \"Cardiovascular Disease\"), n, replace = TRUE),\n    Unknown_pct = introduce_na(rbeta(n, 2.5, 1)),\n    Non_Hispanic_Asian_pct = introduce_na(rnorm(n, 7, 2)),\n    Non_Hispanic_White_pct = introduce_na(runif(n, 0, 13)),\n    Hispanic_pct = introduce_na(rnorm(n, 5, 3)),\n    Other_pct = introduce_na(rbeta(n, 3, 2)),\n    Non_Hispanic_Black_pct = introduce_na(runif(n, 0, 10)),\n    Male_pct = introduce_na(rnorm(n, 5.5, 2)),\n    Female_pct = introduce_na(rnorm(n, 5.8, 2)),\n    Is75plus_pct = introduce_na(rnorm(n, 6, 2)),\n    RowID = 1:n,\n    Unknown_rate = introduce_na(rnorm(n, 1000, 500)),\n    Non_Hispanic_Asian_rate = introduce_na(rnorm(n, 2000, 1000)),\n    Non_Hispanic_White_rate = introduce_na(rnorm(n, 4000, 2000)),\n    Hispanic_rate = introduce_na(rnorm(n, 3000, 1500)),\n    Other_rate = introduce_na(rnorm(n, 2000, 1000)),\n    Non_Hispanic_Black_rate = introduce_na(rnorm(n, 2000, 1000)),\n    Male_rate = introduce_na(rnorm(n, 2000, 1000)),\n    Female_rate = introduce_na(rnorm(n, 2000, 1000)),\n    Is75plus_rate = introduce_na(rnorm(n, 3000, 1500))\n  )\n  \n  return(synthetic_data)\n}\n\n# Generate synthetic data\nsynthetic_data = generate_synthetic_data(1872)\n\n\nData Summary\n\nsummary(synthetic_data)\n\n      Year        Location            Topic            Unknown_pct     \n Min.   :2016   Length:1872        Length:1872        Min.   :0.06535  \n 1st Qu.:2017   Class :character   Class :character   1st Qu.:0.56720  \n Median :2018   Mode  :character   Mode  :character   Median :0.75316  \n Mean   :2018                                         Mean   :0.71064  \n 3rd Qu.:2020                                         3rd Qu.:0.88846  \n Max.   :2021                                         Max.   :0.99992  \n                                                      NA's   :93       \n Non_Hispanic_Asian_pct Non_Hispanic_White_pct  Hispanic_pct   \n Min.   :-0.2425        Min.   : 0.00341       Min.   :-5.206  \n 1st Qu.: 5.5692        1st Qu.: 3.19969       1st Qu.: 3.063  \n Median : 6.8736        Median : 6.69446       Median : 4.897  \n Mean   : 6.9321        Mean   : 6.60234       Mean   : 4.974  \n 3rd Qu.: 8.3442        3rd Qu.: 9.90352       3rd Qu.: 6.992  \n Max.   :13.0769        Max.   :12.99160       Max.   :14.203  \n NA's   :93             NA's   :93             NA's   :93      \n   Other_pct       Non_Hispanic_Black_pct    Male_pct        Female_pct      \n Min.   :0.04734   Min.   :0.01301        Min.   :-1.194   Min.   : 0.06137  \n 1st Qu.:0.46185   1st Qu.:2.43752        1st Qu.: 4.173   1st Qu.: 4.42554  \n Median :0.61494   Median :4.85954        Median : 5.477   Median : 5.72194  \n Mean   :0.60308   Mean   :4.95143        Mean   : 5.509   Mean   : 5.75788  \n 3rd Qu.:0.75973   3rd Qu.:7.51951        3rd Qu.: 6.831   3rd Qu.: 7.02938  \n Max.   :0.99114   Max.   :9.99040        Max.   :12.127   Max.   :11.45625  \n NA's   :93        NA's   :93             NA's   :93       NA's   :93        \n  Is75plus_pct        RowID         Unknown_rate    Non_Hispanic_Asian_rate\n Min.   :-1.341   Min.   :   1.0   Min.   :-485.4   Min.   :-1280          \n 1st Qu.: 4.653   1st Qu.: 468.8   1st Qu.: 669.1   1st Qu.: 1293          \n Median : 6.019   Median : 936.5   Median :1005.6   Median : 1974          \n Mean   : 6.011   Mean   : 936.5   Mean   : 999.2   Mean   : 1981          \n 3rd Qu.: 7.313   3rd Qu.:1404.2   3rd Qu.:1331.0   3rd Qu.: 2677          \n Max.   :13.719   Max.   :1872.0   Max.   :2960.7   Max.   : 6323          \n NA's   :93                        NA's   :93       NA's   :93             \n Non_Hispanic_White_rate Hispanic_rate     Other_rate   \n Min.   :-2716           Min.   :-2190   Min.   :-1497  \n 1st Qu.: 2612           1st Qu.: 2063   1st Qu.: 1331  \n Median : 3965           Median : 3117   Median : 2014  \n Mean   : 4002           Mean   : 3091   Mean   : 2004  \n 3rd Qu.: 5358           3rd Qu.: 4057   3rd Qu.: 2682  \n Max.   :10271           Max.   : 7914   Max.   : 5250  \n NA's   :93              NA's   :93      NA's   :93     \n Non_Hispanic_Black_rate   Male_rate       Female_rate   Is75plus_rate  \n Min.   :-1473           Min.   :-979.1   Min.   :-751   Min.   :-1937  \n 1st Qu.: 1361           1st Qu.:1362.0   1st Qu.:1313   1st Qu.: 1997  \n Median : 1996           Median :2041.3   Median :2005   Median : 2956  \n Mean   : 2000           Mean   :2009.1   Mean   :2004   Mean   : 3002  \n 3rd Qu.: 2675           3rd Qu.:2681.6   3rd Qu.:2704   3rd Qu.: 4014  \n Max.   : 5521           Max.   :5982.8   Max.   :5068   Max.   : 8713  \n NA's   :93              NA's   :93       NA's   :93     NA's   :93     \n\n\n\n\nHispanic Rate Over Time, colored by Topic\n\nsynthetic_data %&gt;% ggplot(aes(x=Year, y=Hispanic_rate, color = Topic)) + \n  geom_point() +\n  scale_x_continuous(breaks = unique(synthetic_data$Year))\n\nWarning: Removed 93 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\nHispanic Rate Boxplot\n\nboxplot(synthetic_data$Hispanic_rate)\n\n\n\n\n\n\n\n\n\n\nExploring the Quartiles for Hispanic Rate/Percentage\n\nsummary(synthetic_data$Hispanic_rate)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n  -2190    2063    3117    3091    4057    7914      93 \n\nsummary(synthetic_data$Hispanic_pct)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n -5.206   3.063   4.897   4.974   6.992  14.203      93 \n\n\n\n\nHispanic Rate Distributions across Different Topics\n\nggplot(synthetic_data, aes(Hispanic_rate))+\n  geom_boxplot()+\n  facet_wrap(.~Topic)+\n  coord_flip()\n\nWarning: Removed 93 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\n\n\nMean Hispanic Rate across Topic\n\nsynthetic_data %&gt;% \n  group_by(Topic) %&gt;% \n  summarise(Mean = mean(Hispanic_rate, na.rm=TRUE)) %&gt;% \n  ggplot(aes(x=reorder(Topic, Mean), y=Mean))+\n    geom_bar(stat = \"identity\")+\n  coord_flip()\n\n\n\n\n\n\n\n\n\n\nMean Hispanic Percent across the Topic\n\nsynthetic_data %&gt;% \n  group_by(Topic) %&gt;% \n  summarise(Mean = mean(Hispanic_pct, na.rm=TRUE)) %&gt;% \n  ggplot(aes(x=reorder(Topic, Mean), y=Mean))+\n    geom_bar(stat = \"identity\")+\n  coord_flip()\n\n\n\n\n\n\n\n\n\n\nHispanic Rate across Location, colored by Topic\n\nsynthetic_data %&gt;% \n  group_by(Location, Topic) %&gt;% \n  summarise(Mean = mean(Hispanic_rate, na.rm=TRUE)) %&gt;% \n  ggplot(aes(x=reorder(Location, Mean), y=Mean, fill=Topic))+\n    geom_bar(stat = \"identity\")+\n  coord_flip()\n\n`summarise()` has grouped output by 'Location'. You can override using the\n`.groups` argument."
  },
  {
    "objectID": "cdcdata-exercise/code/cdcdata-exercise.html#conclusion-1",
    "href": "cdcdata-exercise/code/cdcdata-exercise.html#conclusion-1",
    "title": "Data Processing & Cleaning",
    "section": "Conclusion",
    "text": "Conclusion\nThe data variables and observations are the exact amount as my teammate’s file but the actual content is not close to what Antonio found in the CDC’s website. Fro me"
  },
  {
    "objectID": "cdcdata-exercise/code/cdcdata-exercise.html#conclusion",
    "href": "cdcdata-exercise/code/cdcdata-exercise.html#conclusion",
    "title": "Data Processing & Cleaning",
    "section": "Conclusion",
    "text": "Conclusion\nThe code above was used as the foundation for creating the dataset structure. While it successfully created a good dataset, aligning the data in the variables with Antonio’s cleaned dataset was a challenge. At first, all data followed a normal distribution, but after several updates, I managed to update the distributions slightly, but it was a complex task. I think it’s quite challenging to gather all the required data in a single prompt. I also had to specify the exact variables I needed in the dataset, as it was the most straightforward way to ensure the dataset matched the original requirements."
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html#preprocessing-training-and-test-predictors",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html#preprocessing-training-and-test-predictors",
    "title": "Tidy Tuesday Exercise",
    "section": "PreProcessing Training and Test Predictors",
    "text": "PreProcessing Training and Test Predictors\n\nTrainXPP = preProcess(train_x, method = c(\"scale\",\"center\", \"BoxCox\"))\nTrainXTrans = predict(TrainXPP, train_x)\nTestXPP = preProcess(test_x, method = c(\"scale\", \"center\", \"BoxCox\"))\nTestXTrans = predict(TestXPP, test_x)"
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html#fitting-3-models",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html#fitting-3-models",
    "title": "Tidy Tuesday Exercise",
    "section": "Fitting 3 models",
    "text": "Fitting 3 models\n\nLinear Regression Model\n\nlibrary(tidymodels)\n\nWarning: package 'tidymodels' was built under R version 4.3.3\n\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.2.0 ──\n\n\n✔ broom        1.0.5      ✔ rsample      1.2.1 \n✔ dials        1.2.1      ✔ tune         1.2.1 \n✔ infer        1.0.7      ✔ workflows    1.1.4 \n✔ modeldata    1.4.0      ✔ workflowsets 1.1.0 \n✔ parsnip      1.2.1      ✔ yardstick    1.3.1 \n✔ recipes      1.0.10     \n\n\nWarning: package 'dials' was built under R version 4.3.3\n\n\nWarning: package 'scales' was built under R version 4.3.3\n\n\nWarning: package 'infer' was built under R version 4.3.3\n\n\nWarning: package 'modeldata' was built under R version 4.3.3\n\n\nWarning: package 'parsnip' was built under R version 4.3.3\n\n\nWarning: package 'recipes' was built under R version 4.3.3\n\n\nWarning: package 'rsample' was built under R version 4.3.3\n\n\nWarning: package 'tune' was built under R version 4.3.3\n\n\nWarning: package 'workflows' was built under R version 4.3.3\n\n\nWarning: package 'workflowsets' was built under R version 4.3.3\n\n\nWarning: package 'yardstick' was built under R version 4.3.3\n\n\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard()        masks purrr::discard()\n✖ dplyr::filter()          masks stats::filter()\n✖ recipes::fixed()         masks stringr::fixed()\n✖ dplyr::lag()             masks stats::lag()\n✖ caret::lift()            masks purrr::lift()\n✖ yardstick::precision()   masks caret::precision()\n✖ yardstick::recall()      masks caret::recall()\n✖ yardstick::sensitivity() masks caret::sensitivity()\n✖ yardstick::spec()        masks readr::spec()\n✖ yardstick::specificity() masks caret::specificity()\n✖ recipes::step()          masks stats::step()\n• Use suppressPackageStartupMessages() to eliminate package startup messages\n\nlibrary(broom)\n\nlmmodel = linear_reg() %&gt;% \n  set_mode(\"regression\") %&gt;% \n  set_engine(\"lm\")\n\n\n\nRandom Forest\n\nrf_model = rand_forest() %&gt;% \n  set_engine(\"randomForest\", imporance = TRUE) %&gt;% \n  set_mode(\"regression\")\n\n\n\nDecision Tree\n\ndt_model = decision_tree() %&gt;% \n  set_engine(\"rpart\") %&gt;% \n  set_mode(\"regression\")\n\n\n\nResults\n\nSetting options\n\nset.seed(556)\nfolds = vfold_cv(train_data, v = 5)\nformula = viewers_in_millions ~.\n\n\nlm_wf = workflow() %&gt;% \n  add_model(lmmodel) %&gt;% \n  add_formula(formula)\n\n\nset.seed(45)\n\nlm_fit_rs =\n  lm_wf %&gt;% \nfit_resamples(folds)\n\n→ A | warning: prediction from rank-deficient fit; consider predict(., rankdeficient=\"NA\")\n\n\nThere were issues with some computations   A: x1\n\n\nThere were issues with some computations   A: x5\n\n\n\n\nlm_fit_rs\n\n# Resampling results\n# 5-fold cross-validation \n# A tibble: 5 × 4\n  splits           id    .metrics         .notes          \n  &lt;list&gt;           &lt;chr&gt; &lt;list&gt;           &lt;list&gt;          \n1 &lt;split [273/69]&gt; Fold1 &lt;tibble [2 × 4]&gt; &lt;tibble [1 × 3]&gt;\n2 &lt;split [273/69]&gt; Fold2 &lt;tibble [2 × 4]&gt; &lt;tibble [1 × 3]&gt;\n3 &lt;split [274/68]&gt; Fold3 &lt;tibble [2 × 4]&gt; &lt;tibble [1 × 3]&gt;\n4 &lt;split [274/68]&gt; Fold4 &lt;tibble [2 × 4]&gt; &lt;tibble [1 × 3]&gt;\n5 &lt;split [274/68]&gt; Fold5 &lt;tibble [2 × 4]&gt; &lt;tibble [1 × 3]&gt;\n\nThere were issues with some computations:\n\n  - Warning(s) x5: prediction from rank-deficient fit; consider predict(., rankdefic...\n\nRun `show_notes(.Last.tune.result)` for more information.\n\n\n\nrf_wf = workflow() %&gt;% \n  add_model(rf_model) %&gt;% \n  add_formula(formula)\n\n\nset.seed(45)\n\nrf_fit_rs =\n  rf_wf %&gt;% \nfit_resamples(folds)\n\nWarning: package 'randomForest' was built under R version 4.3.3\n\nrf_fit_rs\n\n# Resampling results\n# 5-fold cross-validation \n# A tibble: 5 × 4\n  splits           id    .metrics         .notes          \n  &lt;list&gt;           &lt;chr&gt; &lt;list&gt;           &lt;list&gt;          \n1 &lt;split [273/69]&gt; Fold1 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n2 &lt;split [273/69]&gt; Fold2 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n3 &lt;split [274/68]&gt; Fold3 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n4 &lt;split [274/68]&gt; Fold4 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n5 &lt;split [274/68]&gt; Fold5 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n\n\n\ndt_wf = workflow() %&gt;% \n  add_model(dt_model) %&gt;% \n  add_formula(formula)\n\nset.seed(45)\n\ndt_fit_rs =\n  dt_wf %&gt;% \nfit_resamples(folds)\n\ndt_fit_rs\n\n# Resampling results\n# 5-fold cross-validation \n# A tibble: 5 × 4\n  splits           id    .metrics         .notes          \n  &lt;list&gt;           &lt;chr&gt; &lt;list&gt;           &lt;list&gt;          \n1 &lt;split [273/69]&gt; Fold1 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n2 &lt;split [273/69]&gt; Fold2 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n3 &lt;split [274/68]&gt; Fold3 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n4 &lt;split [274/68]&gt; Fold4 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n5 &lt;split [274/68]&gt; Fold5 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n\n\n\n\n\nMetrics\n\nMetrics = rbind(collect_metrics(lm_fit_rs),collect_metrics(rf_fit_rs),collect_metrics(dt_fit_rs))\n\ncbind(model = c(\"LM\",\"LM\", \"RF\",\"RF\",\"DT\",\"DT\"), Metrics)\n\n  model .metric .estimator      mean n    std_err              .config\n1    LM    rmse   standard 4.8040789 5 0.12140591 Preprocessor1_Model1\n2    LM     rsq   standard 0.4799109 5 0.03524461 Preprocessor1_Model1\n3    RF    rmse   standard 2.2305172 5 0.16620793 Preprocessor1_Model1\n4    RF     rsq   standard 0.8967623 5 0.01307662 Preprocessor1_Model1\n5    DT    rmse   standard 3.1343732 5 0.23193623 Preprocessor1_Model1\n6    DT     rsq   standard 0.7760581 5 0.02892788 Preprocessor1_Model1\n\n\nFrom these results we can see that the model with the best R^2 value is the RandomForest Model, thich also has the lowest mean RMSE value. Due to this accuracy, we will proceed to use this model on the test data.\n\n\nDetermining the most important variables\n\nlibrary(vip)\n\n\nrf_recipe &lt;- \n  recipe(viewers_in_millions ~ ., data = train_data) \n\nrf_workflow &lt;- \n  workflow() %&gt;%\n  add_model(rf_model) %&gt;% \n  add_recipe(rf_recipe)\n\n\nrf_workflow %&gt;% \n  fit(train_data) %&gt;% \n  extract_fit_parsnip() %&gt;% \n  vip(num_features = 10)"
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html#testing-prediction-data",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html#testing-prediction-data",
    "title": "Tidy Tuesday Exercise",
    "section": "Testing Prediction Data",
    "text": "Testing Prediction Data\n\nlibrary(MLmetrics)\n\nWarning: package 'MLmetrics' was built under R version 4.3.3\n\n\n\nAttaching package: 'MLmetrics'\n\n\nThe following objects are masked from 'package:caret':\n\n    MAE, RMSE\n\n\nThe following object is masked from 'package:base':\n\n    Recall\n\nset.seed(24)\nrf_fit =\n  rf_model %&gt;% \n  fit(viewers_in_millions ~., data = train_data)\n\n\n\nrf_testing_pred &lt;- \n  bind_cols(predict(rf_fit, test_data, type = \"numeric\")) %&gt;% \n  bind_cols(test_data %&gt;% select(viewers_in_millions))\n\nhead(rf_testing_pred)\n\n# A tibble: 6 × 2\n  .pred viewers_in_millions\n  &lt;dbl&gt;               &lt;dbl&gt;\n1  12.9               10.3 \n2  11.8                9.47\n3  12.1               10.3 \n4  17.3               16.9 \n5  24.4               26   \n6  19.7               20.1 \n\nrf_testing_pred = as.data.frame(rf_testing_pred)\n\n\npreds = rf_testing_pred$.pred\n\nobs = test_data$viewers_in_millions\n\nrbind(RMSE = mean((obs - preds)^2) %&gt;% \n  sqrt(),\nRSQ = cor(obs, preds) ^ 2)\n\n          [,1]\nRMSE 1.7716773\nRSQ  0.9453627\n\n\nThe R^2 value is actually higher on the Test dataset than the Train dataset, and the RMSE is lower as well."
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html#conclusions",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html#conclusions",
    "title": "Tidy Tuesday Exercise",
    "section": "Conclusions",
    "text": "Conclusions\n\nI was able to clean many different variables on several datasets that were very messy\n\nI was able to explore several different variables and while I struggled to find a good combination of predictors/responses, I did identify my Hypothesis.\n\nMy Question/Objective was to predict the number of viewers based on the numeric variables in the Ratings table.\n\nI split and preprocessed the data and then ran 3 different models on the training data. The RandomForest performed the best and the most important predictors were ‘Season’ and ‘Year’\n\nI tested the chosen model (RandomForest) on the test data and uncovered favorable results.\n\n\nI learned a tremendous amount about handling very messy data as well as how to use tidymodels and recipies. I had absolutely no experience with the latter and I now see why they are such a staple for many data scientists."
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html#splitting-the-data",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html#splitting-the-data",
    "title": "Tidy Tuesday Exercise",
    "section": "Splitting the Data",
    "text": "Splitting the Data\n\nlibrary(caret)\n\nclean_ratings = as.data.frame(clean_ratings)\n\nset.seed(20)\n\nsplit1 = sample(c(rep(0, 0.8 * nrow(clean_ratings)), rep(1,0.2*nrow(clean_ratings))))\n\n\ntrain_data = clean_ratings[split1 == 0, ]\ntest_data = clean_ratings[split1 == 1, ]\n\n\ntrain_y = train_data$viewers_in_millions\ntest_y = test_data$viewers_in_millions\n\n\ntrain_x = train_data %&gt;% \n  select(!viewers_in_millions)\n\ntest_x = test_data %&gt;% \n  select(!viewers_in_millions)"
  },
  {
    "objectID": "classification-prediction project/manuscript/Manuscript - Copy.html",
    "href": "classification-prediction project/manuscript/Manuscript - Copy.html",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "",
    "text": "Financial institutions spend billions of dollars on their marketing teams every year, with a positive trend observed in 2023 for the largest and smallest banks (Akins). With the need for efficient marketing becoming more and more important, machine learning models are viable tools for refining marketing strategies. This project will seek to identify a model for predicting consumer financial behavior using a dataset from a Portuguese bank. Through comparing the accuracy and predictive power of four different machine learning models, this project will identify an ideal method for prediction."
  },
  {
    "objectID": "classification-prediction project/manuscript/Manuscript - Copy.html#general-background-information",
    "href": "classification-prediction project/manuscript/Manuscript - Copy.html#general-background-information",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "General Background Information",
    "text": "General Background Information\nIn 2022, JPMorgan Chase & Co. spent $3.9 billion (US) dollars on Marketing, leading other financial institutions in this category. Recent reports have shown that this has only grown in past years (Co.,). Providing businesses with a model that will allow prioritization of consumers and/or demographics has great potential in improving resource management and future marketing campaigns, as well as increasing efficient spending. This particular project will utilize Classification Prediction. Unlike Regression Prediction which will attempt to predict a continuous value (e.g., x amount of dollars, x amount of cells), Classification Prediction seeks to train a model that can correctly predict a classification (e.g., True/False, Success/Failure) based on the given predictors (Kuhn). In our case, our y variable or response variable is a binary variable, Yes/No, answering whether or not a customer subscribed to a term deposit."
  },
  {
    "objectID": "classification-prediction project/manuscript/Manuscript - Copy.html#description-of-data-and-data-source",
    "href": "classification-prediction project/manuscript/Manuscript - Copy.html#description-of-data-and-data-source",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Description of data and data source",
    "text": "Description of data and data source\nThe data was donated on 2/13/2012. It was collected from phone call marketing campaigns performed by a Portuguese banking institution. I have accessed this data from the UC Irvine Machine Learning Repository.\nThere are 45,212 records, 17 columns/variables which include: age, marital status, job, education, details related to the phone call, as well as answers related to questions about past credit history. Additionally, as mentioned, the classification variable is whether or not the person subscribed to a term deposit."
  },
  {
    "objectID": "classification-prediction project/manuscript/Manuscript - Copy.html#questionshypotheses-to-be-addressed",
    "href": "classification-prediction project/manuscript/Manuscript - Copy.html#questionshypotheses-to-be-addressed",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Questions/Hypotheses to be addressed",
    "text": "Questions/Hypotheses to be addressed\nThe research question I plan to address with my analysis is: which features or combination of features are the best predictors of consumers making a deposit? The desired output of this analysis is a model which allows a financial institution to make better decisions regarding future marketing campaigns. I plan to investigate all demographic variables, with a specific focus on job type, education and age."
  },
  {
    "objectID": "classification-prediction project/manuscript/Manuscript - Copy.html#data-aquisition",
    "href": "classification-prediction project/manuscript/Manuscript - Copy.html#data-aquisition",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Data aquisition",
    "text": "Data aquisition\nThe dataset for this project was retrieved from UCI ML Repository in CSV form. Additionally, I created a codebook based on data from the same source."
  },
  {
    "objectID": "classification-prediction project/manuscript/Manuscript - Copy.html#data-import-and-cleaning",
    "href": "classification-prediction project/manuscript/Manuscript - Copy.html#data-import-and-cleaning",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Data import and cleaning",
    "text": "Data import and cleaning\n\nReading in the Data\n\n\n\n\nTable 1: Data Snapshot of first 5 Variables\n\n\n\n\n\n\nage\njob\nmarital\neducation\ndefault\n\n\n\n\n58\nmanagement\nmarried\ntertiary\nno\n\n\n44\ntechnician\nsingle\nsecondary\nno\n\n\n33\nentrepreneur\nmarried\nsecondary\nno\n\n\n47\nblue-collar\nmarried\nunknown\nno\n\n\n33\nunknown\nsingle\nunknown\nno\n\n\n35\nmanagement\nmarried\ntertiary\nno\n\n\n\n\n\n\n\n\n\n\n\n\nTable 2: Data Snapshot of next 5 Variables\n\n\n\n\n\n\nbalance\nhousing\nloan\ncontact\nday\n\n\n\n\n2143\nyes\nno\nunknown\n5\n\n\n29\nyes\nno\nunknown\n5\n\n\n2\nyes\nyes\nunknown\n5\n\n\n1506\nyes\nno\nunknown\n5\n\n\n1\nno\nno\nunknown\n5\n\n\n231\nyes\nno\nunknown\n5\n\n\n\n\n\n\n\n\n\n\nDimensions:\nRows: 45, 211\nColumns: 17\n\n\n\nDescribing data\n\n\n\n\n\nSummary of predictors\n\n\nx\n\n\n\n\n'data.frame': 45211 obs. of 12 variables:\n\n\n$ age : int 58 44 33 47 33 35 28 42 58 43 ...\n\n\n$ job : Factor w/ 12 levels \"admin.\",\"blue-collar\",..: 5 10 3 2 12 5 5 3 6 10 ...\n\n\n$ marital : Factor w/ 3 levels \"divorced\",\"married\",..: 2 3 2 2 3 2 3 1 2 3 ...\n\n\n$ education : Factor w/ 4 levels \"primary\",\"secondary\",..: 3 2 2 4 4 3 3 3 1 2 ...\n\n\n$ default : Factor w/ 2 levels \"no\",\"yes\": 1 1 1 1 1 1 1 2 1 1 ...\n\n\n$ balance : int 2143 29 2 1506 1 231 447 2 121 593 ...\n\n\n$ housing : Factor w/ 2 levels \"no\",\"yes\": 2 2 2 2 1 2 2 2 2 2 ...\n\n\n$ loan : Factor w/ 2 levels \"no\",\"yes\": 1 1 2 1 1 1 2 1 1 1 ...\n\n\n$ contact : Factor w/ 3 levels \"cellular\",\"telephone\",..: 3 3 3 3 3 3 3 3 3 3 ...\n\n\n$ day : Factor w/ 31 levels \"1\",\"2\",\"3\",\"4\",..: 5 5 5 5 5 5 5 5 5 5 ...\n\n\n$ month : Factor w/ 12 levels \"apr\",\"aug\",\"dec\",..: 9 9 9 9 9 9 9 9 9 9 ...\n\n\n$ y_termSubscribed: Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 1 1 ...\n\n\n\n\n\n\n\n\n\n\n\nCleaning Data\nThere were several different data cleaning methods that were experimented with in order to find the best way to prepare the data for modeling. First, I converted several variables to factors, as they had been read in as character variables, or strings. Next I tried to use the DummyVars tool to convert every categorical variable to a dummy value but this made modeling difficult due to a large amount of binary variables. Instead I proceeded with converting the categorical variables to numeric values while maintaining their factor status. I also created a dataset with these numeric values that were not factors. These were the two primary dataset I used for my modeling. Finally I created a dataset stripping the categorical values of their attributes, this was solely created to allow for my corrplot to work.\n\n\nRemoving Initial Predictors\nI removed the ‘Duration’ variable due to a warning I discovered on the site hosting this dataset initially: “Important note: this attribute highly affects the output target (e.g., if duration=0 then y=‘no’). Yet, the duration is not known before a call is performed. Also, after the end of the call y is obviously known. Thus, this input should only be included for benchmark purposes and should be discarded if the intention is to have a realistic predictive model.”(Moro) Due to this new information I decided to remove all the variables related to this, which included ‘campaign’, ‘pdays’, ‘previous’, and ‘poutcome.’ Bringing our new total number of predictors to 11."
  },
  {
    "objectID": "classification-prediction project/manuscript/Manuscript - Copy.html#exploratory-data-analysis",
    "href": "classification-prediction project/manuscript/Manuscript - Copy.html#exploratory-data-analysis",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\nPeng and Matsui define EDA as “the process of exploring your data”, “[including] examining the structure and components of your dataset, the distributions of individual variables, and the relationships between two or more variables”(Peng).\nIn accordance with this definition, we will be exploring the data using different charts to identify outliers, abnormalities, relationships, and the general shape and feel of different variables.\nFigure 1 shows the distribution of the ‘Age’ variable.\n\n\n\n\n\n\n\n\nFigure 1\n\n\n\n\n\nWhile this shows a slight skew to the right, if we account for the extreme values, this data seems to be fairly normally distributed.\n\n\n\n\n\n\n\n\n\nFigure 2: Education level Bar Chart\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 3: Most Common Job Types\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 4: Scatterplot of Age and Balance, stratified by Marital Status.\n\n\n\n\n\nFigure 5 shows a barplot of the most common days of the month to record a positive outcome.\n\n\n\n\n\n\n\n\nFigure 5\n\n\n\n\n\nWhile there doesn’t appear to be a significant trend, we can clearly see that the 30th of the month stands out as being a day of interest, especially compared to other days of the months.\nFigure 6 shows potential correlation between different variables.\n\n\n\n\n\n\n\n\nFigure 6: Correlation Matrix\n\n\n\n\n\nThe biggest takeaways from our Exploratory Data Analysis is that most variables are fairly normally distributed due to the size of the data, and most variable are not correlated to each other, with one exception (‘Age’ and ‘Marital’)."
  },
  {
    "objectID": "classification-prediction project/manuscript/Manuscript - Copy.html#basic-statistical-analysis",
    "href": "classification-prediction project/manuscript/Manuscript - Copy.html#basic-statistical-analysis",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Basic statistical analysis",
    "text": "Basic statistical analysis\nBefore I began with the machine learning analysis, I sought to test the variables of interest in their significance of affecting the response variable. As mentioned previously, our response variable is a binary value (Yes/No), which means that we need to use a logistic regression model instead of a linear regression model (Kuhn).\nBelow are the results of the logistic model fit with all variables as predictors\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n-0.8090128\n0.2095208\n-3.861252\n0.0001128\n\n\njob\n0.0133597\n0.0046908\n2.848042\n0.0043989\n\n\nmarital\n0.2328452\n0.0276199\n8.430357\n0.0000000\n\n\neducation\n0.1858218\n0.0198575\n9.357763\n0.0000000\n\n\ndefault\n-0.4935394\n0.1456864\n-3.387684\n0.0007049\n\n\nhousing\n-0.7963802\n0.0313995\n-25.362860\n0.0000000\n\n\nloan\n-0.5843431\n0.0502504\n-11.628624\n0.0000000\n\n\nage\n0.0062746\n0.0015087\n4.158970\n0.0000320\n\n\nbalance\n0.0000238\n0.0000039\n6.057946\n0.0000000\n\n\nday\n-0.0119537\n0.0017711\n-6.749262\n0.0000000\n\n\n\n\n\nAs expected, all predictors are very significant as determined by the very small p-values. We will proceed to the Machine Learning portion of this project."
  },
  {
    "objectID": "classification-prediction project/manuscript/Manuscript - Copy.html#machine-learning-modeling",
    "href": "classification-prediction project/manuscript/Manuscript - Copy.html#machine-learning-modeling",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Machine Learning Modeling",
    "text": "Machine Learning Modeling\nI chose to utilize the following models: the Multivariate Adaptive Regression Splines model (MARS), K-Nearest Neighbors model (KNN), Logistic Regression model, and RandomForest models to determine the best prediction model for this project. \n\nBackground on Chosen Models\nMARS:\nThe MARS model has some similarities to both Neural Networks and the Partial Least Squares model, but the distinguishing feature is a use of multiple ‘splines’ to create a “piecewise linear model” with multiple features modeling a separate part of the data (Kuhn).\n\n\n\n\n\n\n\n\nFigure 7: MARS Model example from MiniTab\n\n\n\n\n\nKNN:\nThe KNN model predicts based on the closest samples or neighbors. Essentially, to predict a value, the data is broken up into samples/neighbors, and then the nearest samples (using Euclidean distance, typically) to the value of interest are examined to either classify or find a mean between the chosen samples. K represents the number of neighbors to utilize to come to this conclusion (Kuhn).\nLogistic Regression:\nAs mentioned earlier, Logistic Regression is similar to Linear Regression but the difference is that a Logistic Regression focuses on the probability of an event (p, p-1).\nRandomForest:\nRandomForest models take advantage of decision trees. If we think about the scenario in our project (whether someone makes a deposit or not), we could imagine a decsion tree starting with, “after what age is someone more likely to subscribe?” This would be our first node to split the data on. We could continue asking things like, “Are those with housing loans more likely to subscribe?” or “Are those who are married more liklely to subscribe?”, and these would represent more decision nodes for us to split the data on, getting us closer to the mode accurate prediction model. The RandomForest algorithm uses different methods to create several uncorrelated “forests” of decision trees (IBM) .\n\n\n\nBackground On Performance Metrics\nDescription of Key Metrics:\nAccuracy:\nThe proportion of total correct classifications.\nRecall: (Sensitivity)\nThe proportion of Positive cases that were correctly identified. This helps us understand how well we can classify positive cases specifically.\nSpecificity:\nThe proportion of Negative cases that were correctly identified.  Precision:\nThe proportion of Positive classifications that were actually correct.\nF1:\nThe harmonic mean of Precision and Recall. This metric helps iron out extreme values\nROC:\nThe Receiver Operator Characteristic is a plotting technique that shows the threshold difference between Sensitivity (Recall) and Specificity. A model with good performance will have curve closer to the top left of the graph, whereas, a low-performing model will have a curve closer to the middle diagonal line.\n\n\n\n\n\n\n\n\nFigure 8: ROC diagram from DisplayR\n\n\n\n\n\n\n\n\nModel Performance Metrics\nAs highlighted in the data cleaning section, there were two data sets I was focusing on: one that had numeric factors for the categorical predictors, and one that had just numeric variables for the categorical predictors. I decided to examine both so there are a total of 8 different runs recorded below, 4 runs for each dataset.\nTable 3 displays the relevant metrics for the models runs using the predictors that are numeric and are not factors.\n\n\n\n\nTable 3: Performance Metrics for Numeric Unfactored Model Run\n\n\n\n\n\n\nTerm\nMARS\nKNN\nLogReg\nRF\n\n\n\n\naccuracy\n0.882\n0.88\n0.882\n0.887\n\n\nkappa\n0.017\n0.018\n0\n0.126\n\n\nsensitivity\n0.011\n0.014\n1\n0.084\n\n\nspecificity\n0.999\n0.997\n0\n0.994\n\n\nprecision\n0.545\n0.357\n0.882\n0.667\n\n\nrecall\n0.011\n0.014\n1\n0.084\n\n\nf1\n0.022\n0.027\n0.937\n0.149\n\n\n\n\n\n\n\n\nWhile all four models performed fairly similarly, the RandomForest model reported the highest values in all major categories. What stands out very clearly is that while all models have a fairly high accuracy scores, they also have very low recall values. We can deduce that this means the models are great at predicting negative cases (no subscription) but not very adequate at predicting positive cases (subscription). In the case of the Logistic Regression Model, there were 0 positive cases predicted at all, and thus the non-accuracy scores were 0 or NA.\nTable 4 displays the relevant metrics for the models using the predictors that are factors (Age/Balance are still numeric).\n\n\n\n\nTable 4: Performance Metrics for Factored Model Run\n\n\n\n\n\n\nTerm1\nMARS1\nKNN1\nLogReg1\nRF1\n\n\n\n\naccuracy\n0.882\n0.882\n0.881\n0.884\n\n\nkappa\n0\n0.031\n0\n0.144\n\n\nsensitivity\n0\n0.021\n0.001\n0.105\n\n\nspecificity\n1\n0.997\n0.999\n0.989\n\n\nprecision\nNA\n0.524\n0.125\n0.554\n\n\nrecall\n0\n0.021\n0.001\n0.105\n\n\nf1\nNA\n0.04\n0.002\n0.176\n\n\n\n\n\n\n\n\nWith these results we can see that the RandomForest Model is still the best performing, but in this case, the KNN model is not too far behind in most metrics. The Logistic Regression model performed better under these conditions, predicting some positive classes. However, the MARS model did not fare so well. In this run, the MARS model was the model to not identify a single positive class.\nFigure 9 displays the ROC Curve for the first model run. Both ROC charts were identical, so only one is included here.\n\n\n\n\n\n\n\n\nFigure 9\n\n\n\n\n\nThe ROC graph tells an even clearer story. While the RF model had a near perfect threshold trade-off between Sensitivity and Specificity, the other three models had very low ROC scores, again emphasizing poor predictive performance.\n\n\n\nVariables of Importance\nFinally, we can examine which predictors specifically improved prediction the most. That is, which had the greatest weight on the final result. We will compare the difference between the two different runs of the same models. I determined it would only be helpful to include models that had more an 0 positive classes predicted.\nFigure 10 shows the Predictors that had the most impact on the Mars Model – Numeric\n\n\n\n\n\n\n\n\nFigure 10\n\n\n\n\n\nThe numeric MARS models only highlighted a single variable of importance: Age.\n\nFigure 11 shows the Predictors that had the most impact on the KNN Model–Numeric\n\n\n\n\n\n\n\n\nFigure 11\n\n\n\n\n\nBoth KNN model runs returned the exact same most important factors, which were: Housing (whether someone had a housing loan or not), Balance (numeric value representing the customer’s current account balance), and Education (Secondary, Tertiary, etc.).\n\nFigure 12 shows the Predictors that had the most impact on the Logistic Regression Model – Factor\n\n\n\n\n\n\n\n\nFigure 12: KNN Variables of Importance\n\n\n\n\n\nHousing2 indicates that the person does have a housing loan and Loan2 indicates that the person has personal loan. Education3 indicates that the person has attained a tertiary level of education. Additionally we see different days being flagged as important in determining accuracy.\n\nFigure 13 shows the Predictors that had the most impact on the RF Model – Numeric\n\n\n\n\n\n\n\n\nFigure 13: RF Variables of Importance\n\n\n\n\n\n\nFigure 14 shows the Predictors that had the most impact on the RF Model – Factor\n\n\n\n\n\n\n\n\nFigure 14: KNN Variables of Importance\n\n\n\n\n\nFor both RandomForest models, Age and Housing were the variables with most impact on the model’s prediction power. Balance and Day were next for both models in different order of importance."
  },
  {
    "objectID": "classification-prediction project/manuscript/Manuscript - Copy.html#downsampling-machine-learning-models",
    "href": "classification-prediction project/manuscript/Manuscript - Copy.html#downsampling-machine-learning-models",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "DownSampling Machine Learning Models",
    "text": "DownSampling Machine Learning Models\nIn situations involving imbalanced response variables, there are different approaches available that can improve model performance. Kuhn and Johnson describe several different options including “Up-sampling” and “Down-sampling” (Kuhn). Up-sampling involves generating additional synthetic data in order to bring the totals of the response classes up to an equal amount. Down-sampling involves removing random observations until the the majority class is equal to the minority class (or classes). Since this project was already utilizing a fairly large dataset, I decided to perform Down-sampling in order to assist with the response variable imbalance that was being observed. The challenge with this approach is that there is less data to train with, but could lead to a greater overall model performance.\nI performed Down-Sampling on the training data set but kept the test data set intact as it was. It is recommended to allow the test data set to continue representing the natural data distribution in order for the most realistic prediction analysis\n\nDownSampling Model Performance Metrics (Non-factored)\n\n\n\n\n\nTerm\nMARS\nKNN\nLogReg\nRF\n\n\n\n\naccuracy\n0.648\n0.629\n0.624\n0.676\n\n\nkappa\n0.137\n0.106\n0.113\n0.168\n\n\nsensitivity\n0.615\n0.574\n0.626\n0.629\n\n\nspecificity\n0.652\n0.637\n0.602\n0.683\n\n\nprecision\n0.192\n0.175\n0.921\n0.21\n\n\nrecall\n0.615\n0.574\n0.626\n0.629\n\n\nf1\n0.293\n0.269\n0.746\n0.315\n\n\n\n\n\nAt first glance, it appears that the performance power on these models is less than the first models, but this is not the case. While Accuracy was lower among all models, Recall and F1 scores saw tremendous improvements. The model that improved the most was clearly Logistic Regression which didn’t show any Precision or F1 power initially, but now shows better Precision and F1 than the RandomForest model, which still showed to the be the superior model after this run.\n\n\n\nDownSampling Model Performance Metrics (Factored)\n\n\n\n\n\nTerm1\nMARS1\nKNN1\nLogReg1\nRF1\n\n\n\n\naccuracy\n0.65\n0.618\n0.647\n0.61\n\n\nkappa\n0.136\n0.123\n0.135\n0.13\n\n\nsensitivity\n0.61\n0.642\n0.612\n0.677\n\n\nspecificity\n0.655\n0.615\n0.652\n0.602\n\n\nprecision\n0.192\n0.183\n0.191\n0.186\n\n\nrecall\n0.61\n0.642\n0.612\n0.677\n\n\nf1\n0.292\n0.285\n0.291\n0.292\n\n\n\n\n\nWe can observe similar changes in the second Down-sampled run. In the Factored-Down-Sampled model runs, we also see that it is harder to identify a single model of best performance. The MARS model showed the best Accuracy and Specificity, while the RandomForest model showed the best Sensitivity and Precision. The Logistic Regression model was not far behind in these categories and managed to approximately tie three ways for the F1 metric, along with the MARS Model and RandomForest Model.\n\nTable 5 displays the ROC Curve for the Down-Sampled model runs. Again, both ROC charts were identical, so only one is included here.\n\n\n\n\nTable 5\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe can see much better results on the ROC model compared to the first runs. The RandomForest again performs nearly perfectly, but all three remaining models show some promise in terms of threshold trade-off, with the MARS model leading these three.\n\n\n\nVariables of Importance for Down-Sampled Models\nFigure 15 shows the Predictors that had the most impact on the Down-Sampled Mars Model – Factored\n\n\n\n\n\n\n\n\nFigure 15\n\n\n\n\n\nBoth MARS models highlighted essentially the same variables of importance, with added detail coming from the factored model. As mentioned previously, Housing2 indicates that the person does have a housing loan and Loan2 indicates that the person has personal loan. Education3 indicates that the person has attained a tertiary level of education. Marital 2 indicates the person is married.\n\nFigure 16 shows the Predictors that had the most impact on the Down-Sampled KNN Models (both models highlighted the same variables)\n\n\n\n\n\n\n\n\nFigure 16\n\n\n\n\n\nThe variables highlighted here are the same that were highlighted in the original KNN models with the only exception being the Marital variable moved up one spot on this list.\n\nFigure 17 shows the Predictors that had the most impact on the Down-Sampled Logistic Regression Model – Factored\n\n\n\n\n\n\n\n\nFigure 17\n\n\n\n\n\nThese are practically the same variables highlighted in the original Logistic Regression Model, except while the ‘Education3’ variable was the third most important variable on the original model, it is nowhere to be found on this new list. In contrast, the ‘Job3’ (Technician) variable makes an appearance as having a substantial impact on prediction power.\n\nFigure 18 shows the Predictors that had the most impact on the Down-Sampled Logistic Regression Model – Factored\n\n\n\n\n\n\n\n\nFigure 18\n\n\n\n\n\nWhile the two Down-Sampled models were fairly close in highlighting variables, there was quite a bit of difference between these results and the original RandomForest model. Where the original highlighted, Age, Housing, Day and Balance, the new models highlighted Housing, Age, Balance, and Loan."
  },
  {
    "objectID": "classification-prediction project/manuscript/Manuscript - Copy.html#summary-and-interpretation",
    "href": "classification-prediction project/manuscript/Manuscript - Copy.html#summary-and-interpretation",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Summary and Interpretation",
    "text": "Summary and Interpretation\nInitially the metrics produced by these models were showing substantial promise, but as I investigated the different confusion matrices I realized that the metrics were incorrectly labeling the negative classification as positive. When I reversed this option, the metrics very clearly shows that there was a drop in performance for predicting positive classifications. One explanation for this is that there were too few positive classes in the data as a whole. In the full data set, about 11% of the observations were positive cases, and this was also the case in the test data set as well. Given the size of the data set (45K records), and the small proportion of positive cases, there is reason to conclude that the models were victim to lack of familiarity with the positive cases.\nUsing a Down-Sampling approach to alleviate the imbalance issue resulted in models with greater predictive power and gave more clarity on which variables (and in some cases, sub-variables) contributed the most towards correctly predicting the response variable.\nAll four models provided insights for this objective. The Housing variable was listed as the most important variable by every model with the exception of the Mars-Numeric model. Balance and Age were also listed as important by several different models. The variables that did not show up in the five important variables in any of the models were: Marital, Job, and Default. Education, Loan, and Day had a significant effect on some of the models and little to no effect on others."
  },
  {
    "objectID": "classification-prediction project/manuscript/Manuscript - Copy.html#conclusions",
    "href": "classification-prediction project/manuscript/Manuscript - Copy.html#conclusions",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Conclusions",
    "text": "Conclusions\nUsing machine learning to better define a customer base can be an incredibly effective way to create more efficient marketing campaigns, as well as provide direction for better management of marketing resources.\nI attempted to develop a classification model that accurately predicted whether a customer had subscribed to a term deposit or not. While the different models that were ran initially showed potential, the predictive power of the best model was not at an ideal level. With a more balanced data set with similar variables, it is probable that a more precise model could have been produced.\nThe other goal of this project was to identify which variables could best aid in identifying customers that would subscribe to a term deposit. I found that there was quite a bit of variance among the predictors in terms of importance, with some predictors clearly standing out above the rest. This information could be used to better segment a consumer pool or adjust marketing tactics to prioritize customers displaying the variables of importance uncovered in this project.\nFurther research would include utilizing additional models to confirm the results presented here, incorporating a more balanced data set (as mentioned above), and exploring different tuning options than were used in this project."
  },
  {
    "objectID": "classification-prediction project/data/processed-data/readme.html",
    "href": "classification-prediction project/data/processed-data/readme.html",
    "title": "processed-data",
    "section": "",
    "text": "processed-data\nThis folder contains data that has been processed and cleaned by code.\nAny files located in here are based on the raw data and can be re-created running the various processing/cleaning code scripts in the code folder.\n\nProcesseddata1.rds is the original clean data set with both character-factor predictors and numeric predictors\nProcesseddata2.rds is a data set that attempted to utilize Dummy Variables. I did not end up using this for analysis\nProcesseddata3.rds is the clean data set with the character factors converted to numeric factors.\nProcesseddata4.rds is the same as processeddata3 except the numeric factors have been converted to true numeric values\nProcesseddata5.rds is the same as processedata4 except additional “attribute” information has been stripped from the numeric categorical values for the SOLE purpose of working with the Corrplot in the EDA QMD."
  },
  {
    "objectID": "classification-prediction project/code/processing/processing.html",
    "href": "classification-prediction project/code/processing/processing.html",
    "title": "Preparing data for analysis",
    "section": "",
    "text": "Setup\nThe following packages are needed for this data processing\n\nlibrary(readxl) \nlibrary(dplyr) \nlibrary(tidyr) \nlibrary(skimr) \nlibrary(here) \nlibrary(caret)\n\n\n\nData loading\n\ndata_location &lt;- here::here(\"data\",\"raw-data\",\"bank-full.csv\")\nrawdata &lt;- read.csv(data_location, header = TRUE, sep=\";\")\n\n\n\nCheck data\nExamining metadata by accessing the codebook. This codebook was taken directly from the data repository housing the chosen dataset. The decision was made to keep this in a separate xlsx file from the dataset so that the dataset could remain in the identical form in which it was sourced (CSV format).\n\ncodebook_location &lt;- \nhere::here(\"data\",\"raw-data\",\"codebook.xlsx\")\n\ncodebook &lt;- readxl::read_excel(codebook_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 17 × 4\n   `Variable Name` Type        Description                      `Missing Values`\n   &lt;chr&gt;           &lt;chr&gt;       &lt;chr&gt;                            &lt;chr&gt;           \n 1 age             Integer     &lt;NA&gt;                             no              \n 2 job             Categorical type of job (categorical: 'admi… no              \n 3 marital         Categorical marital status (categorical: 'd… no              \n 4 education       Categorical (categorical: 'basic.4y','basic… no              \n 5 default         Binary      has credit in default?           no              \n 6 balance         Integer     average yearly balance in euros  no              \n 7 housing         Binary      has housing loan?                no              \n 8 loan            Binary      has personal loan?               no              \n 9 contact         Categorical contact communication type (cat… yes             \n10 day_of_week     Date        last contact day of the week     no              \n11 month           Date        last contact month of year (cat… no              \n12 duration        Integer     last contact duration, in secon… no              \n13 campaign        Integer     number of contacts performed du… no              \n14 pdays           Integer     number of days that passed by a… yes             \n15 previous        Integer     number of contacts performed be… no              \n16 poutcome        Categorical outcome of the previous marketi… yes             \n17 y               Binary      has the client subscribed a ter… no              \n\n\nVarious ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 45,211\nColumns: 17\n$ age       &lt;int&gt; 58, 44, 33, 47, 33, 35, 28, 42, 58, 43, 41, 29, 53, 58, 57, …\n$ job       &lt;chr&gt; \"management\", \"technician\", \"entrepreneur\", \"blue-collar\", \"…\n$ marital   &lt;chr&gt; \"married\", \"single\", \"married\", \"married\", \"single\", \"marrie…\n$ education &lt;chr&gt; \"tertiary\", \"secondary\", \"secondary\", \"unknown\", \"unknown\", …\n$ default   &lt;chr&gt; \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"yes\", \"no\", \"no\",…\n$ balance   &lt;int&gt; 2143, 29, 2, 1506, 1, 231, 447, 2, 121, 593, 270, 390, 6, 71…\n$ housing   &lt;chr&gt; \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\"…\n$ loan      &lt;chr&gt; \"no\", \"no\", \"yes\", \"no\", \"no\", \"no\", \"yes\", \"no\", \"no\", \"no\"…\n$ contact   &lt;chr&gt; \"unknown\", \"unknown\", \"unknown\", \"unknown\", \"unknown\", \"unkn…\n$ day       &lt;int&gt; 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, …\n$ month     &lt;chr&gt; \"may\", \"may\", \"may\", \"may\", \"may\", \"may\", \"may\", \"may\", \"may…\n$ duration  &lt;int&gt; 261, 151, 76, 92, 198, 139, 217, 380, 50, 55, 222, 137, 517,…\n$ campaign  &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ pdays     &lt;int&gt; -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, …\n$ previous  &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ poutcome  &lt;chr&gt; \"unknown\", \"unknown\", \"unknown\", \"unknown\", \"unknown\", \"unkn…\n$ y         &lt;chr&gt; \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", …\n\nsummary(rawdata)\n\n      age            job              marital           education        \n Min.   :18.00   Length:45211       Length:45211       Length:45211      \n 1st Qu.:33.00   Class :character   Class :character   Class :character  \n Median :39.00   Mode  :character   Mode  :character   Mode  :character  \n Mean   :40.94                                                           \n 3rd Qu.:48.00                                                           \n Max.   :95.00                                                           \n   default             balance         housing              loan          \n Length:45211       Min.   : -8019   Length:45211       Length:45211      \n Class :character   1st Qu.:    72   Class :character   Class :character  \n Mode  :character   Median :   448   Mode  :character   Mode  :character  \n                    Mean   :  1362                                        \n                    3rd Qu.:  1428                                        \n                    Max.   :102127                                        \n   contact               day           month              duration     \n Length:45211       Min.   : 1.00   Length:45211       Min.   :   0.0  \n Class :character   1st Qu.: 8.00   Class :character   1st Qu.: 103.0  \n Mode  :character   Median :16.00   Mode  :character   Median : 180.0  \n                    Mean   :15.81                      Mean   : 258.2  \n                    3rd Qu.:21.00                      3rd Qu.: 319.0  \n                    Max.   :31.00                      Max.   :4918.0  \n    campaign          pdays          previous          poutcome        \n Min.   : 1.000   Min.   : -1.0   Min.   :  0.0000   Length:45211      \n 1st Qu.: 1.000   1st Qu.: -1.0   1st Qu.:  0.0000   Class :character  \n Median : 2.000   Median : -1.0   Median :  0.0000   Mode  :character  \n Mean   : 2.764   Mean   : 40.2   Mean   :  0.5803                     \n 3rd Qu.: 3.000   3rd Qu.: -1.0   3rd Qu.:  0.0000                     \n Max.   :63.000   Max.   :871.0   Max.   :275.0000                     \n      y            \n Length:45211      \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n\nhead(rawdata)\n\n  age          job marital education default balance housing loan contact day\n1  58   management married  tertiary      no    2143     yes   no unknown   5\n2  44   technician  single secondary      no      29     yes   no unknown   5\n3  33 entrepreneur married secondary      no       2     yes  yes unknown   5\n4  47  blue-collar married   unknown      no    1506     yes   no unknown   5\n5  33      unknown  single   unknown      no       1      no   no unknown   5\n6  35   management married  tertiary      no     231     yes   no unknown   5\n  month duration campaign pdays previous poutcome  y\n1   may      261        1    -1        0  unknown no\n2   may      151        1    -1        0  unknown no\n3   may       76        1    -1        0  unknown no\n4   may       92        1    -1        0  unknown no\n5   may      198        1    -1        0  unknown no\n6   may      139        1    -1        0  unknown no\n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n45211\n\n\nNumber of columns\n17\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n10\n\n\nnumeric\n7\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\njob\n0\n1\n6\n13\n0\n12\n0\n\n\nmarital\n0\n1\n6\n8\n0\n3\n0\n\n\neducation\n0\n1\n7\n9\n0\n4\n0\n\n\ndefault\n0\n1\n2\n3\n0\n2\n0\n\n\nhousing\n0\n1\n2\n3\n0\n2\n0\n\n\nloan\n0\n1\n2\n3\n0\n2\n0\n\n\ncontact\n0\n1\n7\n9\n0\n3\n0\n\n\nmonth\n0\n1\n3\n3\n0\n12\n0\n\n\npoutcome\n0\n1\n5\n7\n0\n4\n0\n\n\ny\n0\n1\n2\n3\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nage\n0\n1\n40.94\n10.62\n18\n33\n39\n48\n95\n▅▇▃▁▁\n\n\nbalance\n0\n1\n1362.27\n3044.77\n-8019\n72\n448\n1428\n102127\n▇▁▁▁▁\n\n\nday\n0\n1\n15.81\n8.32\n1\n8\n16\n21\n31\n▇▆▇▆▆\n\n\nduration\n0\n1\n258.16\n257.53\n0\n103\n180\n319\n4918\n▇▁▁▁▁\n\n\ncampaign\n0\n1\n2.76\n3.10\n1\n1\n2\n3\n63\n▇▁▁▁▁\n\n\npdays\n0\n1\n40.20\n100.13\n-1\n-1\n-1\n-1\n871\n▇▁▁▁▁\n\n\nprevious\n0\n1\n0.58\n2.30\n0\n0\n0\n0\n275\n▇▁▁▁▁\n\n\n\n\n\n\n\nCleaning the data\nWe are mainly converting character variables into factors so we can do some categorical analysis. I had initially included converting months to a numeric variable but realized that it was fine as a factor variable.\n\nd1 = rawdata |&gt; \n  mutate(job = as.factor(job)) |&gt;\n  mutate(marital = as.factor(marital)) |&gt;\n  mutate(education = as.factor(education)) |&gt;\n  mutate(default = as.factor(default)) |&gt;\n  mutate(housing = as.factor(housing)) |&gt;\n  mutate(loan = as.factor(loan)) |&gt;\n  mutate(education = as.factor(education)) |&gt;\n  mutate(contact = as.factor(contact)) |&gt;\n  mutate(month = as.factor(month)) |&gt;\n  mutate(y = ifelse(y == \"yes\", 1, 0)) |&gt;\n  mutate(y = as.factor(y)) |&gt;\n  mutate(poutcome = as.factor(poutcome)) |&gt;\n  mutate(day = as.factor(day)) |&gt;\n  mutate(y = as.factor(y)) %&gt;% \n  select(!duration)\n \n\ncolnames(d1)[16] &lt;- \"y_termSubscribed\"\n\n\nsummary(d1)\n\n      age                 job           marital          education    \n Min.   :18.00   blue-collar:9732   divorced: 5207   primary  : 6851  \n 1st Qu.:33.00   management :9458   married :27214   secondary:23202  \n Median :39.00   technician :7597   single  :12790   tertiary :13301  \n Mean   :40.94   admin.     :5171                    unknown  : 1857  \n 3rd Qu.:48.00   services   :4154                                     \n Max.   :95.00   retired    :2264                                     \n                 (Other)    :6835                                     \n default        balance       housing      loan            contact     \n no :44396   Min.   : -8019   no :20081   no :37967   cellular :29285  \n yes:  815   1st Qu.:    72   yes:25130   yes: 7244   telephone: 2906  \n             Median :   448                           unknown  :13020  \n             Mean   :  1362                                            \n             3rd Qu.:  1428                                            \n             Max.   :102127                                            \n                                                                       \n      day            month          campaign          pdays      \n 20     : 2752   may    :13766   Min.   : 1.000   Min.   : -1.0  \n 18     : 2308   jul    : 6895   1st Qu.: 1.000   1st Qu.: -1.0  \n 21     : 2026   aug    : 6247   Median : 2.000   Median : -1.0  \n 17     : 1939   jun    : 5341   Mean   : 2.764   Mean   : 40.2  \n 6      : 1932   nov    : 3970   3rd Qu.: 3.000   3rd Qu.: -1.0  \n 5      : 1910   apr    : 2932   Max.   :63.000   Max.   :871.0  \n (Other):32344   (Other): 6060                                   \n    previous           poutcome     y_termSubscribed\n Min.   :  0.0000   failure: 4901   0:39922         \n 1st Qu.:  0.0000   other  : 1840   1: 5289         \n Median :  0.0000   success: 1511                   \n Mean   :  0.5803   unknown:36959                   \n 3rd Qu.:  0.0000                                   \n Max.   :275.0000                                   \n                                                    \n\n\nAll done, data is clean now.\n\n\nSave data\n\nprocesseddata1 &lt;- d1\n\nsave_data_location &lt;- here::here(\"data\",\"processed-data\",\"processeddata1.rds\")\nsaveRDS(processeddata1, file = save_data_location)\n\n\n\nData set 2: Attempting to convert categorical variables to dummy\n\ntesting_dummy = processeddata1 %&gt;% \n  select(job, marital, education, default, housing, loan, contact) %&gt;% \n  mutate(ID = row_number())\n\n\ndummy &lt;- dummyVars(\"~.\", data=testing_dummy)\ndf1 &lt;- predict(dummy, newdata = testing_dummy)\n\ndf1 = as.data.frame(df1)\n\nnumeric_vars = processeddata1 %&gt;% \n  select(age, balance, day, y_termSubscribed) %&gt;% \n  mutate(ID = row_number())\n\nd2 &lt;- merge(df1,numeric_vars, by = \"ID\")\n\n\nsave_data_location &lt;- here::here(\"data\",\"processed-data\",\"processeddata2.rds\")\nsaveRDS(d2, file = save_data_location)\n\n\n\nDataset 3: Converting categorical variables to numeric factors\n\nd3 = processeddata1 |&gt;\n  select(job, marital, education, default, housing, loan, age, balance, day, y_termSubscribed) |&gt;\n  mutate(job = as.factor(unclass(job))) |&gt;\n  mutate(marital = as.factor(unclass(marital))) |&gt;\n  mutate(education = as.factor(unclass(education))) |&gt;\n  mutate(default = as.factor(unclass(default))) |&gt;\n  mutate(housing = as.factor(unclass(housing))) |&gt;\n  mutate(loan = as.factor(unclass(loan)))\n\n\nsave_data_location &lt;- here::here(\"data\",\"processed-data\",\"processeddata3.rds\")\nsaveRDS(d3, file = save_data_location)\n\n\n\nDataset 4: Converting categorical variables to true numeric values\n\nd4 = processeddata1 |&gt;\n  select(job, marital, education, default, housing, loan, age, balance, day, y_termSubscribed) |&gt;\n  mutate(job = unclass(job)) |&gt;\n  mutate(marital = unclass(marital)) |&gt;\n  mutate(education = unclass(education)) |&gt;\n  mutate(default = unclass(default)) |&gt;\n  mutate(housing = unclass(housing)) |&gt;\n  mutate(loan = unclass(loan))|&gt;\n  mutate(day = unclass(day))\n\n\nsave_data_location &lt;- here::here(\"data\",\"processed-data\",\"processeddata4.rds\")\nsaveRDS(d4, file = save_data_location)\n\n\n\nDataset 5: Remving “Attributes” from numeric factor variables (for Corrplot)\n\nd5 = processeddata1 |&gt;\n  select(job, marital, education, default, housing, loan, age, balance, day, y_termSubscribed) |&gt;\n  mutate(job = as.numeric(job)) |&gt;\n  mutate(marital = as.numeric(marital)) |&gt;\n  mutate(education = as.numeric(education)) |&gt;\n  mutate(default = as.numeric(default)) |&gt;\n  mutate(housing = as.numeric(housing)) |&gt;\n  mutate(loan = as.numeric(loan))|&gt;\n  mutate(day = as.numeric(day))\n\n\nsave_data_location &lt;- here::here(\"data\",\"processed-data\",\"processeddata5.rds\")\nsaveRDS(d5, file = save_data_location)"
  },
  {
    "objectID": "classification-prediction project/code/eda/eda.html",
    "href": "classification-prediction project/code/eda/eda.html",
    "title": "Exploratory Data Analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\n\nSetup\nNecessary libraries for this script.\n\nlibrary(here) \nlibrary(dplyr)\nlibrary(skimr)\nlibrary(ggplot2)\nlibrary(scales)\nlibrary(tidyr)\nlibrary(forcats)\nlibrary(corrplot)\nlibrary(corrplot)\nlibrary(knitr)\nlibrary(kableExtra)\n\nLoading the data.\n\n#If this doesn't initially work, try restarting R and then proceeding\ndata_location &lt;- here::here(\"data\",\"processed-data\",\"processeddata1.rds\")\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nCreating a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             45211 \nNumber of columns          16    \n_______________________          \nColumn type frequency:           \n  factor                   11    \n  numeric                  5     \n________________________         \nGroup variables            None  \n\n── Variable type: factor ───────────────────────────────────────────────────────\n   skim_variable    n_missing complete_rate ordered n_unique\n 1 job                      0             1 FALSE         12\n 2 marital                  0             1 FALSE          3\n 3 education                0             1 FALSE          4\n 4 default                  0             1 FALSE          2\n 5 housing                  0             1 FALSE          2\n 6 loan                     0             1 FALSE          2\n 7 contact                  0             1 FALSE          3\n 8 day                      0             1 FALSE         31\n 9 month                    0             1 FALSE         12\n10 poutcome                 0             1 FALSE          4\n11 y_termSubscribed         0             1 FALSE          2\n   top_counts                                  \n 1 blu: 9732, man: 9458, tec: 7597, adm: 5171  \n 2 mar: 27214, sin: 12790, div: 5207           \n 3 sec: 23202, ter: 13301, pri: 6851, unk: 1857\n 4 no: 44396, yes: 815                         \n 5 yes: 25130, no: 20081                       \n 6 no: 37967, yes: 7244                        \n 7 cel: 29285, unk: 13020, tel: 2906           \n 8 20: 2752, 18: 2308, 21: 2026, 17: 1939      \n 9 may: 13766, jul: 6895, aug: 6247, jun: 5341 \n10 unk: 36959, fai: 4901, oth: 1840, suc: 1511 \n11 0: 39922, 1: 5289                           \n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate     mean      sd    p0 p25 p50  p75\n1 age                   0             1   40.9     10.6     18  33  39   48\n2 balance               0             1 1362.    3045.   -8019  72 448 1428\n3 campaign              0             1    2.76     3.10     1   1   2    3\n4 pdays                 0             1   40.2    100.      -1  -1  -1   -1\n5 previous              0             1    0.580    2.30     0   0   0    0\n    p100 hist \n1     95 ▅▇▃▁▁\n2 102127 ▇▁▁▁▁\n3     63 ▇▁▁▁▁\n4    871 ▇▁▁▁▁\n5    275 ▇▁▁▁▁\n\n# save to file\nsummarytable_file = here(\"results\", \"tables\", \"summarytable1.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\n\ndata_location &lt;- here::here(\"data\",\"processed-data\",\"processeddata1.rds\")\nmydata1 &lt;- readRDS(data_location)\n\nmydata1 = mydata1 %&gt;% \n  select(age, job, marital, education, default, balance, housing, loan, contact, day, month, y_termSubscribed)\n\nstr_summary &lt;- capture.output(str(mydata1))\n\ndescribetbl1 = kable(str_summary, caption = \"Summary of predictors\") %&gt;%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"), full_width = F)\n\nsummarytable_file = here(\"results\", \"tables\", \"describetbl1.rds\")\nsaveRDS(describetbl1, file = summarytable_file)\n\n\ndescribetbl1\n\n\n\n\nSummary of predictors\n\n\nx\n\n\n\n\n'data.frame': 45211 obs. of 12 variables:\n\n\n$ age : int 58 44 33 47 33 35 28 42 58 43 ...\n\n\n$ job : Factor w/ 12 levels \"admin.\",\"blue-collar\",..: 5 10 3 2 12 5 5 3 6 10 ...\n\n\n$ marital : Factor w/ 3 levels \"divorced\",\"married\",..: 2 3 2 2 3 2 3 1 2 3 ...\n\n\n$ education : Factor w/ 4 levels \"primary\",\"secondary\",..: 3 2 2 4 4 3 3 3 1 2 ...\n\n\n$ default : Factor w/ 2 levels \"no\",\"yes\": 1 1 1 1 1 1 1 2 1 1 ...\n\n\n$ balance : int 2143 29 2 1506 1 231 447 2 121 593 ...\n\n\n$ housing : Factor w/ 2 levels \"no\",\"yes\": 2 2 2 2 1 2 2 2 2 2 ...\n\n\n$ loan : Factor w/ 2 levels \"no\",\"yes\": 1 1 2 1 1 1 2 1 1 1 ...\n\n\n$ contact : Factor w/ 3 levels \"cellular\",\"telephone\",..: 3 3 3 3 3 3 3 3 3 3 ...\n\n\n$ day : Factor w/ 31 levels \"1\",\"2\",\"3\",\"4\",..: 5 5 5 5 5 5 5 5 5 5 ...\n\n\n$ month : Factor w/ 12 levels \"apr\",\"aug\",\"dec\",..: 9 9 9 9 9 9 9 9 9 9 ...\n\n\n$ y_termSubscribed: Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 1 1 ...\n\n\n\n\n\n\n\n\n\n\n\nData exploration through figures\nHistogram plots for some continuous outcomes.\nAge first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=age)) + geom_histogram()\nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"results\", \"figures\",\"age-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNext bank account balance.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=balance)) + geom_histogram() + scale_x_log10(labels =label_dollar())\nplot(p2)\n\nWarning in transformation$transform(x): NaNs produced\n\n\nWarning in scale_x_log10(labels = label_dollar()): log-10 transformation\nintroduced infinite values.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 7280 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\nfigure_file = here(\"results\", \"figures\",\"balance-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n\n\nWarning in transformation$transform(x): NaNs produced\nWarning in transformation$transform(x): log-10 transformation introduced\ninfinite values.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 7280 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\nNow balance as function of age\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=age, y=balance)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"results\", \"figures\", \"age-balance-scatter.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nNow balance as function of age, stratified by the marital variable.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=age, y=balance, color = marital)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"results\", \"figures\", \"age-balance-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nNext, exploring balance across different job types.\n\np5 = mydata |&gt;\n  ggplot(aes(balance, job))+\n  geom_boxplot()+\n  scale_x_log10(labels =label_dollar())\np5\n\nWarning in transformation$transform(x): NaNs produced\n\n\nWarning in scale_x_log10(labels = label_dollar()): log-10 transformation\nintroduced infinite values.\n\n\nWarning: Removed 7280 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\nfigure_file = here(\"results\", \"figures\", \"job-balance-scatter.png\")\nggsave(filename = figure_file, plot=p5) \n\nSaving 7 x 5 in image\n\n\nWarning in transformation$transform(x): NaNs produced\n\n\nWarning in scale_x_log10(labels = label_dollar()): log-10 transformation\nintroduced infinite values.\n\n\nWarning: Removed 7280 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\nNow, some barplots examining job types, education level, and marital status.\n\np6 = mydata |&gt;\n  ggplot(aes(x=fct_infreq(job)))+\n  geom_bar() +\n  coord_flip()\n\np7 = mydata |&gt;\n  ggplot(aes(education))+\n  geom_bar()\n\np8 = mydata |&gt;\n  ggplot(aes(marital))+\n  geom_bar()\n\n\np6\n\n\n\n\n\n\n\np7\n\n\n\n\n\n\n\np8\n\n\n\n\n\n\n\nfigure_file = here(\"results\", \"figures\", \"job-barchart.png\")\nggsave(filename = figure_file, plot=p6) \n\nSaving 7 x 5 in image\n\nfigure_file = here(\"results\", \"figures\", \"education-barchart.png\")\nggsave(filename = figure_file, plot=p7) \n\nSaving 7 x 5 in image\n\nfigure_file = here(\"results\", \"figures\", \"marital-barchart.png\")\nggsave(filename = figure_file, plot=p8) \n\nSaving 7 x 5 in image\n\n\nLets see how the age demographic differs between the population that subscribed to a term (y_termsubscribed=yes) vs the general population.\n\np9 = mydata |&gt;\n  filter(y_termSubscribed == 1) |&gt;\n  ggplot(aes(age))+\n  geom_bar()+\n  labs(title = \"yes\")\n\np10 = mydata |&gt;\n  ggplot(aes(age))+\n  geom_bar()+\n  labs(title = \"yes/no\")\n\np9\n\n\n\n\n\n\n\np10\n\n\n\n\n\n\n\nfigure_file = here(\"results\", \"figures\", \"yes-age.png\")\nggsave(filename = figure_file, plot=p9) \n\nSaving 7 x 5 in image\n\nfigure_file = here(\"results\", \"figures\", \"yes-no-age.png\")\nggsave(filename = figure_file, plot=p10) \n\nSaving 7 x 5 in image\n\n#Comparing how age data compares from those who subscribed to a term deposit and those\n#that did not\nggplot(data=mydata)+\n  geom_bar(mapping =aes(x=age))+\n  facet_wrap(~y_termSubscribed, nrow=2)\n\n\n\n\n\n\n\n\nNow, lets assess the highest job categories that are labeled as subscribing to a term.\n\np11 = mydata |&gt;\n  filter(y_termSubscribed == 1) |&gt;\n  ggplot(aes(x=fct_infreq(job)))+\n  geom_bar()+\n  coord_flip()+\n  labs(title = \"Term Subscribed = yes\")\n\np11\n\n\n\n\n\n\n\n\nTaking a quick look at some of the binary variables in the dataset\n\nggplot(data=mydata)+\n  geom_bar(mapping =aes(x=default))\n\n\n\n\n\n\n\nggplot(data=mydata)+\n  geom_bar(mapping =aes(x=housing))\n\n\n\n\n\n\n\nggplot(data=mydata)+\n  geom_bar(mapping =aes(x=loan))\n\n\n\n\n\n\n\n\nTaking a look at frequency counts across different variables of interest\n\nhist(mydata$age)\n\n\n\n\n\n\n\nhist(mydata$balance)\n\n\n\n\n\n\n\n\nExamining which days are most common for recording a positive outcome (subscribing to a term deposit). Looks like later in the month has higher frequencies.\n\np12= mydata |&gt;\n  filter(y_termSubscribed == 1) |&gt;\n  ggplot(aes(day))+\n  geom_bar()+\n  labs(title = \"yes\")\n\np12\n\n\n\n\n\n\n\nfigure_file = here(\"results\", \"figures\", \"days-yes.png\")\nggsave(filename = figure_file, plot=p12) \n\nSaving 7 x 5 in image\n\n\nWe’ve analyzed which job types had the MOST positive outcomes, but now we want to compare which job type had the greatest PERCENT of positive outcomes.\n\nposjob = mydata %&gt;% \n  filter(y_termSubscribed==1) %&gt;% \n  count(y_termSubscribed, job, sort=TRUE)\n\njobtable = mydata %&gt;% count(job)\n\npctjob = posjob %&gt;% \n  left_join(jobtable, by =\"job\")\n\n\ncolnames(pctjob)[3] &lt;- \"numofYES\"\ncolnames(pctjob)[4] &lt;- \"numofBOTH\"\n\n\np13 = ggplot(pctjob, aes(x=reorder(job, numofYES), y=numofYES, fill=numofYES))+\n  geom_bar(stat=\"identity\")+\n  coord_flip()\n  \np14 = ggplot(pctjob, aes(x=reorder(job, (numofYES/numofBOTH)), y=(numofYES/numofBOTH), fill=numofYES))+\n  geom_bar(stat=\"identity\")+\n  coord_flip()\n\nfigure_file = here(\"results\", \"figures\", \"jobs-count-yes.png\")\nggsave(filename = figure_file, plot=p13) \n\nSaving 7 x 5 in image\n\nfigure_file = here(\"results\", \"figures\", \"jobs-percent-yes.png\")\nggsave(filename = figure_file, plot=p14) \n\nSaving 7 x 5 in image\n\np13\n\n\n\n\n\n\n\np14\n\n\n\n\n\n\n\n\nOn the first figure, we can see that jobs with the most positive outcomes are management, technician, and blue-collar, but on the second chart we can see that the job-types with the highest percentages are ‘student’, ‘retired’, and ‘unemployed.’ There appears to be a noticable different between the total number of positive cases, and the job types which are most commonly recording positive cases.\n\ndata_location &lt;- here::here(\"data\",\"processed-data\",\"processeddata5.rds\")\nmydata &lt;- readRDS(data_location)\n\nnumericonly = mydata %&gt;% \n  select(!y_termSubscribed)\n\n\n# Specify the file path where the image will be saved\nfile_path &lt;- here(\"results\", \"figures\",\"corplot.png\")\n\n# Open a PNG graphics device\npng(filename = file_path, width = 800, height = 600)\n\n# Create the correlation plot\ncorrplot(cor(numericonly))\n\n# Close the graphics device\ndev.off()\n\npng \n  2"
  },
  {
    "objectID": "classification-prediction project/code/eda/readme.html",
    "href": "classification-prediction project/code/eda/readme.html",
    "title": "eda-code",
    "section": "",
    "text": "eda-code\nThis folder contains code to do a simple exploratory data analysis (EDA) on the processed/cleaned data. The code produces a few tables and figures, which are saved in the results sub-folder."
  },
  {
    "objectID": "classification-prediction project/code/processing/readme.html",
    "href": "classification-prediction project/code/processing/readme.html",
    "title": "processing-code",
    "section": "",
    "text": "processing-code\nThis folder contains code for processing data.\nThis code will read in the raw data pulled straight from the data repository where the dataset was sourced in a semi-colon separated csv."
  },
  {
    "objectID": "classification-prediction project/manuscript/Manuscript.html",
    "href": "classification-prediction project/manuscript/Manuscript.html",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "",
    "text": "Financial institutions spend billions of dollars on their marketing teams every year, with a positive trend observed in 2023 for the largest and smallest banks (Ally Akins (2024)). With the need for efficient marketing becoming more and more important, machine learning models are viable tools for refining marketing strategies. This project will seek to identify a model for predicting consumer financial behavior using a dataset from a Portuguese bank. Through comparing the accuracy and predictive power of four different machine learning models, this project will identify an ideal method for prediction."
  },
  {
    "objectID": "classification-prediction project/manuscript/Manuscript.html#general-background-information",
    "href": "classification-prediction project/manuscript/Manuscript.html#general-background-information",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "General Background Information",
    "text": "General Background Information\nIn 2022, JPMorgan Chase & Co. spent $3.9 billion (US) dollars on Marketing, leading other financial institutions in this category. Recent reports have shown that this has only grown in past years (Co. (2023)). Providing businesses with a model that will allow prioritization of consumers and/or demographics has great potential in improving resource management and future marketing campaigns, as well as increasing efficient spending. This particular project will utilize Classification Prediction. Unlike Regression Prediction which will attempt to predict a continuous value (e.g., x amount of dollars, x amount of cells), Classification Prediction seeks to train a model that can correctly predict a classification (e.g., True/False, Success/Failure) based on the given predictors(Kuhn (2018)). In our case, our y variable or response variable is a binary variable, Yes/No, answering whether or not a customer subscribed to a term deposit."
  },
  {
    "objectID": "classification-prediction project/manuscript/Manuscript.html#description-of-data-and-data-source",
    "href": "classification-prediction project/manuscript/Manuscript.html#description-of-data-and-data-source",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Description of data and data source",
    "text": "Description of data and data source\nThe data was donated on 2/13/2012. It was collected from phone call marketing campaigns performed by a Portuguese banking institution. I have accessed this data from the UC Irvine Machine Learning Repository.\nThere are 45,212 records, 17 columns/variables which include: age, marital status, job, education, details related to the phone call, as well as answers related to questions about past credit history. Additionally, as mentioned, the classification variable is whether or not the person subscribed to a term deposit."
  },
  {
    "objectID": "classification-prediction project/manuscript/Manuscript.html#questionshypotheses-to-be-addressed",
    "href": "classification-prediction project/manuscript/Manuscript.html#questionshypotheses-to-be-addressed",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Questions/Hypotheses to be addressed",
    "text": "Questions/Hypotheses to be addressed\nThe research question I plan to address with my analysis is: which features or combination of features are the best predictors of consumers making a deposit? The desired output of this analysis is a model which allows a financial institution to make better decisions regarding future marketing campaigns. I plan to investigate all demographic variables, with a specific focus on job type, education and age."
  },
  {
    "objectID": "classification-prediction project/manuscript/Manuscript.html#data-aquisition",
    "href": "classification-prediction project/manuscript/Manuscript.html#data-aquisition",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Data aquisition",
    "text": "Data aquisition\nThe dataset for this project was retrieved from UCI ML Repository in CSV form. Additionally, I created a codebook based on data from the same source."
  },
  {
    "objectID": "classification-prediction project/manuscript/Manuscript.html#data-import-and-cleaning",
    "href": "classification-prediction project/manuscript/Manuscript.html#data-import-and-cleaning",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Data import and cleaning",
    "text": "Data import and cleaning\n\nReading in the Data\n\n\n\n\nTable 1: Data Snapshot of first 5 Variables\n\n\n\n\n\n\nage\njob\nmarital\neducation\ndefault\n\n\n\n\n58\nmanagement\nmarried\ntertiary\nno\n\n\n44\ntechnician\nsingle\nsecondary\nno\n\n\n33\nentrepreneur\nmarried\nsecondary\nno\n\n\n47\nblue-collar\nmarried\nunknown\nno\n\n\n33\nunknown\nsingle\nunknown\nno\n\n\n35\nmanagement\nmarried\ntertiary\nno\n\n\n\n\n\n\n\n\n\n\n\n\nTable 2: Data Snapshot of next 5 Variables\n\n\n\n\n\n\nbalance\nhousing\nloan\ncontact\nday\n\n\n\n\n2143\nyes\nno\nunknown\n5\n\n\n29\nyes\nno\nunknown\n5\n\n\n2\nyes\nyes\nunknown\n5\n\n\n1506\nyes\nno\nunknown\n5\n\n\n1\nno\nno\nunknown\n5\n\n\n231\nyes\nno\nunknown\n5\n\n\n\n\n\n\n\n\n\n\nDimensions:\nRows: 45, 211\nColumns: 17\n\n\n\nDescribing data\n\n\n\n\n\nSummary of predictors\n\n\nx\n\n\n\n\n'data.frame': 45211 obs. of 12 variables:\n\n\n$ age : int 58 44 33 47 33 35 28 42 58 43 ...\n\n\n$ job : Factor w/ 12 levels \"admin.\",\"blue-collar\",..: 5 10 3 2 12 5 5 3 6 10 ...\n\n\n$ marital : Factor w/ 3 levels \"divorced\",\"married\",..: 2 3 2 2 3 2 3 1 2 3 ...\n\n\n$ education : Factor w/ 4 levels \"primary\",\"secondary\",..: 3 2 2 4 4 3 3 3 1 2 ...\n\n\n$ default : Factor w/ 2 levels \"no\",\"yes\": 1 1 1 1 1 1 1 2 1 1 ...\n\n\n$ balance : int 2143 29 2 1506 1 231 447 2 121 593 ...\n\n\n$ housing : Factor w/ 2 levels \"no\",\"yes\": 2 2 2 2 1 2 2 2 2 2 ...\n\n\n$ loan : Factor w/ 2 levels \"no\",\"yes\": 1 1 2 1 1 1 2 1 1 1 ...\n\n\n$ contact : Factor w/ 3 levels \"cellular\",\"telephone\",..: 3 3 3 3 3 3 3 3 3 3 ...\n\n\n$ day : Factor w/ 31 levels \"1\",\"2\",\"3\",\"4\",..: 5 5 5 5 5 5 5 5 5 5 ...\n\n\n$ month : Factor w/ 12 levels \"apr\",\"aug\",\"dec\",..: 9 9 9 9 9 9 9 9 9 9 ...\n\n\n$ y_termSubscribed: Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 1 1 ...\n\n\n\n\n\n\n\n\n\n\n\nCleaning Data\nThere were several different data cleaning methods that were experimented with in order to find the best way to prepare the data for modeling. First, I converted several variables to factors, as they had been read in as character variables, or strings. Next I tried to use the DummyVars tool to convert every categorical variable to a dummy value but this made modeling difficult due to a large amount of binary variables. Instead I proceeded with converting the categorical variables to numeric values while maintaining their factor status. I also created a dataset with these numeric values that were not factors. These were the two primary dataset I used for my modeling. Finally I created a dataset stripping the categorical values of their attributes, this was solely created to allow for my corrplot to work.\n\n\nRemoving Initial Predictors\nI removed the ‘Duration’ variable due to a warning I discovered on the site hosting this dataset initially: “Important note: this attribute highly affects the output target (e.g., if duration=0 then y=‘no’). Yet, the duration is not known before a call is performed. Also, after the end of the call y is obviously known. Thus, this input should only be included for benchmark purposes and should be discarded if the intention is to have a realistic predictive model.”(Moro & Cortez (2012)) Due to this new information I decided to remove all the variables related to this, which included ‘campaign’, ‘pdays’, ‘previous’, and ‘poutcome.’ Bringing our new total number of predictors to 11."
  },
  {
    "objectID": "classification-prediction project/manuscript/Manuscript.html#exploratory-data-analysis",
    "href": "classification-prediction project/manuscript/Manuscript.html#exploratory-data-analysis",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\nPeng and Matsui define EDA as “the process of exploring your data”, “[including] examining the structure and components of your dataset, the distributions of individual variables, and the relationships between two or more variables”(Peng & Matsui (2018)).\nIn accordance with this definition, we will be exploring the data using different charts to identify outliers, abnormalities, relationships, and the general shape and feel of different variables.\nFigure 1 shows the distribution of the ‘Age’ variable.\n\n\n\n\n\n\n\n\nFigure 1\n\n\n\n\n\nWhile this shows a slight skew to the right, if we account for the extreme values, this data seems to be fairly normally distributed.\n\n\n\n\n\n\n\n\n\nFigure 2: Education level Bar Chart\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 3: Most Common Job Types\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 4: Scatterplot of Age and Balance, stratified by Marital Status.\n\n\n\n\n\nFigure 5 shows a barplot of the most common days of the month to record a positive outcome.\n\n\n\n\n\n\n\n\nFigure 5\n\n\n\n\n\nWhile there doesn’t appear to be a significant trend, we can clearly see that the 30th of the month stands out as being a day of interest, especially compared to other days of the months.\nFigure 6 shows potential correlation between different variables.\n\n\n\n\n\n\n\n\nFigure 6: Correlation Matrix\n\n\n\n\n\nThe biggest takeaways from our Exploratory Data Analysis is that most variables are fairly normally distributed due to the size of the data, and most variable are not correlated to each other, with one exception (‘Age’ and ‘Marital’)."
  },
  {
    "objectID": "classification-prediction project/manuscript/Manuscript.html#basic-statistical-analysis",
    "href": "classification-prediction project/manuscript/Manuscript.html#basic-statistical-analysis",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Basic statistical analysis",
    "text": "Basic statistical analysis\nBefore I began with the machine learning analysis, I sought to test the variables of interest in their significance of affecting the response variable. As mentioned previously, our response variable is a binary value (Yes/No), which means that we need to use a logistic regression model instead of a linear regression model (Kuhn (2018)).\nBelow are the results of the logistic model fit with all variables as predictors\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n-0.8090128\n0.2095208\n-3.861252\n0.0001128\n\n\njob\n0.0133597\n0.0046908\n2.848042\n0.0043989\n\n\nmarital\n0.2328452\n0.0276199\n8.430357\n0.0000000\n\n\neducation\n0.1858218\n0.0198575\n9.357763\n0.0000000\n\n\ndefault\n-0.4935394\n0.1456864\n-3.387684\n0.0007049\n\n\nhousing\n-0.7963802\n0.0313995\n-25.362860\n0.0000000\n\n\nloan\n-0.5843431\n0.0502504\n-11.628624\n0.0000000\n\n\nage\n0.0062746\n0.0015087\n4.158970\n0.0000320\n\n\nbalance\n0.0000238\n0.0000039\n6.057946\n0.0000000\n\n\nday\n-0.0119537\n0.0017711\n-6.749262\n0.0000000\n\n\n\n\n\nAs expected, all predictors are very significant as determined by the very small p-values. We will proceed to the Machine Learning portion of this project."
  },
  {
    "objectID": "classification-prediction project/manuscript/Manuscript.html#machine-learning-modeling",
    "href": "classification-prediction project/manuscript/Manuscript.html#machine-learning-modeling",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Machine Learning Modeling",
    "text": "Machine Learning Modeling\nI chose to utilize the following models: the Multivariate Adaptive Regression Splines model (MARS), K-Nearest Neighbors model (KNN), Logistic Regression model, and RandomForest models to determine the best prediction model for this project. \n\nBackground on Chosen Models\nMARS:\nThe MARS model has some similarities to both Neural Networks and the Partial Least Squares model, but the distinguishing feature is a use of multiple ‘splines’ to create a “piecewise linear model” with multiple features modeling a separate part of the data (Kuhn (2018)).\n\n\n\n\n\n\n\n\nFigure 7: MARS Model example from MiniTab\n\n\n\n\n\nKNN:\nThe KNN model predicts based on the closest samples or neighbors. Essentially, to predict a value, the data is broken up into samples/neighbors, and then the nearest samples (using Euclidean distance, typically) to the value of interest are examined to either classify or find a mean between the chosen samples. K represents the number of neighbors to utilize to come to this conclusion (Kuhn (2018)).\nLogistic Regression:\nAs mentioned earlier, Logistic Regression is similar to Linear Regression but the difference is that a Logistic Regression focuses on the probability of an event (p, p-1).\nRandomForest:\nRandomForest models take advantage of decision trees. If we think about the scenario in our project (whether someone makes a deposit or not), we could imagine a decsion tree starting with, “after what age is someone more likely to subscribe?” This would be our first node to split the data on. We could continue asking things like, “Are those with housing loans more likely to subscribe?” or “Are those who are married more liklely to subscribe?”, and these would represent more decision nodes for us to split the data on, getting us closer to the mode accurate prediction model. The RandomForest algorithm uses different methods to create several uncorrelated “forests” of decision trees (IBM (n.d.)) .\n\n\n\nBackground On Performance Metrics\nDescription of Key Metrics:\nAccuracy:\nThe proportion of total correct classifications.\nRecall: (Sensitivity)\nThe proportion of Positive cases that were correctly identified. This helps us understand how well we can classify positive cases specifically.\nSpecificity:\nThe proportion of Negative cases that were correctly identified.  Precision:\nThe proportion of Positive classifications that were actually correct.\nF1:\nThe harmonic mean of Precision and Recall. This metric helps iron out extreme values\nROC:\nThe Receiver Operator Characteristic is a plotting technique that shows the threshold difference between Sensitivity (Recall) and Specificity. A model with good performance will have curve closer to the top left of the graph, whereas, a low-performing model will have a curve closer to the middle diagonal line.\n\n\n\n\n\n\n\n\nFigure 8: ROC diagram from DisplayR\n\n\n\n\n\n\n\n\nModel Performance Metrics\nAs highlighted in the data cleaning section, there were two data sets I was focusing on: one that had numeric factors for the categorical predictors, and one that had just numeric variables for the categorical predictors. I decided to examine both so there are a total of 8 different runs recorded below, 4 runs for each dataset.\nTable 3 displays the relevant metrics for the models runs using the predictors that are numeric and are not factors.\n\n\n\n\nTable 3: Performance Metrics for Numeric Unfactored Model Run\n\n\n\n\n\n\nTerm\nMARS\nKNN\nLogReg\nRF\n\n\n\n\naccuracy\n0.882\n0.88\n0.882\n0.887\n\n\nkappa\n0.017\n0.018\n0\n0.126\n\n\nsensitivity\n0.011\n0.014\n1\n0.084\n\n\nspecificity\n0.999\n0.997\n0\n0.994\n\n\nprecision\n0.545\n0.357\n0.882\n0.667\n\n\nrecall\n0.011\n0.014\n1\n0.084\n\n\nf1\n0.022\n0.027\n0.937\n0.149\n\n\n\n\n\n\n\n\nWhile all four models performed fairly similarly, the RandomForest model reported the highest values in all major categories. What stands out very clearly is that while all models have a fairly high accuracy scores, they also have very low recall values. We can deduce that this means the models are great at predicting negative cases (no subscription) but not very adequate at predicting positive cases (subscription). In the case of the Logistic Regression Model, there were 0 positive cases predicted at all, and thus the non-accuracy scores were 0 or NA.\nTable 4 displays the relevant metrics for the models using the predictors that are factors (Age/Balance are still numeric).\n\n\n\n\nTable 4: Performance Metrics for Factored Model Run\n\n\n\n\n\n\nTerm1\nMARS1\nKNN1\nLogReg1\nRF1\n\n\n\n\naccuracy\n0.882\n0.882\n0.881\n0.884\n\n\nkappa\n0\n0.031\n0\n0.144\n\n\nsensitivity\n0\n0.021\n0.001\n0.105\n\n\nspecificity\n1\n0.997\n0.999\n0.989\n\n\nprecision\nNA\n0.524\n0.125\n0.554\n\n\nrecall\n0\n0.021\n0.001\n0.105\n\n\nf1\nNA\n0.04\n0.002\n0.176\n\n\n\n\n\n\n\n\nWith these results we can see that the RandomForest Model is still the best performing, but in this case, the KNN model is not too far behind in most metrics. The Logistic Regression model performed better under these conditions, predicting some positive classes. However, the MARS model did not fare so well. In this run, the MARS model was the model to not identify a single positive class.\nFigure 9 displays the ROC Curve for the first model run. Both ROC charts were identical, so only one is included here.\n\n\n\n\n\n\n\n\nFigure 9\n\n\n\n\n\nThe ROC graph tells an even clearer story. While the RF model had a near perfect threshold trade-off between Sensitivity and Specificity, the other three models had very low ROC scores, again emphasizing poor predictive performance.\n\n\n\nVariables of Importance\nFinally, we can examine which predictors specifically improved prediction the most. That is, which had the greatest weight on the final result. We will compare the difference between the two different runs of the same models. I determined it would only be helpful to include models that had more an 0 positive classes predicted.\nFigure 10 shows the Predictors that had the most impact on the Mars Model – Numeric\n\n\n\n\n\n\n\n\nFigure 10\n\n\n\n\n\nThe numeric MARS models only highlighted a single variable of importance: Age.\n\nFigure 11 shows the Predictors that had the most impact on the KNN Model–Numeric\n\n\n\n\n\n\n\n\nFigure 11\n\n\n\n\n\nBoth KNN model runs returned the exact same most important factors, which were: Housing (whether someone had a housing loan or not), Balance (numeric value representing the customer’s current account balance), and Education (Secondary, Tertiary, etc.).\n\nFigure 12 shows the Predictors that had the most impact on the Logistic Regression Model – Factor\n\n\n\n\n\n\n\n\nFigure 12: KNN Variables of Importance\n\n\n\n\n\nHousing2 indicates that the person does have a housing loan and Loan2 indicates that the person has personal loan. Education3 indicates that the person has attained a tertiary level of education. Additionally we see different days being flagged as important in determining accuracy.\n\nFigure 13 shows the Predictors that had the most impact on the RF Model – Numeric\n\n\n\n\n\n\n\n\nFigure 13: RF Variables of Importance\n\n\n\n\n\n\nFigure 14 shows the Predictors that had the most impact on the RF Model – Factor\n\n\n\n\n\n\n\n\nFigure 14: KNN Variables of Importance\n\n\n\n\n\nFor both RandomForest models, Age and Housing were the variables with most impact on the model’s prediction power. Balance and Day were next for both models in different order of importance."
  },
  {
    "objectID": "classification-prediction project/manuscript/Manuscript.html#downsampling-machine-learning-models",
    "href": "classification-prediction project/manuscript/Manuscript.html#downsampling-machine-learning-models",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "DownSampling Machine Learning Models",
    "text": "DownSampling Machine Learning Models\nIn situations involving imbalanced response variables, there are different approaches available that can improve model performance. Kuhn and Johnson describe several different options including “Up-sampling” and “Down-sampling” (Kuhn (2018)). Up-sampling involves generating additional synthetic data in order to bring the totals of the response classes up to an equal amount. Down-sampling involves removing random observations until the the majority class is equal to the minority class (or classes). Since this project was already utilizing a fairly large dataset, I decided to perform Down-sampling in order to assist with the response variable imbalance that was being observed. The challenge with this approach is that there is less data to train with, but could lead to a greater overall model performance.\nI performed Down-Sampling on the training data set but kept the test data set intact as it was. It is recommended to allow the test data set to continue representing the natural data distribution in order for the most realistic prediction analysis\n\nDownSampling Model Performance Metrics (Non-factored)\n\n\n\n\n\nTerm\nMARS\nKNN\nLogReg\nRF\n\n\n\n\naccuracy\n0.648\n0.629\n0.624\n0.676\n\n\nkappa\n0.137\n0.106\n0.113\n0.168\n\n\nsensitivity\n0.615\n0.574\n0.626\n0.629\n\n\nspecificity\n0.652\n0.637\n0.602\n0.683\n\n\nprecision\n0.192\n0.175\n0.921\n0.21\n\n\nrecall\n0.615\n0.574\n0.626\n0.629\n\n\nf1\n0.293\n0.269\n0.746\n0.315\n\n\n\n\n\nAt first glance, it appears that the performance power on these models is less than the first models, but this is not the case. While Accuracy was lower among all models, Recall and F1 scores saw tremendous improvements. The model that improved the most was clearly Logistic Regression which didn’t show any Precision or F1 power initially, but now shows better Precision and F1 than the RandomForest model, which still showed to the be the superior model after this run.\n\n\n\nDownSampling Model Performance Metrics (Factored)\n\n\n\n\n\nTerm1\nMARS1\nKNN1\nLogReg1\nRF1\n\n\n\n\naccuracy\n0.65\n0.618\n0.647\n0.61\n\n\nkappa\n0.136\n0.123\n0.135\n0.13\n\n\nsensitivity\n0.61\n0.642\n0.612\n0.677\n\n\nspecificity\n0.655\n0.615\n0.652\n0.602\n\n\nprecision\n0.192\n0.183\n0.191\n0.186\n\n\nrecall\n0.61\n0.642\n0.612\n0.677\n\n\nf1\n0.292\n0.285\n0.291\n0.292\n\n\n\n\n\nWe can observe similar changes in the second Down-sampled run. In the Factored-Down-Sampled model runs, we also see that it is harder to identify a single model of best performance. The MARS model showed the best Accuracy and Specificity, while the RandomForest model showed the best Sensitivity and Precision. The Logistic Regression model was not far behind in these categories and managed to approximately tie three ways for the F1 metric, along with the MARS Model and RandomForest Model.\n\nTable 5 displays the ROC Curve for the Down-Sampled model runs. Again, both ROC charts were identical, so only one is included here.\n\n\n\n\nTable 5\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe can see much better results on the ROC model compared to the first runs. The RandomForest again performs nearly perfectly, but all three remaining models show some promise in terms of threshold trade-off, with the MARS model leading these three.\n\n\n\nVariables of Importance for Down-Sampled Models\nFigure 15 shows the Predictors that had the most impact on the Down-Sampled Mars Model – Factored\n\n\n\n\n\n\n\n\nFigure 15\n\n\n\n\n\nBoth MARS models highlighted essentially the same variables of importance, with added detail coming from the factored model. As mentioned previously, Housing2 indicates that the person does have a housing loan and Loan2 indicates that the person has personal loan. Education3 indicates that the person has attained a tertiary level of education. Marital 2 indicates the person is married.\n\nFigure 16 shows the Predictors that had the most impact on the Down-Sampled KNN Models (both models highlighted the same variables)\n\n\n\n\n\n\n\n\nFigure 16\n\n\n\n\n\nThe variables highlighted here are the same that were highlighted in the original KNN models with the only exception being the Marital variable moved up one spot on this list.\n\nFigure 17 shows the Predictors that had the most impact on the Down-Sampled Logistic Regression Model – Factored\n\n\n\n\n\n\n\n\nFigure 17\n\n\n\n\n\nThese are practically the same variables highlighted in the original Logistic Regression Model, except while the ‘Education3’ variable was the third most important variable on the original model, it is nowhere to be found on this new list. In contrast, the ‘Job3’ (Technician) variable makes an appearance as having a substantial impact on prediction power.\n\nFigure 18 shows the Predictors that had the most impact on the Down-Sampled Logistic Regression Model – Factored\n\n\n\n\n\n\n\n\nFigure 18\n\n\n\n\n\nWhile the two Down-Sampled models were fairly close in highlighting variables, there was quite a bit of difference between these results and the original RandomForest model. Where the original highlighted, Age, Housing, Day and Balance, the new models highlighted Housing, Age, Balance, and Loan."
  },
  {
    "objectID": "classification-prediction project/manuscript/Manuscript.html#summary-and-interpretation",
    "href": "classification-prediction project/manuscript/Manuscript.html#summary-and-interpretation",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Summary and Interpretation",
    "text": "Summary and Interpretation\nInitially the metrics produced by these models were showing substantial promise, but as I investigated the different confusion matrices I realized that the metrics were incorrectly labeling the negative classification as positive. When I reversed this option, the metrics very clearly shows that there was a drop in performance for predicting positive classifications. One explanation for this is that there were too few positive classes in the data as a whole. In the full data set, about 11% of the observations were positive cases, and this was also the case in the test data set as well. Given the size of the data set (45K records), and the small proportion of positive cases, there is reason to conclude that the models were victim to lack of familiarity with the positive cases.\nUsing a Down-Sampling approach to alleviate the imbalance issue resulted in models with greater predictive power and gave more clarity on which variables (and in some cases, sub-variables) contributed the most towards correctly predicting the response variable.\nAll four models provided insights for this objective. The Housing variable was listed as the most important variable by every model with the exception of the Mars-Numeric model. Balance and Age were also listed as important by several different models. The variables that did not show up in the five important variables in any of the models were: Marital, Job, and Default. Education, Loan, and Day had a significant effect on some of the models and little to no effect on others."
  },
  {
    "objectID": "classification-prediction project/manuscript/Manuscript.html#conclusions",
    "href": "classification-prediction project/manuscript/Manuscript.html#conclusions",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Conclusions",
    "text": "Conclusions\nUsing machine learning to better define a customer base can be an incredibly effective way to create more efficient marketing campaigns, as well as provide direction for better management of marketing resources.\nI attempted to develop a classification model that accurately predicted whether a customer had subscribed to a term deposit or not. While the different models that were ran initially showed potential, the predictive power of the best model was not at an ideal level. With a more balanced data set with similar variables, it is probable that a more precise model could have been produced.\nThe other goal of this project was to identify which variables could best aid in identifying customers that would subscribe to a term deposit. I found that there was quite a bit of variance among the predictors in terms of importance, with some predictors clearly standing out above the rest. This information could be used to better segment a consumer pool or adjust marketing tactics to prioritize customers displaying the variables of importance uncovered in this project.\nFurther research would include utilizing additional models to confirm the results presented here, incorporating a more balanced data set (as mentioned above), and exploring different tuning options than were used in this project."
  },
  {
    "objectID": "classification-prediction-project/manuscript/Manuscript_Copy.html",
    "href": "classification-prediction-project/manuscript/Manuscript_Copy.html",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "",
    "text": "Financial institutions spend billions of dollars on their marketing teams every year, with a positive trend observed in 2023 for the largest and smallest banks (Akins). With the need for efficient marketing becoming more and more important, machine learning models are viable tools for refining marketing strategies. This project will seek to identify a model for predicting consumer financial behavior using a dataset from a Portuguese bank. Through comparing the accuracy and predictive power of four different machine learning models, this project will identify an ideal method for prediction."
  },
  {
    "objectID": "classification-prediction-project/manuscript/Manuscript_Copy.html#general-background-information",
    "href": "classification-prediction-project/manuscript/Manuscript_Copy.html#general-background-information",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "General Background Information",
    "text": "General Background Information\nIn 2022, JPMorgan Chase & Co. spent $3.9 billion (US) dollars on Marketing, leading other financial institutions in this category. Recent reports have shown that this has only grown in past years (Co.,). Providing businesses with a model that will allow prioritization of consumers and/or demographics has great potential in improving resource management and future marketing campaigns, as well as increasing efficient spending. This particular project will utilize Classification Prediction. Unlike Regression Prediction which will attempt to predict a continuous value (e.g., x amount of dollars, x amount of cells), Classification Prediction seeks to train a model that can correctly predict a classification (e.g., True/False, Success/Failure) based on the given predictors (Kuhn). In our case, our y variable or response variable is a binary variable, Yes/No, answering whether or not a customer subscribed to a term deposit."
  },
  {
    "objectID": "classification-prediction-project/manuscript/Manuscript_Copy.html#description-of-data-and-data-source",
    "href": "classification-prediction-project/manuscript/Manuscript_Copy.html#description-of-data-and-data-source",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Description of data and data source",
    "text": "Description of data and data source\nThe data was donated on 2/13/2012. It was collected from phone call marketing campaigns performed by a Portuguese banking institution. I have accessed this data from the UC Irvine Machine Learning Repository.\nThere are 45,212 records, 17 columns/variables which include: age, marital status, job, education, details related to the phone call, as well as answers related to questions about past credit history. Additionally, as mentioned, the classification variable is whether or not the person subscribed to a term deposit."
  },
  {
    "objectID": "classification-prediction-project/manuscript/Manuscript_Copy.html#questionshypotheses-to-be-addressed",
    "href": "classification-prediction-project/manuscript/Manuscript_Copy.html#questionshypotheses-to-be-addressed",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Questions/Hypotheses to be addressed",
    "text": "Questions/Hypotheses to be addressed\nThe research question I plan to address with my analysis is: which features or combination of features are the best predictors of consumers making a deposit? The desired output of this analysis is a model which allows a financial institution to make better decisions regarding future marketing campaigns. I plan to investigate all demographic variables, with a specific focus on job type, education and age."
  },
  {
    "objectID": "classification-prediction-project/manuscript/Manuscript_Copy.html#data-aquisition",
    "href": "classification-prediction-project/manuscript/Manuscript_Copy.html#data-aquisition",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Data aquisition",
    "text": "Data aquisition\nThe dataset for this project was retrieved from UCI ML Repository in CSV form. Additionally, I created a codebook based on data from the same source."
  },
  {
    "objectID": "classification-prediction-project/manuscript/Manuscript_Copy.html#data-import-and-cleaning",
    "href": "classification-prediction-project/manuscript/Manuscript_Copy.html#data-import-and-cleaning",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Data import and cleaning",
    "text": "Data import and cleaning\n\nReading in the Data\n\n\n\n\nTable 1: Data Snapshot of first 5 Variables\n\n\n\n\n\n\nage\njob\nmarital\neducation\ndefault\n\n\n\n\n58\nmanagement\nmarried\ntertiary\nno\n\n\n44\ntechnician\nsingle\nsecondary\nno\n\n\n33\nentrepreneur\nmarried\nsecondary\nno\n\n\n47\nblue-collar\nmarried\nunknown\nno\n\n\n33\nunknown\nsingle\nunknown\nno\n\n\n35\nmanagement\nmarried\ntertiary\nno\n\n\n\n\n\n\n\n\n\n\n\n\nTable 2: Data Snapshot of next 5 Variables\n\n\n\n\n\n\nbalance\nhousing\nloan\ncontact\nday\n\n\n\n\n2143\nyes\nno\nunknown\n5\n\n\n29\nyes\nno\nunknown\n5\n\n\n2\nyes\nyes\nunknown\n5\n\n\n1506\nyes\nno\nunknown\n5\n\n\n1\nno\nno\nunknown\n5\n\n\n231\nyes\nno\nunknown\n5\n\n\n\n\n\n\n\n\n\n\nDimensions:\nRows: 45, 211\nColumns: 17\n\n\n\nDescribing data\n\n\n\n\n\nSummary of predictors\n\n\nx\n\n\n\n\n'data.frame': 45211 obs. of 12 variables:\n\n\n$ age : int 58 44 33 47 33 35 28 42 58 43 ...\n\n\n$ job : Factor w/ 12 levels \"admin.\",\"blue-collar\",..: 5 10 3 2 12 5 5 3 6 10 ...\n\n\n$ marital : Factor w/ 3 levels \"divorced\",\"married\",..: 2 3 2 2 3 2 3 1 2 3 ...\n\n\n$ education : Factor w/ 4 levels \"primary\",\"secondary\",..: 3 2 2 4 4 3 3 3 1 2 ...\n\n\n$ default : Factor w/ 2 levels \"no\",\"yes\": 1 1 1 1 1 1 1 2 1 1 ...\n\n\n$ balance : int 2143 29 2 1506 1 231 447 2 121 593 ...\n\n\n$ housing : Factor w/ 2 levels \"no\",\"yes\": 2 2 2 2 1 2 2 2 2 2 ...\n\n\n$ loan : Factor w/ 2 levels \"no\",\"yes\": 1 1 2 1 1 1 2 1 1 1 ...\n\n\n$ contact : Factor w/ 3 levels \"cellular\",\"telephone\",..: 3 3 3 3 3 3 3 3 3 3 ...\n\n\n$ day : Factor w/ 31 levels \"1\",\"2\",\"3\",\"4\",..: 5 5 5 5 5 5 5 5 5 5 ...\n\n\n$ month : Factor w/ 12 levels \"apr\",\"aug\",\"dec\",..: 9 9 9 9 9 9 9 9 9 9 ...\n\n\n$ y_termSubscribed: Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 1 1 ...\n\n\n\n\n\n\n\n\n\n\n\nCleaning Data\nThere were several different data cleaning methods that were experimented with in order to find the best way to prepare the data for modeling. First, I converted several variables to factors, as they had been read in as character variables, or strings. Next I tried to use the DummyVars tool to convert every categorical variable to a dummy value but this made modeling difficult due to a large amount of binary variables. Instead I proceeded with converting the categorical variables to numeric values while maintaining their factor status. I also created a dataset with these numeric values that were not factors. These were the two primary dataset I used for my modeling. Finally I created a dataset stripping the categorical values of their attributes, this was solely created to allow for my corrplot to work.\n\n\nRemoving Initial Predictors\nI removed the ‘Duration’ variable due to a warning I discovered on the site hosting this dataset initially: “Important note: this attribute highly affects the output target (e.g., if duration=0 then y=‘no’). Yet, the duration is not known before a call is performed. Also, after the end of the call y is obviously known. Thus, this input should only be included for benchmark purposes and should be discarded if the intention is to have a realistic predictive model.”(Moro) Due to this new information I decided to remove all the variables related to this, which included ‘campaign’, ‘pdays’, ‘previous’, and ‘poutcome.’ Bringing our new total number of predictors to 11."
  },
  {
    "objectID": "classification-prediction-project/manuscript/Manuscript_Copy.html#exploratory-data-analysis",
    "href": "classification-prediction-project/manuscript/Manuscript_Copy.html#exploratory-data-analysis",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\nPeng and Matsui define EDA as “the process of exploring your data”, “[including] examining the structure and components of your dataset, the distributions of individual variables, and the relationships between two or more variables”(Peng).\nIn accordance with this definition, we will be exploring the data using different charts to identify outliers, abnormalities, relationships, and the general shape and feel of different variables.\nFigure 1 shows the distribution of the ‘Age’ variable.\n\n\n\n\n\n\n\n\nFigure 1\n\n\n\n\n\nWhile this shows a slight skew to the right, if we account for the extreme values, this data seems to be fairly normally distributed.\n\n\n\n\n\n\n\n\n\nFigure 2: Education level Bar Chart\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 3: Most Common Job Types\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 4: Scatterplot of Age and Balance, stratified by Marital Status.\n\n\n\n\n\nFigure 5 shows a barplot of the most common days of the month to record a positive outcome.\n\n\n\n\n\n\n\n\nFigure 5\n\n\n\n\n\nWhile there doesn’t appear to be a significant trend, we can clearly see that the 30th of the month stands out as being a day of interest, especially compared to other days of the months.\nFigure 6 shows potential correlation between different variables.\n\n\n\n\n\n\n\n\nFigure 6: Correlation Matrix\n\n\n\n\n\nThe biggest takeaways from our Exploratory Data Analysis is that most variables are fairly normally distributed due to the size of the data, and most variable are not correlated to each other, with one exception (‘Age’ and ‘Marital’)."
  },
  {
    "objectID": "classification-prediction-project/manuscript/Manuscript_Copy.html#basic-statistical-analysis",
    "href": "classification-prediction-project/manuscript/Manuscript_Copy.html#basic-statistical-analysis",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Basic statistical analysis",
    "text": "Basic statistical analysis\nBefore I began with the machine learning analysis, I sought to test the variables of interest in their significance of affecting the response variable. As mentioned previously, our response variable is a binary value (Yes/No), which means that we need to use a logistic regression model instead of a linear regression model (Kuhn).\nBelow are the results of the logistic model fit with all variables as predictors\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n-0.8090128\n0.2095208\n-3.861252\n0.0001128\n\n\njob\n0.0133597\n0.0046908\n2.848042\n0.0043989\n\n\nmarital\n0.2328452\n0.0276199\n8.430357\n0.0000000\n\n\neducation\n0.1858218\n0.0198575\n9.357763\n0.0000000\n\n\ndefault\n-0.4935394\n0.1456864\n-3.387684\n0.0007049\n\n\nhousing\n-0.7963802\n0.0313995\n-25.362860\n0.0000000\n\n\nloan\n-0.5843431\n0.0502504\n-11.628624\n0.0000000\n\n\nage\n0.0062746\n0.0015087\n4.158970\n0.0000320\n\n\nbalance\n0.0000238\n0.0000039\n6.057946\n0.0000000\n\n\nday\n-0.0119537\n0.0017711\n-6.749262\n0.0000000\n\n\n\n\n\nAs expected, all predictors are very significant as determined by the very small p-values. We will proceed to the Machine Learning portion of this project."
  },
  {
    "objectID": "classification-prediction-project/manuscript/Manuscript_Copy.html#machine-learning-modeling",
    "href": "classification-prediction-project/manuscript/Manuscript_Copy.html#machine-learning-modeling",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Machine Learning Modeling",
    "text": "Machine Learning Modeling\nI chose to utilize the following models: the Multivariate Adaptive Regression Splines model (MARS), K-Nearest Neighbors model (KNN), Logistic Regression model, and RandomForest models to determine the best prediction model for this project. \n\nBackground on Chosen Models\nMARS:\nThe MARS model has some similarities to both Neural Networks and the Partial Least Squares model, but the distinguishing feature is a use of multiple ‘splines’ to create a “piecewise linear model” with multiple features modeling a separate part of the data (Kuhn).\n\n\n\n\n\n\n\n\nFigure 7: MARS Model example from MiniTab\n\n\n\n\n\nKNN:\nThe KNN model predicts based on the closest samples or neighbors. Essentially, to predict a value, the data is broken up into samples/neighbors, and then the nearest samples (using Euclidean distance, typically) to the value of interest are examined to either classify or find a mean between the chosen samples. K represents the number of neighbors to utilize to come to this conclusion (Kuhn).\nLogistic Regression:\nAs mentioned earlier, Logistic Regression is similar to Linear Regression but the difference is that a Logistic Regression focuses on the probability of an event (p, p-1).\nRandomForest:\nRandomForest models take advantage of decision trees. If we think about the scenario in our project (whether someone makes a deposit or not), we could imagine a decsion tree starting with, “after what age is someone more likely to subscribe?” This would be our first node to split the data on. We could continue asking things like, “Are those with housing loans more likely to subscribe?” or “Are those who are married more liklely to subscribe?”, and these would represent more decision nodes for us to split the data on, getting us closer to the mode accurate prediction model. The RandomForest algorithm uses different methods to create several uncorrelated “forests” of decision trees (IBM) .\n\n\n\nBackground On Performance Metrics\nDescription of Key Metrics:\nAccuracy:\nThe proportion of total correct classifications.\nRecall: (Sensitivity)\nThe proportion of Positive cases that were correctly identified. This helps us understand how well we can classify positive cases specifically.\nSpecificity:\nThe proportion of Negative cases that were correctly identified.  Precision:\nThe proportion of Positive classifications that were actually correct.\nF1:\nThe harmonic mean of Precision and Recall. This metric helps iron out extreme values\nROC:\nThe Receiver Operator Characteristic is a plotting technique that shows the threshold difference between Sensitivity (Recall) and Specificity. A model with good performance will have curve closer to the top left of the graph, whereas, a low-performing model will have a curve closer to the middle diagonal line.\n\n\n\n\n\n\n\n\nFigure 8: ROC diagram from DisplayR\n\n\n\n\n\n\n\n\nModel Performance Metrics\nAs highlighted in the data cleaning section, there were two data sets I was focusing on: one that had numeric factors for the categorical predictors, and one that had just numeric variables for the categorical predictors. I decided to examine both so there are a total of 8 different runs recorded below, 4 runs for each dataset.\nTable 3 displays the relevant metrics for the models runs using the predictors that are numeric and are not factors.\n\n\n\n\nTable 3: Performance Metrics for Numeric Unfactored Model Run\n\n\n\n\n\n\nTerm\nMARS\nKNN\nLogReg\nRF\n\n\n\n\naccuracy\n0.882\n0.88\n0.882\n0.887\n\n\nkappa\n0.017\n0.018\n0\n0.126\n\n\nsensitivity\n0.011\n0.014\n1\n0.084\n\n\nspecificity\n0.999\n0.997\n0\n0.994\n\n\nprecision\n0.545\n0.357\n0.882\n0.667\n\n\nrecall\n0.011\n0.014\n1\n0.084\n\n\nf1\n0.022\n0.027\n0.937\n0.149\n\n\n\n\n\n\n\n\nWhile all four models performed fairly similarly, the RandomForest model reported the highest values in all major categories. What stands out very clearly is that while all models have a fairly high accuracy scores, they also have very low recall values. We can deduce that this means the models are great at predicting negative cases (no subscription) but not very adequate at predicting positive cases (subscription). In the case of the Logistic Regression Model, there were 0 positive cases predicted at all, and thus the non-accuracy scores were 0 or NA.\nTable 4 displays the relevant metrics for the models using the predictors that are factors (Age/Balance are still numeric).\n\n\n\n\nTable 4: Performance Metrics for Factored Model Run\n\n\n\n\n\n\nTerm1\nMARS1\nKNN1\nLogReg1\nRF1\n\n\n\n\naccuracy\n0.882\n0.882\n0.881\n0.884\n\n\nkappa\n0\n0.031\n0\n0.144\n\n\nsensitivity\n0\n0.021\n0.001\n0.105\n\n\nspecificity\n1\n0.997\n0.999\n0.989\n\n\nprecision\nNA\n0.524\n0.125\n0.554\n\n\nrecall\n0\n0.021\n0.001\n0.105\n\n\nf1\nNA\n0.04\n0.002\n0.176\n\n\n\n\n\n\n\n\nWith these results we can see that the RandomForest Model is still the best performing, but in this case, the KNN model is not too far behind in most metrics. The Logistic Regression model performed better under these conditions, predicting some positive classes. However, the MARS model did not fare so well. In this run, the MARS model was the model to not identify a single positive class.\nFigure 9 displays the ROC Curve for the first model run. Both ROC charts were identical, so only one is included here.\n\n\n\n\n\n\n\n\nFigure 9\n\n\n\n\n\nThe ROC graph tells an even clearer story. While the RF model had a near perfect threshold trade-off between Sensitivity and Specificity, the other three models had very low ROC scores, again emphasizing poor predictive performance.\n\n\n\nVariables of Importance\nFinally, we can examine which predictors specifically improved prediction the most. That is, which had the greatest weight on the final result. We will compare the difference between the two different runs of the same models. I determined it would only be helpful to include models that had more an 0 positive classes predicted.\nFigure 10 shows the Predictors that had the most impact on the Mars Model – Numeric\n\n\n\n\n\n\n\n\nFigure 10\n\n\n\n\n\nThe numeric MARS models only highlighted a single variable of importance: Age.\n\nFigure 11 shows the Predictors that had the most impact on the KNN Model–Numeric\n\n\n\n\n\n\n\n\nFigure 11\n\n\n\n\n\nBoth KNN model runs returned the exact same most important factors, which were: Housing (whether someone had a housing loan or not), Balance (numeric value representing the customer’s current account balance), and Education (Secondary, Tertiary, etc.).\n\nFigure 12 shows the Predictors that had the most impact on the Logistic Regression Model – Factor\n\n\n\n\n\n\n\n\nFigure 12: KNN Variables of Importance\n\n\n\n\n\nHousing2 indicates that the person does have a housing loan and Loan2 indicates that the person has personal loan. Education3 indicates that the person has attained a tertiary level of education. Additionally we see different days being flagged as important in determining accuracy.\n\nFigure 13 shows the Predictors that had the most impact on the RF Model – Numeric\n\n\n\n\n\n\n\n\nFigure 13: RF Variables of Importance\n\n\n\n\n\n\nFigure 14 shows the Predictors that had the most impact on the RF Model – Factor\n\n\n\n\n\n\n\n\nFigure 14: KNN Variables of Importance\n\n\n\n\n\nFor both RandomForest models, Age and Housing were the variables with most impact on the model’s prediction power. Balance and Day were next for both models in different order of importance."
  },
  {
    "objectID": "classification-prediction-project/manuscript/Manuscript_Copy.html#downsampling-machine-learning-models",
    "href": "classification-prediction-project/manuscript/Manuscript_Copy.html#downsampling-machine-learning-models",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "DownSampling Machine Learning Models",
    "text": "DownSampling Machine Learning Models\nIn situations involving imbalanced response variables, there are different approaches available that can improve model performance. Kuhn and Johnson describe several different options including “Up-sampling” and “Down-sampling” (Kuhn). Up-sampling involves generating additional synthetic data in order to bring the totals of the response classes up to an equal amount. Down-sampling involves removing random observations until the the majority class is equal to the minority class (or classes). Since this project was already utilizing a fairly large dataset, I decided to perform Down-sampling in order to assist with the response variable imbalance that was being observed. The challenge with this approach is that there is less data to train with, but could lead to a greater overall model performance.\nI performed Down-Sampling on the training data set but kept the test data set intact as it was. It is recommended to allow the test data set to continue representing the natural data distribution in order for the most realistic prediction analysis\n\nDownSampling Model Performance Metrics (Non-factored)\n\n\n\n\n\nTerm\nMARS\nKNN\nLogReg\nRF\n\n\n\n\naccuracy\n0.648\n0.629\n0.624\n0.676\n\n\nkappa\n0.137\n0.106\n0.113\n0.168\n\n\nsensitivity\n0.615\n0.574\n0.626\n0.629\n\n\nspecificity\n0.652\n0.637\n0.602\n0.683\n\n\nprecision\n0.192\n0.175\n0.921\n0.21\n\n\nrecall\n0.615\n0.574\n0.626\n0.629\n\n\nf1\n0.293\n0.269\n0.746\n0.315\n\n\n\n\n\nAt first glance, it appears that the performance power on these models is less than the first models, but this is not the case. While Accuracy was lower among all models, Recall and F1 scores saw tremendous improvements. The model that improved the most was clearly Logistic Regression which didn’t show any Precision or F1 power initially, but now shows better Precision and F1 than the RandomForest model, which still showed to the be the superior model after this run.\n\n\n\nDownSampling Model Performance Metrics (Factored)\n\n\n\n\n\nTerm1\nMARS1\nKNN1\nLogReg1\nRF1\n\n\n\n\naccuracy\n0.65\n0.618\n0.647\n0.61\n\n\nkappa\n0.136\n0.123\n0.135\n0.13\n\n\nsensitivity\n0.61\n0.642\n0.612\n0.677\n\n\nspecificity\n0.655\n0.615\n0.652\n0.602\n\n\nprecision\n0.192\n0.183\n0.191\n0.186\n\n\nrecall\n0.61\n0.642\n0.612\n0.677\n\n\nf1\n0.292\n0.285\n0.291\n0.292\n\n\n\n\n\nWe can observe similar changes in the second Down-sampled run. In the Factored-Down-Sampled model runs, we also see that it is harder to identify a single model of best performance. The MARS model showed the best Accuracy and Specificity, while the RandomForest model showed the best Sensitivity and Precision. The Logistic Regression model was not far behind in these categories and managed to approximately tie three ways for the F1 metric, along with the MARS Model and RandomForest Model.\n\nTable 5 displays the ROC Curve for the Down-Sampled model runs. Again, both ROC charts were identical, so only one is included here.\n\n\n\n\nTable 5\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe can see much better results on the ROC model compared to the first runs. The RandomForest again performs nearly perfectly, but all three remaining models show some promise in terms of threshold trade-off, with the MARS model leading these three.\n\n\n\nVariables of Importance for Down-Sampled Models\nFigure 15 shows the Predictors that had the most impact on the Down-Sampled Mars Model – Factored\n\n\n\n\n\n\n\n\nFigure 15\n\n\n\n\n\nBoth MARS models highlighted essentially the same variables of importance, with added detail coming from the factored model. As mentioned previously, Housing2 indicates that the person does have a housing loan and Loan2 indicates that the person has personal loan. Education3 indicates that the person has attained a tertiary level of education. Marital 2 indicates the person is married.\n\nFigure 16 shows the Predictors that had the most impact on the Down-Sampled KNN Models (both models highlighted the same variables)\n\n\n\n\n\n\n\n\nFigure 16\n\n\n\n\n\nThe variables highlighted here are the same that were highlighted in the original KNN models with the only exception being the Marital variable moved up one spot on this list.\n\nFigure 17 shows the Predictors that had the most impact on the Down-Sampled Logistic Regression Model – Factored\n\n\n\n\n\n\n\n\nFigure 17\n\n\n\n\n\nThese are practically the same variables highlighted in the original Logistic Regression Model, except while the ‘Education3’ variable was the third most important variable on the original model, it is nowhere to be found on this new list. In contrast, the ‘Job3’ (Technician) variable makes an appearance as having a substantial impact on prediction power.\n\nFigure 18 shows the Predictors that had the most impact on the Down-Sampled Logistic Regression Model – Factored\n\n\n\n\n\n\n\n\nFigure 18\n\n\n\n\n\nWhile the two Down-Sampled models were fairly close in highlighting variables, there was quite a bit of difference between these results and the original RandomForest model. Where the original highlighted, Age, Housing, Day and Balance, the new models highlighted Housing, Age, Balance, and Loan."
  },
  {
    "objectID": "classification-prediction-project/manuscript/Manuscript_Copy.html#summary-and-interpretation",
    "href": "classification-prediction-project/manuscript/Manuscript_Copy.html#summary-and-interpretation",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Summary and Interpretation",
    "text": "Summary and Interpretation\nInitially the metrics produced by these models were showing substantial promise, but as I investigated the different confusion matrices I realized that the metrics were incorrectly labeling the negative classification as positive. When I reversed this option, the metrics very clearly shows that there was a drop in performance for predicting positive classifications. One explanation for this is that there were too few positive classes in the data as a whole. In the full data set, about 11% of the observations were positive cases, and this was also the case in the test data set as well. Given the size of the data set (45K records), and the small proportion of positive cases, there is reason to conclude that the models were victim to lack of familiarity with the positive cases.\nUsing a Down-Sampling approach to alleviate the imbalance issue resulted in models with greater predictive power and gave more clarity on which variables (and in some cases, sub-variables) contributed the most towards correctly predicting the response variable.\nAll four models provided insights for this objective. The Housing variable was listed as the most important variable by every model with the exception of the Mars-Numeric model. Balance and Age were also listed as important by several different models. The variables that did not show up in the five important variables in any of the models were: Marital, Job, and Default. Education, Loan, and Day had a significant effect on some of the models and little to no effect on others."
  },
  {
    "objectID": "classification-prediction-project/manuscript/Manuscript_Copy.html#conclusions",
    "href": "classification-prediction-project/manuscript/Manuscript_Copy.html#conclusions",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Conclusions",
    "text": "Conclusions\nUsing machine learning to better define a customer base can be an incredibly effective way to create more efficient marketing campaigns, as well as provide direction for better management of marketing resources.\nI attempted to develop a classification model that accurately predicted whether a customer had subscribed to a term deposit or not. While the different models that were ran initially showed potential, the predictive power of the best model was not at an ideal level. With a more balanced data set with similar variables, it is probable that a more precise model could have been produced.\nThe other goal of this project was to identify which variables could best aid in identifying customers that would subscribe to a term deposit. I found that there was quite a bit of variance among the predictors in terms of importance, with some predictors clearly standing out above the rest. This information could be used to better segment a consumer pool or adjust marketing tactics to prioritize customers displaying the variables of importance uncovered in this project.\nFurther research would include utilizing additional models to confirm the results presented here, incorporating a more balanced data set (as mentioned above), and exploring different tuning options than were used in this project."
  },
  {
    "objectID": "classification-prediction-project/data/processed-data/readme.html",
    "href": "classification-prediction-project/data/processed-data/readme.html",
    "title": "processed-data",
    "section": "",
    "text": "processed-data\nThis folder contains data that has been processed and cleaned by code.\nAny files located in here are based on the raw data and can be re-created running the various processing/cleaning code scripts in the code folder.\n\nProcesseddata1.rds is the original clean data set with both character-factor predictors and numeric predictors\nProcesseddata2.rds is a data set that attempted to utilize Dummy Variables. I did not end up using this for analysis\nProcesseddata3.rds is the clean data set with the character factors converted to numeric factors.\nProcesseddata4.rds is the same as processeddata3 except the numeric factors have been converted to true numeric values\nProcesseddata5.rds is the same as processedata4 except additional “attribute” information has been stripped from the numeric categorical values for the SOLE purpose of working with the Corrplot in the EDA QMD."
  },
  {
    "objectID": "classification-prediction-project/code/processing/processing.html",
    "href": "classification-prediction-project/code/processing/processing.html",
    "title": "Preparing data for analysis",
    "section": "",
    "text": "Setup\nThe following packages are needed for this data processing\n\nlibrary(readxl) \nlibrary(dplyr) \nlibrary(tidyr) \nlibrary(skimr) \nlibrary(here) \nlibrary(caret)\n\n\n\nData loading\n\ndata_location &lt;- here::here(\"data\",\"raw-data\",\"bank-full.csv\")\nrawdata &lt;- read.csv(data_location, header = TRUE, sep=\";\")\n\n\n\nCheck data\nExamining metadata by accessing the codebook. This codebook was taken directly from the data repository housing the chosen dataset. The decision was made to keep this in a separate xlsx file from the dataset so that the dataset could remain in the identical form in which it was sourced (CSV format).\n\ncodebook_location &lt;- \nhere::here(\"data\",\"raw-data\",\"codebook.xlsx\")\n\ncodebook &lt;- readxl::read_excel(codebook_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 17 × 4\n   `Variable Name` Type        Description                      `Missing Values`\n   &lt;chr&gt;           &lt;chr&gt;       &lt;chr&gt;                            &lt;chr&gt;           \n 1 age             Integer     &lt;NA&gt;                             no              \n 2 job             Categorical type of job (categorical: 'admi… no              \n 3 marital         Categorical marital status (categorical: 'd… no              \n 4 education       Categorical (categorical: 'basic.4y','basic… no              \n 5 default         Binary      has credit in default?           no              \n 6 balance         Integer     average yearly balance in euros  no              \n 7 housing         Binary      has housing loan?                no              \n 8 loan            Binary      has personal loan?               no              \n 9 contact         Categorical contact communication type (cat… yes             \n10 day_of_week     Date        last contact day of the week     no              \n11 month           Date        last contact month of year (cat… no              \n12 duration        Integer     last contact duration, in secon… no              \n13 campaign        Integer     number of contacts performed du… no              \n14 pdays           Integer     number of days that passed by a… yes             \n15 previous        Integer     number of contacts performed be… no              \n16 poutcome        Categorical outcome of the previous marketi… yes             \n17 y               Binary      has the client subscribed a ter… no              \n\n\nVarious ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 45,211\nColumns: 17\n$ age       &lt;int&gt; 58, 44, 33, 47, 33, 35, 28, 42, 58, 43, 41, 29, 53, 58, 57, …\n$ job       &lt;chr&gt; \"management\", \"technician\", \"entrepreneur\", \"blue-collar\", \"…\n$ marital   &lt;chr&gt; \"married\", \"single\", \"married\", \"married\", \"single\", \"marrie…\n$ education &lt;chr&gt; \"tertiary\", \"secondary\", \"secondary\", \"unknown\", \"unknown\", …\n$ default   &lt;chr&gt; \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"yes\", \"no\", \"no\",…\n$ balance   &lt;int&gt; 2143, 29, 2, 1506, 1, 231, 447, 2, 121, 593, 270, 390, 6, 71…\n$ housing   &lt;chr&gt; \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\"…\n$ loan      &lt;chr&gt; \"no\", \"no\", \"yes\", \"no\", \"no\", \"no\", \"yes\", \"no\", \"no\", \"no\"…\n$ contact   &lt;chr&gt; \"unknown\", \"unknown\", \"unknown\", \"unknown\", \"unknown\", \"unkn…\n$ day       &lt;int&gt; 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, …\n$ month     &lt;chr&gt; \"may\", \"may\", \"may\", \"may\", \"may\", \"may\", \"may\", \"may\", \"may…\n$ duration  &lt;int&gt; 261, 151, 76, 92, 198, 139, 217, 380, 50, 55, 222, 137, 517,…\n$ campaign  &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ pdays     &lt;int&gt; -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, …\n$ previous  &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ poutcome  &lt;chr&gt; \"unknown\", \"unknown\", \"unknown\", \"unknown\", \"unknown\", \"unkn…\n$ y         &lt;chr&gt; \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", …\n\nsummary(rawdata)\n\n      age            job              marital           education        \n Min.   :18.00   Length:45211       Length:45211       Length:45211      \n 1st Qu.:33.00   Class :character   Class :character   Class :character  \n Median :39.00   Mode  :character   Mode  :character   Mode  :character  \n Mean   :40.94                                                           \n 3rd Qu.:48.00                                                           \n Max.   :95.00                                                           \n   default             balance         housing              loan          \n Length:45211       Min.   : -8019   Length:45211       Length:45211      \n Class :character   1st Qu.:    72   Class :character   Class :character  \n Mode  :character   Median :   448   Mode  :character   Mode  :character  \n                    Mean   :  1362                                        \n                    3rd Qu.:  1428                                        \n                    Max.   :102127                                        \n   contact               day           month              duration     \n Length:45211       Min.   : 1.00   Length:45211       Min.   :   0.0  \n Class :character   1st Qu.: 8.00   Class :character   1st Qu.: 103.0  \n Mode  :character   Median :16.00   Mode  :character   Median : 180.0  \n                    Mean   :15.81                      Mean   : 258.2  \n                    3rd Qu.:21.00                      3rd Qu.: 319.0  \n                    Max.   :31.00                      Max.   :4918.0  \n    campaign          pdays          previous          poutcome        \n Min.   : 1.000   Min.   : -1.0   Min.   :  0.0000   Length:45211      \n 1st Qu.: 1.000   1st Qu.: -1.0   1st Qu.:  0.0000   Class :character  \n Median : 2.000   Median : -1.0   Median :  0.0000   Mode  :character  \n Mean   : 2.764   Mean   : 40.2   Mean   :  0.5803                     \n 3rd Qu.: 3.000   3rd Qu.: -1.0   3rd Qu.:  0.0000                     \n Max.   :63.000   Max.   :871.0   Max.   :275.0000                     \n      y            \n Length:45211      \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n\nhead(rawdata)\n\n  age          job marital education default balance housing loan contact day\n1  58   management married  tertiary      no    2143     yes   no unknown   5\n2  44   technician  single secondary      no      29     yes   no unknown   5\n3  33 entrepreneur married secondary      no       2     yes  yes unknown   5\n4  47  blue-collar married   unknown      no    1506     yes   no unknown   5\n5  33      unknown  single   unknown      no       1      no   no unknown   5\n6  35   management married  tertiary      no     231     yes   no unknown   5\n  month duration campaign pdays previous poutcome  y\n1   may      261        1    -1        0  unknown no\n2   may      151        1    -1        0  unknown no\n3   may       76        1    -1        0  unknown no\n4   may       92        1    -1        0  unknown no\n5   may      198        1    -1        0  unknown no\n6   may      139        1    -1        0  unknown no\n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n45211\n\n\nNumber of columns\n17\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n10\n\n\nnumeric\n7\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\njob\n0\n1\n6\n13\n0\n12\n0\n\n\nmarital\n0\n1\n6\n8\n0\n3\n0\n\n\neducation\n0\n1\n7\n9\n0\n4\n0\n\n\ndefault\n0\n1\n2\n3\n0\n2\n0\n\n\nhousing\n0\n1\n2\n3\n0\n2\n0\n\n\nloan\n0\n1\n2\n3\n0\n2\n0\n\n\ncontact\n0\n1\n7\n9\n0\n3\n0\n\n\nmonth\n0\n1\n3\n3\n0\n12\n0\n\n\npoutcome\n0\n1\n5\n7\n0\n4\n0\n\n\ny\n0\n1\n2\n3\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nage\n0\n1\n40.94\n10.62\n18\n33\n39\n48\n95\n▅▇▃▁▁\n\n\nbalance\n0\n1\n1362.27\n3044.77\n-8019\n72\n448\n1428\n102127\n▇▁▁▁▁\n\n\nday\n0\n1\n15.81\n8.32\n1\n8\n16\n21\n31\n▇▆▇▆▆\n\n\nduration\n0\n1\n258.16\n257.53\n0\n103\n180\n319\n4918\n▇▁▁▁▁\n\n\ncampaign\n0\n1\n2.76\n3.10\n1\n1\n2\n3\n63\n▇▁▁▁▁\n\n\npdays\n0\n1\n40.20\n100.13\n-1\n-1\n-1\n-1\n871\n▇▁▁▁▁\n\n\nprevious\n0\n1\n0.58\n2.30\n0\n0\n0\n0\n275\n▇▁▁▁▁\n\n\n\n\n\n\n\nCleaning the data\nWe are mainly converting character variables into factors so we can do some categorical analysis. I had initially included converting months to a numeric variable but realized that it was fine as a factor variable.\n\nd1 = rawdata |&gt; \n  mutate(job = as.factor(job)) |&gt;\n  mutate(marital = as.factor(marital)) |&gt;\n  mutate(education = as.factor(education)) |&gt;\n  mutate(default = as.factor(default)) |&gt;\n  mutate(housing = as.factor(housing)) |&gt;\n  mutate(loan = as.factor(loan)) |&gt;\n  mutate(education = as.factor(education)) |&gt;\n  mutate(contact = as.factor(contact)) |&gt;\n  mutate(month = as.factor(month)) |&gt;\n  mutate(y = ifelse(y == \"yes\", 1, 0)) |&gt;\n  mutate(y = as.factor(y)) |&gt;\n  mutate(poutcome = as.factor(poutcome)) |&gt;\n  mutate(day = as.factor(day)) |&gt;\n  mutate(y = as.factor(y)) %&gt;% \n  select(!duration)\n \n\ncolnames(d1)[16] &lt;- \"y_termSubscribed\"\n\n\nsummary(d1)\n\n      age                 job           marital          education    \n Min.   :18.00   blue-collar:9732   divorced: 5207   primary  : 6851  \n 1st Qu.:33.00   management :9458   married :27214   secondary:23202  \n Median :39.00   technician :7597   single  :12790   tertiary :13301  \n Mean   :40.94   admin.     :5171                    unknown  : 1857  \n 3rd Qu.:48.00   services   :4154                                     \n Max.   :95.00   retired    :2264                                     \n                 (Other)    :6835                                     \n default        balance       housing      loan            contact     \n no :44396   Min.   : -8019   no :20081   no :37967   cellular :29285  \n yes:  815   1st Qu.:    72   yes:25130   yes: 7244   telephone: 2906  \n             Median :   448                           unknown  :13020  \n             Mean   :  1362                                            \n             3rd Qu.:  1428                                            \n             Max.   :102127                                            \n                                                                       \n      day            month          campaign          pdays      \n 20     : 2752   may    :13766   Min.   : 1.000   Min.   : -1.0  \n 18     : 2308   jul    : 6895   1st Qu.: 1.000   1st Qu.: -1.0  \n 21     : 2026   aug    : 6247   Median : 2.000   Median : -1.0  \n 17     : 1939   jun    : 5341   Mean   : 2.764   Mean   : 40.2  \n 6      : 1932   nov    : 3970   3rd Qu.: 3.000   3rd Qu.: -1.0  \n 5      : 1910   apr    : 2932   Max.   :63.000   Max.   :871.0  \n (Other):32344   (Other): 6060                                   \n    previous           poutcome     y_termSubscribed\n Min.   :  0.0000   failure: 4901   0:39922         \n 1st Qu.:  0.0000   other  : 1840   1: 5289         \n Median :  0.0000   success: 1511                   \n Mean   :  0.5803   unknown:36959                   \n 3rd Qu.:  0.0000                                   \n Max.   :275.0000                                   \n                                                    \n\n\nAll done, data is clean now.\n\n\nSave data\n\nprocesseddata1 &lt;- d1\n\nsave_data_location &lt;- here::here(\"data\",\"processed-data\",\"processeddata1.rds\")\nsaveRDS(processeddata1, file = save_data_location)\n\n\n\nData set 2: Attempting to convert categorical variables to dummy\n\ntesting_dummy = processeddata1 %&gt;% \n  select(job, marital, education, default, housing, loan, contact) %&gt;% \n  mutate(ID = row_number())\n\n\ndummy &lt;- dummyVars(\"~.\", data=testing_dummy)\ndf1 &lt;- predict(dummy, newdata = testing_dummy)\n\ndf1 = as.data.frame(df1)\n\nnumeric_vars = processeddata1 %&gt;% \n  select(age, balance, day, y_termSubscribed) %&gt;% \n  mutate(ID = row_number())\n\nd2 &lt;- merge(df1,numeric_vars, by = \"ID\")\n\n\nsave_data_location &lt;- here::here(\"data\",\"processed-data\",\"processeddata2.rds\")\nsaveRDS(d2, file = save_data_location)\n\n\n\nDataset 3: Converting categorical variables to numeric factors\n\nd3 = processeddata1 |&gt;\n  select(job, marital, education, default, housing, loan, age, balance, day, y_termSubscribed) |&gt;\n  mutate(job = as.factor(unclass(job))) |&gt;\n  mutate(marital = as.factor(unclass(marital))) |&gt;\n  mutate(education = as.factor(unclass(education))) |&gt;\n  mutate(default = as.factor(unclass(default))) |&gt;\n  mutate(housing = as.factor(unclass(housing))) |&gt;\n  mutate(loan = as.factor(unclass(loan)))\n\n\nsave_data_location &lt;- here::here(\"data\",\"processed-data\",\"processeddata3.rds\")\nsaveRDS(d3, file = save_data_location)\n\n\n\nDataset 4: Converting categorical variables to true numeric values\n\nd4 = processeddata1 |&gt;\n  select(job, marital, education, default, housing, loan, age, balance, day, y_termSubscribed) |&gt;\n  mutate(job = unclass(job)) |&gt;\n  mutate(marital = unclass(marital)) |&gt;\n  mutate(education = unclass(education)) |&gt;\n  mutate(default = unclass(default)) |&gt;\n  mutate(housing = unclass(housing)) |&gt;\n  mutate(loan = unclass(loan))|&gt;\n  mutate(day = unclass(day))\n\n\nsave_data_location &lt;- here::here(\"data\",\"processed-data\",\"processeddata4.rds\")\nsaveRDS(d4, file = save_data_location)\n\n\n\nDataset 5: Remving “Attributes” from numeric factor variables (for Corrplot)\n\nd5 = processeddata1 |&gt;\n  select(job, marital, education, default, housing, loan, age, balance, day, y_termSubscribed) |&gt;\n  mutate(job = as.numeric(job)) |&gt;\n  mutate(marital = as.numeric(marital)) |&gt;\n  mutate(education = as.numeric(education)) |&gt;\n  mutate(default = as.numeric(default)) |&gt;\n  mutate(housing = as.numeric(housing)) |&gt;\n  mutate(loan = as.numeric(loan))|&gt;\n  mutate(day = as.numeric(day))\n\n\nsave_data_location &lt;- here::here(\"data\",\"processed-data\",\"processeddata5.rds\")\nsaveRDS(d5, file = save_data_location)"
  },
  {
    "objectID": "classification-prediction-project/code/eda/eda.html",
    "href": "classification-prediction-project/code/eda/eda.html",
    "title": "Exploratory Data Analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\n\nSetup\nNecessary libraries for this script.\n\nlibrary(here) \nlibrary(dplyr)\nlibrary(skimr)\nlibrary(ggplot2)\nlibrary(scales)\nlibrary(tidyr)\nlibrary(forcats)\nlibrary(corrplot)\nlibrary(corrplot)\nlibrary(knitr)\nlibrary(kableExtra)\n\nLoading the data.\n\n#If this doesn't initially work, try restarting R and then proceeding\ndata_location &lt;- here::here(\"data\",\"processed-data\",\"processeddata1.rds\")\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nCreating a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             45211 \nNumber of columns          16    \n_______________________          \nColumn type frequency:           \n  factor                   11    \n  numeric                  5     \n________________________         \nGroup variables            None  \n\n── Variable type: factor ───────────────────────────────────────────────────────\n   skim_variable    n_missing complete_rate ordered n_unique\n 1 job                      0             1 FALSE         12\n 2 marital                  0             1 FALSE          3\n 3 education                0             1 FALSE          4\n 4 default                  0             1 FALSE          2\n 5 housing                  0             1 FALSE          2\n 6 loan                     0             1 FALSE          2\n 7 contact                  0             1 FALSE          3\n 8 day                      0             1 FALSE         31\n 9 month                    0             1 FALSE         12\n10 poutcome                 0             1 FALSE          4\n11 y_termSubscribed         0             1 FALSE          2\n   top_counts                                  \n 1 blu: 9732, man: 9458, tec: 7597, adm: 5171  \n 2 mar: 27214, sin: 12790, div: 5207           \n 3 sec: 23202, ter: 13301, pri: 6851, unk: 1857\n 4 no: 44396, yes: 815                         \n 5 yes: 25130, no: 20081                       \n 6 no: 37967, yes: 7244                        \n 7 cel: 29285, unk: 13020, tel: 2906           \n 8 20: 2752, 18: 2308, 21: 2026, 17: 1939      \n 9 may: 13766, jul: 6895, aug: 6247, jun: 5341 \n10 unk: 36959, fai: 4901, oth: 1840, suc: 1511 \n11 0: 39922, 1: 5289                           \n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate     mean      sd    p0 p25 p50  p75\n1 age                   0             1   40.9     10.6     18  33  39   48\n2 balance               0             1 1362.    3045.   -8019  72 448 1428\n3 campaign              0             1    2.76     3.10     1   1   2    3\n4 pdays                 0             1   40.2    100.      -1  -1  -1   -1\n5 previous              0             1    0.580    2.30     0   0   0    0\n    p100 hist \n1     95 ▅▇▃▁▁\n2 102127 ▇▁▁▁▁\n3     63 ▇▁▁▁▁\n4    871 ▇▁▁▁▁\n5    275 ▇▁▁▁▁\n\n# save to file\nsummarytable_file = here(\"results\", \"tables\", \"summarytable1.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\n\ndata_location &lt;- here::here(\"data\",\"processed-data\",\"processeddata1.rds\")\nmydata1 &lt;- readRDS(data_location)\n\nmydata1 = mydata1 %&gt;% \n  select(age, job, marital, education, default, balance, housing, loan, contact, day, month, y_termSubscribed)\n\nstr_summary &lt;- capture.output(str(mydata1))\n\ndescribetbl1 = kable(str_summary, caption = \"Summary of predictors\") %&gt;%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"), full_width = F)\n\nsummarytable_file = here(\"results\", \"tables\", \"describetbl1.rds\")\nsaveRDS(describetbl1, file = summarytable_file)\n\n\ndescribetbl1\n\n\n\n\nSummary of predictors\n\n\nx\n\n\n\n\n'data.frame': 45211 obs. of 12 variables:\n\n\n$ age : int 58 44 33 47 33 35 28 42 58 43 ...\n\n\n$ job : Factor w/ 12 levels \"admin.\",\"blue-collar\",..: 5 10 3 2 12 5 5 3 6 10 ...\n\n\n$ marital : Factor w/ 3 levels \"divorced\",\"married\",..: 2 3 2 2 3 2 3 1 2 3 ...\n\n\n$ education : Factor w/ 4 levels \"primary\",\"secondary\",..: 3 2 2 4 4 3 3 3 1 2 ...\n\n\n$ default : Factor w/ 2 levels \"no\",\"yes\": 1 1 1 1 1 1 1 2 1 1 ...\n\n\n$ balance : int 2143 29 2 1506 1 231 447 2 121 593 ...\n\n\n$ housing : Factor w/ 2 levels \"no\",\"yes\": 2 2 2 2 1 2 2 2 2 2 ...\n\n\n$ loan : Factor w/ 2 levels \"no\",\"yes\": 1 1 2 1 1 1 2 1 1 1 ...\n\n\n$ contact : Factor w/ 3 levels \"cellular\",\"telephone\",..: 3 3 3 3 3 3 3 3 3 3 ...\n\n\n$ day : Factor w/ 31 levels \"1\",\"2\",\"3\",\"4\",..: 5 5 5 5 5 5 5 5 5 5 ...\n\n\n$ month : Factor w/ 12 levels \"apr\",\"aug\",\"dec\",..: 9 9 9 9 9 9 9 9 9 9 ...\n\n\n$ y_termSubscribed: Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 1 1 ...\n\n\n\n\n\n\n\n\n\n\n\nData exploration through figures\nHistogram plots for some continuous outcomes.\nAge first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=age)) + geom_histogram()\nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"results\", \"figures\",\"age-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNext bank account balance.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=balance)) + geom_histogram() + scale_x_log10(labels =label_dollar())\nplot(p2)\n\nWarning in transformation$transform(x): NaNs produced\n\n\nWarning in scale_x_log10(labels = label_dollar()): log-10 transformation\nintroduced infinite values.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 7280 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\nfigure_file = here(\"results\", \"figures\",\"balance-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n\n\nWarning in transformation$transform(x): NaNs produced\nWarning in transformation$transform(x): log-10 transformation introduced\ninfinite values.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 7280 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\nNow balance as function of age\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=age, y=balance)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"results\", \"figures\", \"age-balance-scatter.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nNow balance as function of age, stratified by the marital variable.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=age, y=balance, color = marital)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"results\", \"figures\", \"age-balance-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nNext, exploring balance across different job types.\n\np5 = mydata |&gt;\n  ggplot(aes(balance, job))+\n  geom_boxplot()+\n  scale_x_log10(labels =label_dollar())\np5\n\nWarning in transformation$transform(x): NaNs produced\n\n\nWarning in scale_x_log10(labels = label_dollar()): log-10 transformation\nintroduced infinite values.\n\n\nWarning: Removed 7280 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\nfigure_file = here(\"results\", \"figures\", \"job-balance-scatter.png\")\nggsave(filename = figure_file, plot=p5) \n\nSaving 7 x 5 in image\n\n\nWarning in transformation$transform(x): NaNs produced\n\n\nWarning in scale_x_log10(labels = label_dollar()): log-10 transformation\nintroduced infinite values.\n\n\nWarning: Removed 7280 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\nNow, some barplots examining job types, education level, and marital status.\n\np6 = mydata |&gt;\n  ggplot(aes(x=fct_infreq(job)))+\n  geom_bar() +\n  coord_flip()\n\np7 = mydata |&gt;\n  ggplot(aes(education))+\n  geom_bar()\n\np8 = mydata |&gt;\n  ggplot(aes(marital))+\n  geom_bar()\n\n\np6\n\n\n\n\n\n\n\np7\n\n\n\n\n\n\n\np8\n\n\n\n\n\n\n\nfigure_file = here(\"results\", \"figures\", \"job-barchart.png\")\nggsave(filename = figure_file, plot=p6) \n\nSaving 7 x 5 in image\n\nfigure_file = here(\"results\", \"figures\", \"education-barchart.png\")\nggsave(filename = figure_file, plot=p7) \n\nSaving 7 x 5 in image\n\nfigure_file = here(\"results\", \"figures\", \"marital-barchart.png\")\nggsave(filename = figure_file, plot=p8) \n\nSaving 7 x 5 in image\n\n\nLets see how the age demographic differs between the population that subscribed to a term (y_termsubscribed=yes) vs the general population.\n\np9 = mydata |&gt;\n  filter(y_termSubscribed == 1) |&gt;\n  ggplot(aes(age))+\n  geom_bar()+\n  labs(title = \"yes\")\n\np10 = mydata |&gt;\n  ggplot(aes(age))+\n  geom_bar()+\n  labs(title = \"yes/no\")\n\np9\n\n\n\n\n\n\n\np10\n\n\n\n\n\n\n\nfigure_file = here(\"results\", \"figures\", \"yes-age.png\")\nggsave(filename = figure_file, plot=p9) \n\nSaving 7 x 5 in image\n\nfigure_file = here(\"results\", \"figures\", \"yes-no-age.png\")\nggsave(filename = figure_file, plot=p10) \n\nSaving 7 x 5 in image\n\n#Comparing how age data compares from those who subscribed to a term deposit and those\n#that did not\nggplot(data=mydata)+\n  geom_bar(mapping =aes(x=age))+\n  facet_wrap(~y_termSubscribed, nrow=2)\n\n\n\n\n\n\n\n\nNow, lets assess the highest job categories that are labeled as subscribing to a term.\n\np11 = mydata |&gt;\n  filter(y_termSubscribed == 1) |&gt;\n  ggplot(aes(x=fct_infreq(job)))+\n  geom_bar()+\n  coord_flip()+\n  labs(title = \"Term Subscribed = yes\")\n\np11\n\n\n\n\n\n\n\n\nTaking a quick look at some of the binary variables in the dataset\n\nggplot(data=mydata)+\n  geom_bar(mapping =aes(x=default))\n\n\n\n\n\n\n\nggplot(data=mydata)+\n  geom_bar(mapping =aes(x=housing))\n\n\n\n\n\n\n\nggplot(data=mydata)+\n  geom_bar(mapping =aes(x=loan))\n\n\n\n\n\n\n\n\nTaking a look at frequency counts across different variables of interest\n\nhist(mydata$age)\n\n\n\n\n\n\n\nhist(mydata$balance)\n\n\n\n\n\n\n\n\nExamining which days are most common for recording a positive outcome (subscribing to a term deposit). Looks like later in the month has higher frequencies.\n\np12= mydata |&gt;\n  filter(y_termSubscribed == 1) |&gt;\n  ggplot(aes(day))+\n  geom_bar()+\n  labs(title = \"yes\")\n\np12\n\n\n\n\n\n\n\nfigure_file = here(\"results\", \"figures\", \"days-yes.png\")\nggsave(filename = figure_file, plot=p12) \n\nSaving 7 x 5 in image\n\n\nWe’ve analyzed which job types had the MOST positive outcomes, but now we want to compare which job type had the greatest PERCENT of positive outcomes.\n\nposjob = mydata %&gt;% \n  filter(y_termSubscribed==1) %&gt;% \n  count(y_termSubscribed, job, sort=TRUE)\n\njobtable = mydata %&gt;% count(job)\n\npctjob = posjob %&gt;% \n  left_join(jobtable, by =\"job\")\n\n\ncolnames(pctjob)[3] &lt;- \"numofYES\"\ncolnames(pctjob)[4] &lt;- \"numofBOTH\"\n\n\np13 = ggplot(pctjob, aes(x=reorder(job, numofYES), y=numofYES, fill=numofYES))+\n  geom_bar(stat=\"identity\")+\n  coord_flip()\n  \np14 = ggplot(pctjob, aes(x=reorder(job, (numofYES/numofBOTH)), y=(numofYES/numofBOTH), fill=numofYES))+\n  geom_bar(stat=\"identity\")+\n  coord_flip()\n\nfigure_file = here(\"results\", \"figures\", \"jobs-count-yes.png\")\nggsave(filename = figure_file, plot=p13) \n\nSaving 7 x 5 in image\n\nfigure_file = here(\"results\", \"figures\", \"jobs-percent-yes.png\")\nggsave(filename = figure_file, plot=p14) \n\nSaving 7 x 5 in image\n\np13\n\n\n\n\n\n\n\np14\n\n\n\n\n\n\n\n\nOn the first figure, we can see that jobs with the most positive outcomes are management, technician, and blue-collar, but on the second chart we can see that the job-types with the highest percentages are ‘student’, ‘retired’, and ‘unemployed.’ There appears to be a noticable different between the total number of positive cases, and the job types which are most commonly recording positive cases.\n\ndata_location &lt;- here::here(\"data\",\"processed-data\",\"processeddata5.rds\")\nmydata &lt;- readRDS(data_location)\n\nnumericonly = mydata %&gt;% \n  select(!y_termSubscribed)\n\n\n# Specify the file path where the image will be saved\nfile_path &lt;- here(\"results\", \"figures\",\"corplot.png\")\n\n# Open a PNG graphics device\npng(filename = file_path, width = 800, height = 600)\n\n# Create the correlation plot\ncorrplot(cor(numericonly))\n\n# Close the graphics device\ndev.off()\n\npng \n  2"
  },
  {
    "objectID": "classification-prediction-project/code/eda/readme.html",
    "href": "classification-prediction-project/code/eda/readme.html",
    "title": "eda-code",
    "section": "",
    "text": "eda-code\nThis folder contains code to do a simple exploratory data analysis (EDA) on the processed/cleaned data. The code produces a few tables and figures, which are saved in the results sub-folder."
  },
  {
    "objectID": "classification-prediction-project/code/processing/readme.html",
    "href": "classification-prediction-project/code/processing/readme.html",
    "title": "processing-code",
    "section": "",
    "text": "processing-code\nThis folder contains code for processing data.\nThis code will read in the raw data pulled straight from the data repository where the dataset was sourced in a semi-colon separated csv."
  },
  {
    "objectID": "classification-prediction-project/manuscript/Manuscript.html",
    "href": "classification-prediction-project/manuscript/Manuscript.html",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "",
    "text": "Financial institutions spend billions of dollars on their marketing teams every year, with a positive trend observed in 2023 for the largest and smallest banks (Ally Akins (2024)). With the need for efficient marketing becoming more and more important, machine learning models are viable tools for refining marketing strategies. This project will seek to identify a model for predicting consumer financial behavior using a dataset from a Portuguese bank. Through comparing the accuracy and predictive power of four different machine learning models, this project will identify an ideal method for prediction."
  },
  {
    "objectID": "classification-prediction-project/manuscript/Manuscript.html#general-background-information",
    "href": "classification-prediction-project/manuscript/Manuscript.html#general-background-information",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "General Background Information",
    "text": "General Background Information\nIn 2022, JPMorgan Chase & Co. spent $3.9 billion (US) dollars on Marketing, leading other financial institutions in this category. Recent reports have shown that this has only grown in past years (Co. (2023)). Providing businesses with a model that will allow prioritization of consumers and/or demographics has great potential in improving resource management and future marketing campaigns, as well as increasing efficient spending. This particular project will utilize Classification Prediction. Unlike Regression Prediction which will attempt to predict a continuous value (e.g., x amount of dollars, x amount of cells), Classification Prediction seeks to train a model that can correctly predict a classification (e.g., True/False, Success/Failure) based on the given predictors(Kuhn (2018)). In our case, our y variable or response variable is a binary variable, Yes/No, answering whether or not a customer subscribed to a term deposit."
  },
  {
    "objectID": "classification-prediction-project/manuscript/Manuscript.html#description-of-data-and-data-source",
    "href": "classification-prediction-project/manuscript/Manuscript.html#description-of-data-and-data-source",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Description of data and data source",
    "text": "Description of data and data source\nThe data was donated on 2/13/2012. It was collected from phone call marketing campaigns performed by a Portuguese banking institution. I have accessed this data from the UC Irvine Machine Learning Repository.\nThere are 45,212 records, 17 columns/variables which include: age, marital status, job, education, details related to the phone call, as well as answers related to questions about past credit history. Additionally, as mentioned, the classification variable is whether or not the person subscribed to a term deposit."
  },
  {
    "objectID": "classification-prediction-project/manuscript/Manuscript.html#questionshypotheses-to-be-addressed",
    "href": "classification-prediction-project/manuscript/Manuscript.html#questionshypotheses-to-be-addressed",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Questions/Hypotheses to be addressed",
    "text": "Questions/Hypotheses to be addressed\nThe research question I plan to address with my analysis is: which features or combination of features are the best predictors of consumers making a deposit? The desired output of this analysis is a model which allows a financial institution to make better decisions regarding future marketing campaigns. I plan to investigate all demographic variables, with a specific focus on job type, education and age."
  },
  {
    "objectID": "classification-prediction-project/manuscript/Manuscript.html#data-aquisition",
    "href": "classification-prediction-project/manuscript/Manuscript.html#data-aquisition",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Data aquisition",
    "text": "Data aquisition\nThe dataset for this project was retrieved from UCI ML Repository in CSV form. Additionally, I created a codebook based on data from the same source."
  },
  {
    "objectID": "classification-prediction-project/manuscript/Manuscript.html#data-import-and-cleaning",
    "href": "classification-prediction-project/manuscript/Manuscript.html#data-import-and-cleaning",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Data import and cleaning",
    "text": "Data import and cleaning\n\nReading in the Data\n\n\n\n\nTable 1: Data Snapshot of first 5 Variables\n\n\n\n\n\n\nage\njob\nmarital\neducation\ndefault\n\n\n\n\n58\nmanagement\nmarried\ntertiary\nno\n\n\n44\ntechnician\nsingle\nsecondary\nno\n\n\n33\nentrepreneur\nmarried\nsecondary\nno\n\n\n47\nblue-collar\nmarried\nunknown\nno\n\n\n33\nunknown\nsingle\nunknown\nno\n\n\n35\nmanagement\nmarried\ntertiary\nno\n\n\n\n\n\n\n\n\n\n\n\n\nTable 2: Data Snapshot of next 5 Variables\n\n\n\n\n\n\nbalance\nhousing\nloan\ncontact\nday\n\n\n\n\n2143\nyes\nno\nunknown\n5\n\n\n29\nyes\nno\nunknown\n5\n\n\n2\nyes\nyes\nunknown\n5\n\n\n1506\nyes\nno\nunknown\n5\n\n\n1\nno\nno\nunknown\n5\n\n\n231\nyes\nno\nunknown\n5\n\n\n\n\n\n\n\n\n\n\nDimensions:\nRows: 45, 211\nColumns: 17\n\n\n\nDescribing data\n\n\n\n\n\nSummary of predictors\n\n\nx\n\n\n\n\n'data.frame': 45211 obs. of 12 variables:\n\n\n$ age : int 58 44 33 47 33 35 28 42 58 43 ...\n\n\n$ job : Factor w/ 12 levels \"admin.\",\"blue-collar\",..: 5 10 3 2 12 5 5 3 6 10 ...\n\n\n$ marital : Factor w/ 3 levels \"divorced\",\"married\",..: 2 3 2 2 3 2 3 1 2 3 ...\n\n\n$ education : Factor w/ 4 levels \"primary\",\"secondary\",..: 3 2 2 4 4 3 3 3 1 2 ...\n\n\n$ default : Factor w/ 2 levels \"no\",\"yes\": 1 1 1 1 1 1 1 2 1 1 ...\n\n\n$ balance : int 2143 29 2 1506 1 231 447 2 121 593 ...\n\n\n$ housing : Factor w/ 2 levels \"no\",\"yes\": 2 2 2 2 1 2 2 2 2 2 ...\n\n\n$ loan : Factor w/ 2 levels \"no\",\"yes\": 1 1 2 1 1 1 2 1 1 1 ...\n\n\n$ contact : Factor w/ 3 levels \"cellular\",\"telephone\",..: 3 3 3 3 3 3 3 3 3 3 ...\n\n\n$ day : Factor w/ 31 levels \"1\",\"2\",\"3\",\"4\",..: 5 5 5 5 5 5 5 5 5 5 ...\n\n\n$ month : Factor w/ 12 levels \"apr\",\"aug\",\"dec\",..: 9 9 9 9 9 9 9 9 9 9 ...\n\n\n$ y_termSubscribed: Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 1 1 ...\n\n\n\n\n\n\n\n\n\n\n\nCleaning Data\nThere were several different data cleaning methods that were experimented with in order to find the best way to prepare the data for modeling. First, I converted several variables to factors, as they had been read in as character variables, or strings. Next I tried to use the DummyVars tool to convert every categorical variable to a dummy value but this made modeling difficult due to a large amount of binary variables. Instead I proceeded with converting the categorical variables to numeric values while maintaining their factor status. I also created a dataset with these numeric values that were not factors. These were the two primary dataset I used for my modeling. Finally I created a dataset stripping the categorical values of their attributes, this was solely created to allow for my corrplot to work.\n\n\nRemoving Initial Predictors\nI removed the ‘Duration’ variable due to a warning I discovered on the site hosting this dataset initially: “Important note: this attribute highly affects the output target (e.g., if duration=0 then y=‘no’). Yet, the duration is not known before a call is performed. Also, after the end of the call y is obviously known. Thus, this input should only be included for benchmark purposes and should be discarded if the intention is to have a realistic predictive model.”(Moro & Cortez (2012)) Due to this new information I decided to remove all the variables related to this, which included ‘campaign’, ‘pdays’, ‘previous’, and ‘poutcome.’ Bringing our new total number of predictors to 11."
  },
  {
    "objectID": "classification-prediction-project/manuscript/Manuscript.html#exploratory-data-analysis",
    "href": "classification-prediction-project/manuscript/Manuscript.html#exploratory-data-analysis",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\nPeng and Matsui define EDA as “the process of exploring your data”, “[including] examining the structure and components of your dataset, the distributions of individual variables, and the relationships between two or more variables”(Peng & Matsui (2018)).\nIn accordance with this definition, we will be exploring the data using different charts to identify outliers, abnormalities, relationships, and the general shape and feel of different variables.\nFigure 1 shows the distribution of the ‘Age’ variable.\n\n\n\n\n\n\n\n\nFigure 1\n\n\n\n\n\nWhile this shows a slight skew to the right, if we account for the extreme values, this data seems to be fairly normally distributed.\n\n\n\n\n\n\n\n\n\nFigure 2: Education level Bar Chart\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 3: Most Common Job Types\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 4: Scatterplot of Age and Balance, stratified by Marital Status.\n\n\n\n\n\nFigure 5 shows a barplot of the most common days of the month to record a positive outcome.\n\n\n\n\n\n\n\n\nFigure 5\n\n\n\n\n\nWhile there doesn’t appear to be a significant trend, we can clearly see that the 30th of the month stands out as being a day of interest, especially compared to other days of the months.\nFigure 6 shows potential correlation between different variables.\n\n\n\n\n\n\n\n\nFigure 6: Correlation Matrix\n\n\n\n\n\nThe biggest takeaways from our Exploratory Data Analysis is that most variables are fairly normally distributed due to the size of the data, and most variable are not correlated to each other, with one exception (‘Age’ and ‘Marital’)."
  },
  {
    "objectID": "classification-prediction-project/manuscript/Manuscript.html#basic-statistical-analysis",
    "href": "classification-prediction-project/manuscript/Manuscript.html#basic-statistical-analysis",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Basic statistical analysis",
    "text": "Basic statistical analysis\nBefore I began with the machine learning analysis, I sought to test the variables of interest in their significance of affecting the response variable. As mentioned previously, our response variable is a binary value (Yes/No), which means that we need to use a logistic regression model instead of a linear regression model (Kuhn (2018)).\nBelow are the results of the logistic model fit with all variables as predictors\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n-0.8090128\n0.2095208\n-3.861252\n0.0001128\n\n\njob\n0.0133597\n0.0046908\n2.848042\n0.0043989\n\n\nmarital\n0.2328452\n0.0276199\n8.430357\n0.0000000\n\n\neducation\n0.1858218\n0.0198575\n9.357763\n0.0000000\n\n\ndefault\n-0.4935394\n0.1456864\n-3.387684\n0.0007049\n\n\nhousing\n-0.7963802\n0.0313995\n-25.362860\n0.0000000\n\n\nloan\n-0.5843431\n0.0502504\n-11.628624\n0.0000000\n\n\nage\n0.0062746\n0.0015087\n4.158970\n0.0000320\n\n\nbalance\n0.0000238\n0.0000039\n6.057946\n0.0000000\n\n\nday\n-0.0119537\n0.0017711\n-6.749262\n0.0000000\n\n\n\n\n\nAs expected, all predictors are very significant as determined by the very small p-values. We will proceed to the Machine Learning portion of this project."
  },
  {
    "objectID": "classification-prediction-project/manuscript/Manuscript.html#machine-learning-modeling",
    "href": "classification-prediction-project/manuscript/Manuscript.html#machine-learning-modeling",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Machine Learning Modeling",
    "text": "Machine Learning Modeling\nI chose to utilize the following models: the Multivariate Adaptive Regression Splines model (MARS), K-Nearest Neighbors model (KNN), Logistic Regression model, and RandomForest models to determine the best prediction model for this project. \n\nBackground on Chosen Models\nMARS:\nThe MARS model has some similarities to both Neural Networks and the Partial Least Squares model, but the distinguishing feature is a use of multiple ‘splines’ to create a “piecewise linear model” with multiple features modeling a separate part of the data (Kuhn (2018)).\n\n\n\n\n\n\n\n\nFigure 7: MARS Model example from MiniTab\n\n\n\n\n\nKNN:\nThe KNN model predicts based on the closest samples or neighbors. Essentially, to predict a value, the data is broken up into samples/neighbors, and then the nearest samples (using Euclidean distance, typically) to the value of interest are examined to either classify or find a mean between the chosen samples. K represents the number of neighbors to utilize to come to this conclusion (Kuhn (2018)).\nLogistic Regression:\nAs mentioned earlier, Logistic Regression is similar to Linear Regression but the difference is that a Logistic Regression focuses on the probability of an event (p, p-1).\nRandomForest:\nRandomForest models take advantage of decision trees. If we think about the scenario in our project (whether someone makes a deposit or not), we could imagine a decsion tree starting with, “after what age is someone more likely to subscribe?” This would be our first node to split the data on. We could continue asking things like, “Are those with housing loans more likely to subscribe?” or “Are those who are married more liklely to subscribe?”, and these would represent more decision nodes for us to split the data on, getting us closer to the mode accurate prediction model. The RandomForest algorithm uses different methods to create several uncorrelated “forests” of decision trees (IBM (n.d.)) .\n\n\n\nBackground On Performance Metrics\nDescription of Key Metrics:\nAccuracy:\nThe proportion of total correct classifications.\nRecall: (Sensitivity)\nThe proportion of Positive cases that were correctly identified. This helps us understand how well we can classify positive cases specifically.\nSpecificity:\nThe proportion of Negative cases that were correctly identified.  Precision:\nThe proportion of Positive classifications that were actually correct.\nF1:\nThe harmonic mean of Precision and Recall. This metric helps iron out extreme values\nROC:\nThe Receiver Operator Characteristic is a plotting technique that shows the threshold difference between Sensitivity (Recall) and Specificity. A model with good performance will have curve closer to the top left of the graph, whereas, a low-performing model will have a curve closer to the middle diagonal line.\n\n\n\n\n\n\n\n\nFigure 8: ROC diagram from DisplayR\n\n\n\n\n\n\n\n\nModel Performance Metrics\nAs highlighted in the data cleaning section, there were two data sets I was focusing on: one that had numeric factors for the categorical predictors, and one that had just numeric variables for the categorical predictors. I decided to examine both so there are a total of 8 different runs recorded below, 4 runs for each dataset.\nTable 3 displays the relevant metrics for the models runs using the predictors that are numeric and are not factors.\n\n\n\n\nTable 3: Performance Metrics for Numeric Unfactored Model Run\n\n\n\n\n\n\nTerm\nMARS\nKNN\nLogReg\nRF\n\n\n\n\naccuracy\n0.882\n0.88\n0.882\n0.887\n\n\nkappa\n0.017\n0.018\n0\n0.126\n\n\nsensitivity\n0.011\n0.014\n1\n0.084\n\n\nspecificity\n0.999\n0.997\n0\n0.994\n\n\nprecision\n0.545\n0.357\n0.882\n0.667\n\n\nrecall\n0.011\n0.014\n1\n0.084\n\n\nf1\n0.022\n0.027\n0.937\n0.149\n\n\n\n\n\n\n\n\nWhile all four models performed fairly similarly, the RandomForest model reported the highest values in all major categories. What stands out very clearly is that while all models have a fairly high accuracy scores, they also have very low recall values. We can deduce that this means the models are great at predicting negative cases (no subscription) but not very adequate at predicting positive cases (subscription). In the case of the Logistic Regression Model, there were 0 positive cases predicted at all, and thus the non-accuracy scores were 0 or NA.\nTable 4 displays the relevant metrics for the models using the predictors that are factors (Age/Balance are still numeric).\n\n\n\n\nTable 4: Performance Metrics for Factored Model Run\n\n\n\n\n\n\nTerm1\nMARS1\nKNN1\nLogReg1\nRF1\n\n\n\n\naccuracy\n0.882\n0.882\n0.881\n0.884\n\n\nkappa\n0\n0.031\n0\n0.144\n\n\nsensitivity\n0\n0.021\n0.001\n0.105\n\n\nspecificity\n1\n0.997\n0.999\n0.989\n\n\nprecision\nNA\n0.524\n0.125\n0.554\n\n\nrecall\n0\n0.021\n0.001\n0.105\n\n\nf1\nNA\n0.04\n0.002\n0.176\n\n\n\n\n\n\n\n\nWith these results we can see that the RandomForest Model is still the best performing, but in this case, the KNN model is not too far behind in most metrics. The Logistic Regression model performed better under these conditions, predicting some positive classes. However, the MARS model did not fare so well. In this run, the MARS model was the model to not identify a single positive class.\nFigure 9 displays the ROC Curve for the first model run. Both ROC charts were identical, so only one is included here.\n\n\n\n\n\n\n\n\nFigure 9\n\n\n\n\n\nThe ROC graph tells an even clearer story. While the RF model had a near perfect threshold trade-off between Sensitivity and Specificity, the other three models had very low ROC scores, again emphasizing poor predictive performance.\n\n\n\nVariables of Importance\nFinally, we can examine which predictors specifically improved prediction the most. That is, which had the greatest weight on the final result. We will compare the difference between the two different runs of the same models. I determined it would only be helpful to include models that had more an 0 positive classes predicted.\nFigure 10 shows the Predictors that had the most impact on the Mars Model – Numeric\n\n\n\n\n\n\n\n\nFigure 10\n\n\n\n\n\nThe numeric MARS models only highlighted a single variable of importance: Age.\n\nFigure 11 shows the Predictors that had the most impact on the KNN Model–Numeric\n\n\n\n\n\n\n\n\nFigure 11\n\n\n\n\n\nBoth KNN model runs returned the exact same most important factors, which were: Housing (whether someone had a housing loan or not), Balance (numeric value representing the customer’s current account balance), and Education (Secondary, Tertiary, etc.).\n\nFigure 12 shows the Predictors that had the most impact on the Logistic Regression Model – Factor\n\n\n\n\n\n\n\n\nFigure 12: KNN Variables of Importance\n\n\n\n\n\nHousing2 indicates that the person does have a housing loan and Loan2 indicates that the person has personal loan. Education3 indicates that the person has attained a tertiary level of education. Additionally we see different days being flagged as important in determining accuracy.\n\nFigure 13 shows the Predictors that had the most impact on the RF Model – Numeric\n\n\n\n\n\n\n\n\nFigure 13: RF Variables of Importance\n\n\n\n\n\n\nFigure 14 shows the Predictors that had the most impact on the RF Model – Factor\n\n\n\n\n\n\n\n\nFigure 14: KNN Variables of Importance\n\n\n\n\n\nFor both RandomForest models, Age and Housing were the variables with most impact on the model’s prediction power. Balance and Day were next for both models in different order of importance."
  },
  {
    "objectID": "classification-prediction-project/manuscript/Manuscript.html#downsampling-machine-learning-models",
    "href": "classification-prediction-project/manuscript/Manuscript.html#downsampling-machine-learning-models",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "DownSampling Machine Learning Models",
    "text": "DownSampling Machine Learning Models\nIn situations involving imbalanced response variables, there are different approaches available that can improve model performance. Kuhn and Johnson describe several different options including “Up-sampling” and “Down-sampling” (Kuhn (2018)). Up-sampling involves generating additional synthetic data in order to bring the totals of the response classes up to an equal amount. Down-sampling involves removing random observations until the the majority class is equal to the minority class (or classes). Since this project was already utilizing a fairly large dataset, I decided to perform Down-sampling in order to assist with the response variable imbalance that was being observed. The challenge with this approach is that there is less data to train with, but could lead to a greater overall model performance.\nI performed Down-Sampling on the training data set but kept the test data set intact as it was. It is recommended to allow the test data set to continue representing the natural data distribution in order for the most realistic prediction analysis\n\nDownSampling Model Performance Metrics (Non-factored)\n\n\n\n\n\nTerm\nMARS\nKNN\nLogReg\nRF\n\n\n\n\naccuracy\n0.648\n0.629\n0.624\n0.676\n\n\nkappa\n0.137\n0.106\n0.113\n0.168\n\n\nsensitivity\n0.615\n0.574\n0.626\n0.629\n\n\nspecificity\n0.652\n0.637\n0.602\n0.683\n\n\nprecision\n0.192\n0.175\n0.921\n0.21\n\n\nrecall\n0.615\n0.574\n0.626\n0.629\n\n\nf1\n0.293\n0.269\n0.746\n0.315\n\n\n\n\n\nAt first glance, it appears that the performance power on these models is less than the first models, but this is not the case. While Accuracy was lower among all models, Recall and F1 scores saw tremendous improvements. The model that improved the most was clearly Logistic Regression which didn’t show any Precision or F1 power initially, but now shows better Precision and F1 than the RandomForest model, which still showed to the be the superior model after this run.\n\n\n\nDownSampling Model Performance Metrics (Factored)\n\n\n\n\n\nTerm1\nMARS1\nKNN1\nLogReg1\nRF1\n\n\n\n\naccuracy\n0.65\n0.618\n0.647\n0.61\n\n\nkappa\n0.136\n0.123\n0.135\n0.13\n\n\nsensitivity\n0.61\n0.642\n0.612\n0.677\n\n\nspecificity\n0.655\n0.615\n0.652\n0.602\n\n\nprecision\n0.192\n0.183\n0.191\n0.186\n\n\nrecall\n0.61\n0.642\n0.612\n0.677\n\n\nf1\n0.292\n0.285\n0.291\n0.292\n\n\n\n\n\nWe can observe similar changes in the second Down-sampled run. In the Factored-Down-Sampled model runs, we also see that it is harder to identify a single model of best performance. The MARS model showed the best Accuracy and Specificity, while the RandomForest model showed the best Sensitivity and Precision. The Logistic Regression model was not far behind in these categories and managed to approximately tie three ways for the F1 metric, along with the MARS Model and RandomForest Model.\n\nTable 5 displays the ROC Curve for the Down-Sampled model runs. Again, both ROC charts were identical, so only one is included here.\n\n\n\n\nTable 5\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe can see much better results on the ROC model compared to the first runs. The RandomForest again performs nearly perfectly, but all three remaining models show some promise in terms of threshold trade-off, with the MARS model leading these three.\n\n\n\nVariables of Importance for Down-Sampled Models\nFigure 15 shows the Predictors that had the most impact on the Down-Sampled Mars Model – Factored\n\n\n\n\n\n\n\n\nFigure 15\n\n\n\n\n\nBoth MARS models highlighted essentially the same variables of importance, with added detail coming from the factored model. As mentioned previously, Housing2 indicates that the person does have a housing loan and Loan2 indicates that the person has personal loan. Education3 indicates that the person has attained a tertiary level of education. Marital 2 indicates the person is married.\n\nFigure 16 shows the Predictors that had the most impact on the Down-Sampled KNN Models (both models highlighted the same variables)\n\n\n\n\n\n\n\n\nFigure 16\n\n\n\n\n\nThe variables highlighted here are the same that were highlighted in the original KNN models with the only exception being the Marital variable moved up one spot on this list.\n\nFigure 17 shows the Predictors that had the most impact on the Down-Sampled Logistic Regression Model – Factored\n\n\n\n\n\n\n\n\nFigure 17\n\n\n\n\n\nThese are practically the same variables highlighted in the original Logistic Regression Model, except while the ‘Education3’ variable was the third most important variable on the original model, it is nowhere to be found on this new list. In contrast, the ‘Job3’ (Technician) variable makes an appearance as having a substantial impact on prediction power.\n\nFigure 18 shows the Predictors that had the most impact on the Down-Sampled Logistic Regression Model – Factored\n\n\n\n\n\n\n\n\nFigure 18\n\n\n\n\n\nWhile the two Down-Sampled models were fairly close in highlighting variables, there was quite a bit of difference between these results and the original RandomForest model. Where the original highlighted, Age, Housing, Day and Balance, the new models highlighted Housing, Age, Balance, and Loan."
  },
  {
    "objectID": "classification-prediction-project/manuscript/Manuscript.html#summary-and-interpretation",
    "href": "classification-prediction-project/manuscript/Manuscript.html#summary-and-interpretation",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Summary and Interpretation",
    "text": "Summary and Interpretation\nInitially the metrics produced by these models were showing substantial promise, but as I investigated the different confusion matrices I realized that the metrics were incorrectly labeling the negative classification as positive. When I reversed this option, the metrics very clearly shows that there was a drop in performance for predicting positive classifications. One explanation for this is that there were too few positive classes in the data as a whole. In the full data set, about 11% of the observations were positive cases, and this was also the case in the test data set as well. Given the size of the data set (45K records), and the small proportion of positive cases, there is reason to conclude that the models were victim to lack of familiarity with the positive cases.\nUsing a Down-Sampling approach to alleviate the imbalance issue resulted in models with greater predictive power and gave more clarity on which variables (and in some cases, sub-variables) contributed the most towards correctly predicting the response variable.\nAll four models provided insights for this objective. The Housing variable was listed as the most important variable by every model with the exception of the Mars-Numeric model. Balance and Age were also listed as important by several different models. The variables that did not show up in the five important variables in any of the models were: Marital, Job, and Default. Education, Loan, and Day had a significant effect on some of the models and little to no effect on others."
  },
  {
    "objectID": "classification-prediction-project/manuscript/Manuscript.html#conclusions",
    "href": "classification-prediction-project/manuscript/Manuscript.html#conclusions",
    "title": "Predicting Customer Behavior Using a Portuguese Financial Institution Dataset",
    "section": "Conclusions",
    "text": "Conclusions\nUsing machine learning to better define a customer base can be an incredibly effective way to create more efficient marketing campaigns, as well as provide direction for better management of marketing resources.\nI attempted to develop a classification model that accurately predicted whether a customer had subscribed to a term deposit or not. While the different models that were ran initially showed potential, the predictive power of the best model was not at an ideal level. With a more balanced data set with similar variables, it is probable that a more precise model could have been produced.\nThe other goal of this project was to identify which variables could best aid in identifying customers that would subscribe to a term deposit. I found that there was quite a bit of variance among the predictors in terms of importance, with some predictors clearly standing out above the rest. This information could be used to better segment a consumer pool or adjust marketing tactics to prioritize customers displaying the variables of importance uncovered in this project.\nFurther research would include utilizing additional models to confirm the results presented here, incorporating a more balanced data set (as mentioned above), and exploring different tuning options than were used in this project."
  },
  {
    "objectID": "regression-prediction-project/regression-prediction-project.html",
    "href": "regression-prediction-project/regression-prediction-project.html",
    "title": "Predicting Housing Prices with Machine Learning Models",
    "section": "",
    "text": "There are many different variables that affect housing prices which can vary drastically. In order to make the best decisions about housing prices, it is useful to be able to predict the sales price of a house given a set of descriptors. This project will seek to identify a model for predicting housing prices using a dataset provided by Kaggle. This will be achieved by comparing the accuracy and predictive power of different machine learning models."
  },
  {
    "objectID": "regression-prediction-project/regression-prediction-project.html#ln-model",
    "href": "regression-prediction-project/regression-prediction-project.html#ln-model",
    "title": "Processing and Modeling Code",
    "section": "LN model",
    "text": "LN model\n\nLNmodel = glm(Price~., data = train_data)\n\n\nLNmodel\n\n\nCall:  glm(formula = Price ~ ., data = train_data)\n\nCoefficients:\n         (Intercept)            MSSubClass           LotFrontage  \n            174394.8               -2348.4                 318.2  \n             LotArea           OverallQual           OverallCond  \n             10765.9               11530.6                6556.0  \n           YearBuilt          YearRemodAdd            MasVnrArea  \n              8933.3                2146.2                3655.2  \n          BsmtFinSF1            BsmtFinSF2             BsmtUnfSF  \n             30157.0                8353.6               19214.2  \n         TotalBsmtSF             X1stFlrSF             X2ndFlrSF  \n                  NA               25510.9               42374.7  \n        LowQualFinSF             GrLivArea          BsmtFullBath  \n              1942.0              -23986.3                -603.9  \n        BsmtHalfBath              FullBath              HalfBath  \n              -751.7                3705.4                2162.6  \n        BedroomAbvGr          KitchenAbvGr          TotRmsAbvGrd  \n             -3551.0               -1935.6                3669.9  \n          Fireplaces           GarageYrBlt            GarageCars  \n              2435.1                2385.3                5091.8  \n          GarageArea            WoodDeckSF           OpenPorchSF  \n              -595.4                 702.1                1439.1  \n       EnclosedPorch            X3SsnPorch           ScreenPorch  \n               443.2                1091.2                1833.4  \n            PoolArea               MiscVal                MoSold  \n              4405.7                -287.6                -215.9  \n              YrSold            MSZoningFV            MSZoningRH  \n              -175.5               44046.6               30922.8  \n          MSZoningRL            MSZoningRM           LotShapeIR2  \n             31269.0               28301.0                5139.3  \n         LotShapeIR3           LotShapeReg        LandContourHLS  \n              4124.5                 775.3               11945.5  \n      LandContourLow        LandContourLvl      LotConfigCulDSac  \n             -9669.1                4054.4                4797.6  \n        LotConfigFR2          LotConfigFR3       LotConfigInside  \n             -6103.5               -7457.4                -841.3  \n        LandSlopeMod          LandSlopeSev   NeighborhoodBlueste  \n              4095.5                4598.7               18051.1  \n  NeighborhoodBrDale   NeighborhoodBrkSide   NeighborhoodClearCr  \n              9190.3               -7230.0              -35264.2  \n NeighborhoodCollgCr   NeighborhoodCrawfor   NeighborhoodEdwards  \n            -18086.1                5524.2              -24974.4  \n NeighborhoodGilbert    NeighborhoodIDOTRR   NeighborhoodMeadowV  \n            -23595.7               -8622.4               10062.3  \n NeighborhoodMitchel     NeighborhoodNAmes   NeighborhoodNoRidge  \n            -31715.0              -25654.3               11356.4  \n NeighborhoodNPkVill   NeighborhoodNridgHt    NeighborhoodNWAmes  \n             -1483.7                -925.3              -30171.6  \n NeighborhoodOldTown    NeighborhoodSawyer   NeighborhoodSawyerW  \n            -17006.3              -20929.2              -16455.3  \n NeighborhoodSomerst   NeighborhoodStoneBr     NeighborhoodSWISU  \n            -12305.4               17089.7              -12433.5  \n  NeighborhoodTimber   NeighborhoodVeenker       Condition1Feedr  \n            -25426.6              -14575.6                1944.9  \n      Condition1Norm        Condition1PosA        Condition1PosN  \n              8728.3                8769.3               14374.2  \n      Condition1RRAe        Condition1RRAn        Condition1RRNe  \n            -17010.4                1912.3               -5316.8  \n      Condition1RRNn        BldgType2fmCon        BldgTypeDuplex  \n             -7621.5               -7069.6              -10076.6  \n       BldgTypeTwnhs        BldgTypeTwnhsE      HouseStyle1.5Unf  \n               224.3               -5175.8               -2092.3  \n    HouseStyle1Story      HouseStyle2.5Fin      HouseStyle2.5Unf  \n             -1089.7               -3104.8              -10756.9  \n    HouseStyle2Story      HouseStyleSFoyer        HouseStyleSLvl  \n             -3582.8               -5676.6                5868.4  \n      RoofStyleGable      RoofStyleGambrel          RoofStyleHip  \n             22778.0               32205.7               22379.8  \n    RoofStyleMansard         RoofStyleShed    Exterior2ndAsphShn  \n             31782.4              -12693.2                8698.9  \n  Exterior2ndBrk Cmn    Exterior2ndBrkFace     Exterior2ndCBlock  \n            -13085.7                6509.1              -10515.1  \n  Exterior2ndCmentBd    Exterior2ndHdBoard    Exterior2ndImStucc  \n            -13509.8               -7880.0                8937.6  \n  Exterior2ndMetalSd      Exterior2ndOther    Exterior2ndPlywood  \n             -4848.8              -24503.9              -11315.1  \n    Exterior2ndStone     Exterior2ndStucco    Exterior2ndVinylSd  \n              2820.9               -2828.8               -6773.2  \n  Exterior2ndWd Sdng    Exterior2ndWd Shng     MasVnrTypeBrkFace  \n             -4604.0               -6438.5               -2915.7  \n      MasVnrTypeNone       MasVnrTypeStone           ExterQualFa  \n              3404.3                5920.6              -22200.7  \n         ExterQualGd           ExterQualTA      FoundationCBlock  \n            -26780.4              -26186.8                3880.3  \n     FoundationPConc        FoundationSlab       FoundationStone  \n              5124.0               15183.5               -7072.1  \n      FoundationWood            BsmtQualFa            BsmtQualGd  \n            -19512.0               -6363.4              -16791.0  \n        BsmtQualNone            BsmtQualTA        BsmtExposureGd  \n             67355.3              -10675.6               21303.9  \n      BsmtExposureMn        BsmtExposureNo      BsmtExposureNone  \n               657.6               -3354.0                    NA  \n     BsmtFinType1BLQ       BsmtFinType1GLQ       BsmtFinType1LwQ  \n              2615.5                4475.6               -7516.4  \n    BsmtFinType1None       BsmtFinType1Rec       BsmtFinType1Unf  \n                  NA               -3008.0                4235.8  \n     BsmtFinType2BLQ       BsmtFinType2GLQ       BsmtFinType2LwQ  \n             -3564.5               -6017.0               -6473.4  \n    BsmtFinType2None       BsmtFinType2Rec       BsmtFinType2Unf  \n            -49468.2               -3144.7               -4273.5  \n         CentralAirY         KitchenQualFa         KitchenQualGd  \n               252.6              -18274.6              -23611.0  \n       KitchenQualTA      GarageTypeAttchd     GarageTypeBasment  \n            -23927.6               12493.7               14023.2  \n   GarageTypeBuiltIn     GarageTypeCarPort      GarageTypeDetchd  \n             13237.6                6700.0               15118.4  \n      GarageTypeNone      GarageFinishNone       GarageFinishRFn  \n             18488.0                    NA               -1249.1  \n     GarageFinishUnf           PavedDriveP           PavedDriveY  \n              -869.3                 966.1                7302.6  \n         SaleTypeCon         SaleTypeConLD         SaleTypeConLI  \n             18764.3                8110.5               -8940.6  \n       SaleTypeConLw           SaleTypeCWD           SaleTypeNew  \n              3613.7              -10734.1               25727.7  \n         SaleTypeOth            SaleTypeWD  SaleConditionAdjLand  \n             -1399.3               -5084.5               24759.9  \n SaleConditionAlloca   SaleConditionFamily   SaleConditionNormal  \n             17581.3               -1501.6                7056.7  \nSaleConditionPartial  \n            -11662.2  \n\nDegrees of Freedom: 1167 Total (i.e. Null);  997 Residual\nNull Deviance:      7.536e+12 \nResidual Deviance: 5.209e+11    AIC: 26920\n\nlnIMP = varImp(LNmodel)\nlnIMP$Names = row.names(lnIMP)\n\n\nlnIMP %&gt;% \n  top_n(10, Overall) %&gt;% \n  ggplot()+\n  geom_bar(mapping= aes(x = reorder(Names, Overall), y = Overall), stat = \"identity\")+ \n  coord_flip()+\n  labs(x = \"Predictors\", y = \"Importance\")"
  },
  {
    "objectID": "regression-prediction-project/regression-prediction-project.html#knn",
    "href": "regression-prediction-project/regression-prediction-project.html#knn",
    "title": "Processing and Modeling Code",
    "section": "KNN",
    "text": "KNN\n\nknnModel = train(Price~., data=train_data, \n                 method = \"knn\",\n                 tuneGrid = data.frame(k=1:20),\n                 trControl= ctrl)\n\n\nknnModel\n\nk-Nearest Neighbors \n\n1168 samples\n  61 predictor\n\nNo pre-processing\nResampling: Cross-Validated (10 fold) \nSummary of sample sizes: 1052, 1052, 1052, 1051, 1051, 1051, ... \nResampling results across tuning parameters:\n\n  k   RMSE      Rsquared   MAE     \n   1  46781.64  0.6711573  27268.78\n   2  41696.08  0.7350589  24052.30\n   3  38451.93  0.7774852  22562.19\n   4  37962.96  0.7880669  22343.66\n   5  36865.69  0.8064777  21801.35\n   6  36814.95  0.8111857  21577.57\n   7  36714.59  0.8142887  21463.51\n   8  36506.31  0.8192036  21294.28\n   9  36718.31  0.8195865  21215.76\n  10  36558.55  0.8223226  21078.64\n  11  36799.57  0.8224276  21189.94\n  12  36911.55  0.8225369  21153.40\n  13  36705.03  0.8273041  21071.58\n  14  36903.95  0.8275495  21175.58\n  15  37075.19  0.8267158  21254.68\n  16  37213.95  0.8281430  21310.37\n  17  37206.04  0.8298035  21304.47\n  18  37142.20  0.8319462  21323.46\n  19  37171.46  0.8326782  21360.47\n  20  37080.84  0.8339022  21364.39\n\nRMSE was used to select the optimal model using the smallest value.\nThe final value used for the model was k = 8.\n\nKNNIMP = varImp(knnModel, , scale = FALSE)\n\nKNNIMPGraph = KNNIMP$importance\nKNNIMPGraph$Names = row.names(KNNIMPGraph)\n\nKNNIMPGraph %&gt;% \n  top_n(10, Overall) %&gt;% \n  ggplot()+\n  geom_bar(mapping= aes(x = reorder(Names, Overall), y = Overall), stat = \"identity\")+ \n  coord_flip()+\n  labs(x = \"Predictors\", y = \"Importance\")"
  },
  {
    "objectID": "regression-prediction-project/regression-prediction-project.html#randomforest",
    "href": "regression-prediction-project/regression-prediction-project.html#randomforest",
    "title": "Processing and Modeling Code",
    "section": "RandomForest",
    "text": "RandomForest\n\nset.seed(222)\n\nrfmodel = randomForest(Price~., data = train_data,\n                importance = TRUE,\n                trControl = ctrl)\n\nrfmodel\n\n\nCall:\n randomForest(formula = Price ~ ., data = train_data, importance = TRUE,      trControl = ctrl) \n               Type of random forest: regression\n                     Number of trees: 500\nNo. of variables tried at each split: 20\n\n          Mean of squared residuals: 673470586\n                    % Var explained: 89.56\n\nrfIMP = varImp(rfmodel)\n\nrfIMP$Names = row.names(rfIMP)\n\nrfIMP %&gt;% \n  top_n(10, Overall) %&gt;% \n  ggplot()+\n  geom_bar(mapping= aes(x = reorder(Names, Overall), y = Overall), stat = \"identity\")+ \n  coord_flip() +\n  labs(x = \"Predictors\", y = \"Importance\")"
  },
  {
    "objectID": "regression-prediction-project/3. Generating Manuscript - Copy.html",
    "href": "regression-prediction-project/3. Generating Manuscript - Copy.html",
    "title": "Predicting Housing Prices with Machine Learning Models",
    "section": "",
    "text": "There are many different variables that affect housing prices which can vary drastically. In order to make the best decisions about housing prices, it is useful to be able to predict the sales price of a house given a set of descriptors. This project will seek to identify a model for predicting housing prices using a dataset provided by Kaggle. This will be achieved by comparing the accuracy and predictive power of different machine learning models."
  },
  {
    "objectID": "regression-prediction-project/3. Generating Manuscript - Copy.html#general-background-information",
    "href": "regression-prediction-project/3. Generating Manuscript - Copy.html#general-background-information",
    "title": "Predicting Housing Prices with Machine Learning Models",
    "section": "General Background Information",
    "text": "General Background Information\nMachine learning models provide a massive opportunity for real estate investors to identify housing prices by using a set of predictors. This project will utilize Regression Prediction. Unlike Classification Prediction, which attempts to predict a classifier based on given predictors, Regression Prediction seeks to identify a continuous value (e.g., x amount of dollars, x amount of cells). In our case, our response variable is a continuous variable, the sales price of a house."
  },
  {
    "objectID": "regression-prediction-project/3. Generating Manuscript - Copy.html#description-of-data",
    "href": "regression-prediction-project/3. Generating Manuscript - Copy.html#description-of-data",
    "title": "Predicting Housing Prices with Machine Learning Models",
    "section": "Description of data",
    "text": "Description of data\nThere are 1,460 records, 81 columns/variables. There is an ID column, as well as a response value, meaning there are 79 predictors, which include descriptors of the house in question. These include both categorical predictors as well as numerical predictors. Areas described by the predictors include, Basements, Garages, Bathrooms, Location, Age, and many, many others. Additionally, as mentioned, the response variable is the sales price of the house."
  },
  {
    "objectID": "regression-prediction-project/3. Generating Manuscript - Copy.html#questionshypotheses-to-be-addressed",
    "href": "regression-prediction-project/3. Generating Manuscript - Copy.html#questionshypotheses-to-be-addressed",
    "title": "Predicting Housing Prices with Machine Learning Models",
    "section": "Questions/Hypotheses to be addressed",
    "text": "Questions/Hypotheses to be addressed\nThe research question I plan to address with my analysis is: which features are the best predictors of housing prices? Additionally, the desired output of this analysis is a machine learning model which allows real estate investors or other interested stakeholders to better make decisions regarding future real estate purchases."
  },
  {
    "objectID": "regression-prediction-project/3. Generating Manuscript - Copy.html#data-import-and-cleaning",
    "href": "regression-prediction-project/3. Generating Manuscript - Copy.html#data-import-and-cleaning",
    "title": "Predicting Housing Prices with Machine Learning Models",
    "section": "Data import and cleaning",
    "text": "Data import and cleaning\n\nReading in the Data\n\n\n\n\nTable 1: Data Snapshot of first 7 Variables\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nId\nMSSubClass\nMSZoning\nLotFrontage\nLotArea\nStreet\nAlley\nLotShape\n\n\n\n\n1\n60\nRL\n65\n8450\nPave\nNA\nReg\n\n\n2\n20\nRL\n80\n9600\nPave\nNA\nReg\n\n\n3\n60\nRL\n68\n11250\nPave\nNA\nIR1\n\n\n4\n70\nRL\n60\n9550\nPave\nNA\nIR1\n\n\n5\n60\nRL\n84\n14260\nPave\nNA\nIR1\n\n\n6\n50\nRL\n85\n14115\nPave\nNA\nIR1\n\n\n\n\n\n\n\n\n\n\nCleaning Data\nThere were several different data cleaning methods that were experimented with in order to find the best way to prepare the data for modeling. First I removed all variables that had more than 80% NA values. Then for those categorical predictors with some missing values, I replaced those with a “None” value. Next, I converted all the categorical variables to factors (they were initially read in as character values). Once the variables were recognized as factors, I could evaluate which predictors were victims of class imbalance. I removed the predictors with around 80% of observations in one class of a variable. Finally, I replaced the NA values in the numeric predictors with the median value of that variable. When I was finished with the data cleaning portion of this project, I had reduced the data set down from 79 to 63 predictors, 26 categorical and 37 numeric variables.\n\n\nBackground on Chosen Models\nI chose to utilize the following models: the K-Nearest Neighbors model (KNN), Linear Regression model, and RandomForest models to determine the best prediction model for this project.\nKNN:\nThe KNN model predicts based on the closest samples or neighbors. Essentially, to predict a value, the data is broken up into samples/neighbors, and then the nearest samples (using Euclidean distance, typically)to the value of interest are examined to either classify or find a mean between the chosen samples. K represents the number of neighbors to utilize to come to this conclusion (Kuhn).\nLinear Regression:\nLinear Regression focuses on minimizing the SSE (Sum of squared errors) between the predicted and original response value.\nRandomForest:\nRandomForest models take advantage of decision trees. If we think about the scenario in our project (the price of a house), we could imagine a decision tree starting with, “does having two bathrooms cause a house to be priced at over 400K?” This would be our first node to split the data on. We could continue asking things like, “Are houses with larger basements priced at more or less than 400K?” Questions like these would represent more decision nodes for us to split the data on, getting us closer to the most accurate prediction model. The RandomForest algorithm uses different methods to create several uncorrelated “forests” of decision trees (IBM).\n\n\nBackground Regarding Performance Metrics\nR-Squared (R^2):\nThe R^2 value explains what percent (proportion) of the total variance in the data is explained by the model.\nRMSE (Root Mean Squared Error):\nRepresents the average size of the difference between real values and the predicted values, then\nMAE (Mean Absolute Error):\nSimilar to RMSE, but the absolute value of the difference between real and predicted is used."
  },
  {
    "objectID": "regression-prediction-project/3. Generating Manuscript - Copy.html#basic-statistical-analysis",
    "href": "regression-prediction-project/3. Generating Manuscript - Copy.html#basic-statistical-analysis",
    "title": "Predicting Housing Prices with Machine Learning Models",
    "section": "Basic statistical analysis",
    "text": "Basic statistical analysis\nBefore I began with the machine learning analysis, I sought to test the variables of interest in their significance of affecting the response variable.\nBelow are the results of the linear model fit with all variables as predictors\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n4.604292e+05\n1.413535e+06\n0.3257288\n0.7446773\n\n\nMSSubClass\n-1.820243e+02\n2.767475e+01\n-6.5772690\n0.0000000\n\n\nLotFrontage\n-5.634362e+01\n5.176798e+01\n-1.0883875\n0.2766081\n\n\nLotArea\n4.304975e-01\n1.021082e-01\n4.2160918\n0.0000264\n\n\nOverallQual\n1.733111e+04\n1.187394e+03\n14.5959170\n0.0000000\n\n\nOverallCond\n4.674676e+03\n1.032513e+03\n4.5274745\n0.0000065\n\n\nYearBuilt\n2.694912e+02\n6.741315e+01\n3.9976056\n0.0000673\n\n\nYearRemodAdd\n1.344831e+02\n6.858803e+01\n1.9607366\n0.0501043\n\n\nMasVnrArea\n3.134596e+01\n5.932820e+00\n5.2834831\n0.0000001\n\n\nBsmtFinSF1\n1.921300e+01\n4.666827e+00\n4.1169307\n0.0000406\n\n\nBsmtFinSF2\n8.273997e+00\n7.057001e+00\n1.1724524\n0.2412114\n\n\nBsmtUnfSF\n9.297103e+00\n4.193927e+00\n2.2168013\n0.0267940\n\n\nTotalBsmtSF\nNA\nNA\nNA\nNA\n\n\nX1stFlrSF\n4.901342e+01\n5.809589e+00\n8.4366426\n0.0000000\n\n\nX2ndFlrSF\n4.902978e+01\n4.983306e+00\n9.8388062\n0.0000000\n\n\nLowQualFinSF\n2.534285e+01\n1.996942e+01\n1.2690830\n0.2046187\n\n\nGrLivArea\nNA\nNA\nNA\nNA\n\n\nBsmtFullBath\n9.369818e+03\n2.611716e+03\n3.5876105\n0.0003450\n\n\nBsmtHalfBath\n2.051814e+03\n4.091012e+03\n0.5015420\n0.6160672\n\n\nFullBath\n3.439741e+03\n2.836717e+03\n1.2125780\n0.2254922\n\n\nHalfBath\n-1.872747e+03\n2.662817e+03\n-0.7032955\n0.4819865\n\n\nBedroomAbvGr\n-1.008636e+04\n1.701690e+03\n-5.9272618\n0.0000000\n\n\nKitchenAbvGr\n-1.215840e+04\n5.211646e+03\n-2.3329299\n0.0197904\n\n\nTotRmsAbvGrd\n5.044090e+03\n1.236951e+03\n4.0778400\n0.0000480\n\n\nFireplaces\n3.984870e+03\n1.776709e+03\n2.2428376\n0.0250605\n\n\nGarageYrBlt\n1.268380e+02\n6.897832e+01\n1.8388100\n0.0661511\n\n\nGarageCars\n1.129285e+04\n2.876386e+03\n3.9260550\n0.0000905\n\n\nGarageArea\n-4.382456e+00\n9.941118e+00\n-0.4408414\n0.6593947\n\n\nWoodDeckSF\n2.388005e+01\n8.011714e+00\n2.9806414\n0.0029252\n\n\nOpenPorchSF\n-2.872111e+00\n1.518148e+01\n-0.1891852\n0.8499746\n\n\nEnclosedPorch\n1.193628e+01\n1.686386e+01\n0.7078021\n0.4791839\n\n\nX3SsnPorch\n2.038201e+01\n3.139056e+01\n0.6493039\n0.5162466\n\n\nScreenPorch\n5.596076e+01\n1.719053e+01\n3.2553247\n0.0011592\n\n\nPoolArea\n-2.908211e+01\n2.380658e+01\n-1.2215996\n0.2220611\n\n\nMiscVal\n-7.313279e-01\n1.854773e+00\n-0.3942951\n0.6934221\n\n\nMoSold\n-4.856806e+01\n3.447724e+02\n-0.1408699\n0.8879926\n\n\nYrSold\n-7.796538e+02\n7.024882e+02\n-1.1098461\n0.2672526\n\n\n\n\n\nIn both the numeric and categorical linear regression tests, not all variables were significant. I decided to keep all variables in to see if those variables had any affect on the final results."
  },
  {
    "objectID": "regression-prediction-project/3. Generating Manuscript - Copy.html#machine-learning-modeling",
    "href": "regression-prediction-project/3. Generating Manuscript - Copy.html#machine-learning-modeling",
    "title": "Predicting Housing Prices with Machine Learning Models",
    "section": "Machine Learning Modeling",
    "text": "Machine Learning Modeling\n\nModel Performance Metrics\nTable 2 displays the relevant metrics for the regression models runs.\n\n\n\n\nTable 2: Performance Metrics for Machine Learning Models\n\n\n\n\n\n\n\nLNM\nKNN\nRFM\n\n\n\n\nRMSE\n54819.808\n45321.318\n37742.731\n\n\nRsquared\n0.612\n0.646\n0.754\n\n\nMAE\n20989.778\n24633.264\n19650.826\n\n\n\n\n\n\n\n\nThe RandomForest model performed the best of the three models, outputting the best results by a fairly considerable margin, in all three categories. The KNN model performed the second best of the three, but was closer to the Linear Model’s results than to the RandomForest model.\nFigure 1 shows the distribution of predicted values for each model, overlayed with the real observed values (OBS).\n\n\n\n\n\n\n\n\nFigure 1: Predicted Values Compared to Observed Values\n\n\n\n\n\n\nFigure 2 and Figure 3 provide additional views comparing RMSE and MAE across the different models\n\n\n\n\n\n\n\n\nFigure 2: Root Mean Squared Error Barplot\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 3: Mean Absolute Error Barplot\n\n\n\n\n\n\n\n\nVariables of Importance\nFinally, we can examine which predictors specifically improved prediction the most. That is, which had the greatest weight on the final result.\nFigure 4 shows the Predictors that had the most impact on the Linear Regression Model\n\n\n\n\n\n\n\n\nFigure 4: Linear Model Variables of Importance\n\n\n\n\n\nX2ndFlrSF indicates the variable Second floor square feet (X is added prefix to align with R naming conventions). BsmtFinSF1 represents the variable for Basement finished area square feet. BsmtUnfSF represents the variable for Basement unfinished area square feet.\n\nFigure 5 shows the Predictors that had the most impact on the KNN Model\n\n\n\n\n\n\n\n\nFigure 5: KNN Model Variables of Importance\n\n\n\n\n\nOverallQual is a categorical variable that rates the overall material and finish of the house in terms of “Excellent”, “Poor”, etc. GrLivArea represents the total square feet of the above ground living area. TotalBsmtSF is the total basement square footage.\n\nFigure 6 shows the Predictors that had the most impact on the RF Model\n\n\n\n\n\n\n\n\nFigure 6: RF Variables of Importance\n\n\n\n\n\nWe can observe similar values to those highlighted by the KNN model, with the Neighborhood value appearing higher for the RandomForest model."
  },
  {
    "objectID": "regression-prediction-project/3. Generating Manuscript - Copy.html#summary-and-interpretation",
    "href": "regression-prediction-project/3. Generating Manuscript - Copy.html#summary-and-interpretation",
    "title": "Predicting Housing Prices with Machine Learning Models",
    "section": "Summary and Interpretation",
    "text": "Summary and Interpretation\nThe results generated in this project indicate that there is some quality predictive power attributed to the chosen machine learning models. While the performance metrics were not quite as impressive as would be desired, given the relatively small size of the training data, these results are substantial. In addition to these findings, the models were able to produce which variables provided the most weight towards the prediction power. The Overall Quality and General Living Area Square Footage were the two predictors that were listed in all three models. Total square footage for Basements was also a variable common in both the RandomForest and KNN models."
  },
  {
    "objectID": "regression-prediction-project/3. Generating Manuscript - Copy.html#conclusions",
    "href": "regression-prediction-project/3. Generating Manuscript - Copy.html#conclusions",
    "title": "Predicting Housing Prices with Machine Learning Models",
    "section": "Conclusions",
    "text": "Conclusions\nI attempted to develop different regression models that accurately predicted the prices of houses with minimal error. The three models that I ran all showed substantial predictive power for determining the correct sales price of a house, however, the performance metrics showed some room for future improvement.\nThe other goal of this project was to identify which variables could best aid in identifying correct housing prices. While there was some variance among the predictors in terms of importance, some predictors clearly stood out above the rest. This information could be used as a items of focus in future analysis of housing prices as well as features of importance for real estate firms to prioritize.\nFurther research would include utilizing different datasets to determine if these results are reproducible. Specifically, using a larger dataset with more observations could provide additional insights as well as improve predictability. Using housing data for a different general location could also be useful in determining whether the results presented here are indicative of most areas or if they are subject to localized bias."
  },
  {
    "objectID": "regression-prediction-project/regression-prediction-project.html#general-background-information",
    "href": "regression-prediction-project/regression-prediction-project.html#general-background-information",
    "title": "Predicting Housing Prices with Machine Learning Models",
    "section": "General Background Information",
    "text": "General Background Information\nMachine learning models provide a massive opportunity for real estate investors to identify housing prices by using a set of predictors. This project will utilize Regression Prediction. Unlike Classification Prediction, which attempts to predict a classifier based on given predictors, Regression Prediction seeks to identify a continuous value (e.g., x amount of dollars, x amount of cells). In our case, our response variable is a continuous variable, the sales price of a house."
  },
  {
    "objectID": "regression-prediction-project/regression-prediction-project.html#description-of-data",
    "href": "regression-prediction-project/regression-prediction-project.html#description-of-data",
    "title": "Predicting Housing Prices with Machine Learning Models",
    "section": "Description of data",
    "text": "Description of data\nThere are 1,460 records, 81 columns/variables. There is an ID column, as well as a response value, meaning there are 79 predictors, which include descriptors of the house in question. These include both categorical predictors as well as numerical predictors. Areas described by the predictors include, Basements, Garages, Bathrooms, Location, Age, and many, many others. Additionally, as mentioned, the response variable is the sales price of the house."
  },
  {
    "objectID": "regression-prediction-project/regression-prediction-project.html#questionshypotheses-to-be-addressed",
    "href": "regression-prediction-project/regression-prediction-project.html#questionshypotheses-to-be-addressed",
    "title": "Predicting Housing Prices with Machine Learning Models",
    "section": "Questions/Hypotheses to be addressed",
    "text": "Questions/Hypotheses to be addressed\nThe research question I plan to address with my analysis is: which features are the best predictors of housing prices? Additionally, the desired output of this analysis is a machine learning model which allows real estate investors or other interested stakeholders to better make decisions regarding future real estate purchases."
  },
  {
    "objectID": "regression-prediction-project/regression-prediction-project.html#data-import-and-cleaning",
    "href": "regression-prediction-project/regression-prediction-project.html#data-import-and-cleaning",
    "title": "Predicting Housing Prices with Machine Learning Models",
    "section": "Data import and cleaning",
    "text": "Data import and cleaning\n\nReading in the Data\n\n\n\n\nTable 1: Data Snapshot of first 7 Variables\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nId\nMSSubClass\nMSZoning\nLotFrontage\nLotArea\nStreet\nAlley\nLotShape\n\n\n\n\n1\n60\nRL\n65\n8450\nPave\nNA\nReg\n\n\n2\n20\nRL\n80\n9600\nPave\nNA\nReg\n\n\n3\n60\nRL\n68\n11250\nPave\nNA\nIR1\n\n\n4\n70\nRL\n60\n9550\nPave\nNA\nIR1\n\n\n5\n60\nRL\n84\n14260\nPave\nNA\nIR1\n\n\n6\n50\nRL\n85\n14115\nPave\nNA\nIR1\n\n\n\n\n\n\n\n\n\n\nCleaning Data\nThere were several different data cleaning methods that were experimented with in order to find the best way to prepare the data for modeling. First I removed all variables that had more than 80% NA values. Then for those categorical predictors with some missing values, I replaced those with a “None” value. Next, I converted all the categorical variables to factors (they were initially read in as character values). Once the variables were recognized as factors, I could evaluate which predictors were victims of class imbalance. I removed the predictors with around 80% of observations in one class of a variable. Finally, I replaced the NA values in the numeric predictors with the median value of that variable. When I was finished with the data cleaning portion of this project, I had reduced the data set down from 79 to 63 predictors, 26 categorical and 37 numeric variables.\n\n\nBackground on Chosen Models\nI chose to utilize the following models: the K-Nearest Neighbors model (KNN), Linear Regression model, and RandomForest models to determine the best prediction model for this project.\nKNN:\nThe KNN model predicts based on the closest samples or neighbors. Essentially, to predict a value, the data is broken up into samples/neighbors, and then the nearest samples (using Euclidean distance, typically)to the value of interest are examined to either classify or find a mean between the chosen samples. K represents the number of neighbors to utilize to come to this conclusion (Kuhn).\nLinear Regression:\nLinear Regression focuses on minimizing the SSE (Sum of squared errors) between the predicted and original response value.\nRandomForest:\nRandomForest models take advantage of decision trees. If we think about the scenario in our project (the price of a house), we could imagine a decision tree starting with, “does having two bathrooms cause a house to be priced at over 400K?” This would be our first node to split the data on. We could continue asking things like, “Are houses with larger basements priced at more or less than 400K?” Questions like these would represent more decision nodes for us to split the data on, getting us closer to the most accurate prediction model. The RandomForest algorithm uses different methods to create several uncorrelated “forests” of decision trees (IBM).\n\n\nBackground Regarding Performance Metrics\nR-Squared (R^2):\nThe R^2 value explains what percent (proportion) of the total variance in the data is explained by the model.\nRMSE (Root Mean Squared Error):\nRepresents the average size of the difference between real values and the predicted values, then\nMAE (Mean Absolute Error):\nSimilar to RMSE, but the absolute value of the difference between real and predicted is used."
  },
  {
    "objectID": "regression-prediction-project/regression-prediction-project.html#basic-statistical-analysis",
    "href": "regression-prediction-project/regression-prediction-project.html#basic-statistical-analysis",
    "title": "Predicting Housing Prices with Machine Learning Models",
    "section": "Basic statistical analysis",
    "text": "Basic statistical analysis\nBefore I began with the machine learning analysis, I sought to test the variables of interest in their significance of affecting the response variable.\nBelow are the results of the linear model fit with all variables as predictors\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n4.604292e+05\n1.413535e+06\n0.3257288\n0.7446773\n\n\nMSSubClass\n-1.820243e+02\n2.767475e+01\n-6.5772690\n0.0000000\n\n\nLotFrontage\n-5.634362e+01\n5.176798e+01\n-1.0883875\n0.2766081\n\n\nLotArea\n4.304975e-01\n1.021082e-01\n4.2160918\n0.0000264\n\n\nOverallQual\n1.733111e+04\n1.187394e+03\n14.5959170\n0.0000000\n\n\nOverallCond\n4.674676e+03\n1.032513e+03\n4.5274745\n0.0000065\n\n\nYearBuilt\n2.694912e+02\n6.741315e+01\n3.9976056\n0.0000673\n\n\nYearRemodAdd\n1.344831e+02\n6.858803e+01\n1.9607366\n0.0501043\n\n\nMasVnrArea\n3.134596e+01\n5.932820e+00\n5.2834831\n0.0000001\n\n\nBsmtFinSF1\n1.921300e+01\n4.666827e+00\n4.1169307\n0.0000406\n\n\nBsmtFinSF2\n8.273997e+00\n7.057001e+00\n1.1724524\n0.2412114\n\n\nBsmtUnfSF\n9.297103e+00\n4.193927e+00\n2.2168013\n0.0267940\n\n\nTotalBsmtSF\nNA\nNA\nNA\nNA\n\n\nX1stFlrSF\n4.901342e+01\n5.809589e+00\n8.4366426\n0.0000000\n\n\nX2ndFlrSF\n4.902978e+01\n4.983306e+00\n9.8388062\n0.0000000\n\n\nLowQualFinSF\n2.534285e+01\n1.996942e+01\n1.2690830\n0.2046187\n\n\nGrLivArea\nNA\nNA\nNA\nNA\n\n\nBsmtFullBath\n9.369818e+03\n2.611716e+03\n3.5876105\n0.0003450\n\n\nBsmtHalfBath\n2.051814e+03\n4.091012e+03\n0.5015420\n0.6160672\n\n\nFullBath\n3.439741e+03\n2.836717e+03\n1.2125780\n0.2254922\n\n\nHalfBath\n-1.872747e+03\n2.662817e+03\n-0.7032955\n0.4819865\n\n\nBedroomAbvGr\n-1.008636e+04\n1.701690e+03\n-5.9272618\n0.0000000\n\n\nKitchenAbvGr\n-1.215840e+04\n5.211646e+03\n-2.3329299\n0.0197904\n\n\nTotRmsAbvGrd\n5.044090e+03\n1.236951e+03\n4.0778400\n0.0000480\n\n\nFireplaces\n3.984870e+03\n1.776709e+03\n2.2428376\n0.0250605\n\n\nGarageYrBlt\n1.268380e+02\n6.897832e+01\n1.8388100\n0.0661511\n\n\nGarageCars\n1.129285e+04\n2.876386e+03\n3.9260550\n0.0000905\n\n\nGarageArea\n-4.382456e+00\n9.941118e+00\n-0.4408414\n0.6593947\n\n\nWoodDeckSF\n2.388005e+01\n8.011714e+00\n2.9806414\n0.0029252\n\n\nOpenPorchSF\n-2.872111e+00\n1.518148e+01\n-0.1891852\n0.8499746\n\n\nEnclosedPorch\n1.193628e+01\n1.686386e+01\n0.7078021\n0.4791839\n\n\nX3SsnPorch\n2.038201e+01\n3.139056e+01\n0.6493039\n0.5162466\n\n\nScreenPorch\n5.596076e+01\n1.719053e+01\n3.2553247\n0.0011592\n\n\nPoolArea\n-2.908211e+01\n2.380658e+01\n-1.2215996\n0.2220611\n\n\nMiscVal\n-7.313279e-01\n1.854773e+00\n-0.3942951\n0.6934221\n\n\nMoSold\n-4.856806e+01\n3.447724e+02\n-0.1408699\n0.8879926\n\n\nYrSold\n-7.796538e+02\n7.024882e+02\n-1.1098461\n0.2672526\n\n\n\n\n\nIn both the numeric and categorical linear regression tests, not all variables were significant. I decided to keep all variables in to see if those variables had any affect on the final results."
  },
  {
    "objectID": "regression-prediction-project/regression-prediction-project.html#machine-learning-modeling",
    "href": "regression-prediction-project/regression-prediction-project.html#machine-learning-modeling",
    "title": "Predicting Housing Prices with Machine Learning Models",
    "section": "Machine Learning Modeling",
    "text": "Machine Learning Modeling\n\nModel Performance Metrics\nTable 2 displays the relevant metrics for the regression models runs.\n\n\n\n\nTable 2: Performance Metrics for Machine Learning Models\n\n\n\n\n\n\n\nLNM\nKNN\nRFM\n\n\n\n\nRMSE\n54819.808\n45321.318\n37742.731\n\n\nRsquared\n0.612\n0.646\n0.754\n\n\nMAE\n20989.778\n24633.264\n19650.826\n\n\n\n\n\n\n\n\nThe RandomForest model performed the best of the three models, outputting the best results by a fairly considerable margin, in all three categories. The KNN model performed the second best of the three, but was closer to the Linear Model’s results than to the RandomForest model.\nFigure 1 shows the distribution of predicted values for each model, overlayed with the real observed values (OBS).\n\n\n\n\n\n\n\n\nFigure 1: Predicted Values Compared to Observed Values\n\n\n\n\n\n\nFigure 2 and Figure 3 provide additional views comparing RMSE and MAE across the different models\n\n\n\n\n\n\n\n\nFigure 2: Root Mean Squared Error Barplot\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 3: Mean Absolute Error Barplot\n\n\n\n\n\n\n\n\nVariables of Importance\nFinally, we can examine which predictors specifically improved prediction the most. That is, which had the greatest weight on the final result.\nFigure 4 shows the Predictors that had the most impact on the Linear Regression Model\n\n\n\n\n\n\n\n\nFigure 4: Linear Model Variables of Importance\n\n\n\n\n\nX2ndFlrSF indicates the variable Second floor square feet (X is added prefix to align with R naming conventions). BsmtFinSF1 represents the variable for Basement finished area square feet. BsmtUnfSF represents the variable for Basement unfinished area square feet.\n\nFigure 5 shows the Predictors that had the most impact on the KNN Model\n\n\n\n\n\n\n\n\nFigure 5: KNN Model Variables of Importance\n\n\n\n\n\nOverallQual is a categorical variable that rates the overall material and finish of the house in terms of “Excellent”, “Poor”, etc. GrLivArea represents the total square feet of the above ground living area. TotalBsmtSF is the total basement square footage.\n\nFigure 6 shows the Predictors that had the most impact on the RF Model\n\n\n\n\n\n\n\n\nFigure 6: RF Variables of Importance\n\n\n\n\n\nWe can observe similar values to those highlighted by the KNN model, with the Neighborhood value appearing higher for the RandomForest model."
  },
  {
    "objectID": "regression-prediction-project/regression-prediction-project.html#summary-and-interpretation",
    "href": "regression-prediction-project/regression-prediction-project.html#summary-and-interpretation",
    "title": "Predicting Housing Prices with Machine Learning Models",
    "section": "Summary and Interpretation",
    "text": "Summary and Interpretation\nThe results generated in this project indicate that there is some quality predictive power attributed to the chosen machine learning models. While the performance metrics were not quite as impressive as would be desired, given the relatively small size of the training data, these results are substantial. In addition to these findings, the models were able to produce which variables provided the most weight towards the prediction power. The Overall Quality and General Living Area Square Footage were the two predictors that were listed in all three models. Total square footage for Basements was also a variable common in both the RandomForest and KNN models."
  },
  {
    "objectID": "regression-prediction-project/regression-prediction-project.html#conclusions",
    "href": "regression-prediction-project/regression-prediction-project.html#conclusions",
    "title": "Predicting Housing Prices with Machine Learning Models",
    "section": "Conclusions",
    "text": "Conclusions\nI attempted to develop different regression models that accurately predicted the prices of houses with minimal error. The three models that I ran all showed substantial predictive power for determining the correct sales price of a house, however, the performance metrics showed some room for future improvement.\nThe other goal of this project was to identify which variables could best aid in identifying correct housing prices. While there was some variance among the predictors in terms of importance, some predictors clearly stood out above the rest. This information could be used as a items of focus in future analysis of housing prices as well as features of importance for real estate firms to prioritize.\nFurther research would include utilizing different datasets to determine if these results are reproducible. Specifically, using a larger dataset with more observations could provide additional insights as well as improve predictability. Using housing data for a different general location could also be useful in determining whether the results presented here are indicative of most areas or if they are subject to localized bias."
  },
  {
    "objectID": "data-visualization-project/data-visualization-project.html",
    "href": "data-visualization-project/data-visualization-project.html",
    "title": "NBA Data Visualization Project",
    "section": "",
    "text": "Myself and a team performed data analysis on several NBA datasets to identify key trends and relationships between different factors that lead to winning.\nThis was during my first semester of my Graduate Studies at UTSA in the Fall of 2023.\nMy largest contribution was in regard to identifying the right data sources, extracting the key variables, aggregating the key tables into single data files, and finally, cleaning the data into usable formats with R."
  },
  {
    "objectID": "data-visualization-project/data-visualization-project.html#conference-differences",
    "href": "data-visualization-project/data-visualization-project.html#conference-differences",
    "title": "NBA Data Visualization Project",
    "section": "Conference Differences",
    "text": "Conference Differences\n\n\n\n\n\n\n\n\n\nFrom 2014 to 2021, the Western conference had more wins than the Eastern conference.\nIn 2022 the East ended the season with 2 more wins than the West and widened this gap in the following year to 22 more wins.\nTwo seasons may not indicate a true pattern, but the disruption of the West’s dominance is noteworthy.\nTeams from the West used to have more wins than losses. Recent years have seen that shift somewhat, with some of the top teams coming from the East\nThe difference between Wins and Losses among the top teams has shrunk over time, potentially due to a more competitive landscape. This also appears to have caused the bulk of the losses to be shared by a few teams.\nBoth points have been attributed by some to the decline in two major Dynasties from the West, San Antonio and Los Angeles.\nUltimately, the distinction between East and West is less meaningful than it’s been in the past."
  },
  {
    "objectID": "data-visualization-project/data-visualization-project.html#offense-vs-defense",
    "href": "data-visualization-project/data-visualization-project.html#offense-vs-defense",
    "title": "NBA Data Visualization Project",
    "section": "Offense vs Defense",
    "text": "Offense vs Defense\n\n\n\n\n\n\n\n\n\nAverage Defensive and Offensive points per team for the past 10 seasons. Derived from average points allowed and scored, respectively.\n\nDefensive and Offensive metrics both lead to higher win percentage, with offense being more closely correlated than defense."
  },
  {
    "objectID": "data-visualization-project/data-visualization-project.html#shooting",
    "href": "data-visualization-project/data-visualization-project.html#shooting",
    "title": "NBA Data Visualization Project",
    "section": "Shooting",
    "text": "Shooting\n\n\n\n\n\n\n\n\n\nSince 2011 the NBA has seen dramatic shifts in shooting attempt trends:\n166% increase in Above Break 3-points\n48% less in Mid-Range 2-points\n~2x Right Corner 3-points\nSince 2017 players had decreased by 78% in attempts in the Restricted Access attempts\nIn 2022 3-point attempts accounted for 50% of all shots"
  },
  {
    "objectID": "data-visualization-project/data-visualization-project.html#playerposition-stats",
    "href": "data-visualization-project/data-visualization-project.html#playerposition-stats",
    "title": "NBA Data Visualization Project",
    "section": "Player/Position Stats",
    "text": "Player/Position Stats"
  },
  {
    "objectID": "data-visualization-project/data-visualization-project.html#effective-selection",
    "href": "data-visualization-project/data-visualization-project.html#effective-selection",
    "title": "NBA Data Visualization Project",
    "section": "Effective Selection",
    "text": "Effective Selection"
  },
  {
    "objectID": "data-analysis-public-eduction-funding/data-analysis-public-education-funding.html",
    "href": "data-analysis-public-eduction-funding/data-analysis-public-education-funding.html",
    "title": "Data Analysis of Public Education Funding",
    "section": "",
    "text": "Introduction\nMyself and two others competed in the 2023 UTSA Rowdy Datathon competition.\nWe were tasked with analyzing public school data to identify what areas of focus should be highlighted in order to increase educational attainment. To accomplish this, we performed lengthy data cleaning, and exploratory data analysis using SQL and R on four different datasets.\nWe decided to limit most of our analysis to Texas in order to provide more accurate conclusions.\nWe then identified factors/predictors that provided a strong correlation to achieving educational attainment. Additionally, we uncovered many unique observations and trends.\nUpon completion of the Datathon, we presented to a panel of judges, resulting in winning 2nd Place in our category\n\n\nDatasets Utilized and Tools\nWe used SQL, Excel, Tableau, and R running on Rstudio.\nOur Data came from:\nCivil Rights Data Collection\nSchool District Geographic Relationship\nSmall Area Income and Poverty Estimates\nSchool Location and Geo Assignment\n\n\n\nResults\nOur first analysis was regarding the number of Students per School District vs. the number of students in poverty for all school districts in the US.\n\n\n\n\n\n\n\n\n\nSecondly we sought to identify key socioeconomic factors.\n\n\n\n\n\n\n\n\n\nThis view shows the number of SAT test takers per LEA (school district), with blue indicating whether a LEA is listed as Title 1 (low income).\n\n\n\n\n\n\n\n\n\nWhen we compare the results in Texas to a nearby state (Oklahoma), we see that the percent of low income districts in Texas is much lower. Obviously, the number of low income districts is greater in Texas due to it’s massize state size.\n\nFederal Funding vs SAT/ACT test takers\n\n\n\n\n\n\n\n\n\nThis view shows that schools that receive more federal funding are correlated with the number of SAT/ACT test takers that come from that district.\n\n\nLEA districts by funding sources\n\n\n\n\n\n\n\n\n\n\n\n\nKey Takeaways\nMy biggest lesson learned was the importance of data cleaning. This ate up most of our time in the competition. First I hit a wall with one of the tools we were using and then, once I switched tools, I realized that there were datatype issues that needed to be sorted out. On top of that, we needed to aggregate all the data which was a task in and of itself. Thankfully, a handful of hours before time was up, I created a R Script that would clean all the data, aggregate it, and then generate it in a usable format.\n\n\nFuture Work\nWe narrowed our future research goals to:\n\nResearch SAT scores across differet Race and Ethnicity groups.\n\nCompare advanced math, AP scores, etc. to see if the relationships we discovered were consistent.\n\nIdentify which states are most effective at tackling the problems we discovered and assess what we learn from their strategies.\n\n\n\nFinal Result"
  },
  {
    "objectID": "market-segmentation-project/market-segmentation-project.html",
    "href": "market-segmentation-project/market-segmentation-project.html",
    "title": "Market Segmentation Project",
    "section": "",
    "text": "To view the presentation of this project in video form, please click below."
  },
  {
    "objectID": "market-segmentation-project/market-segmentation-project.html#identifying-variables",
    "href": "market-segmentation-project/market-segmentation-project.html#identifying-variables",
    "title": "Market Segmentation Project",
    "section": "Identifying Variables",
    "text": "Identifying Variables\nMy Target variable was Gatorade. More specifically, the question labeled, “Gatorade - ‘Do you drink it?’”\n\nSingle Driver Variables are what we will initially use to build out or define our clusters. I primarily used psychographic or sentiment variables.\n\nMy Single Driver Variables were:\n“I’m very happy with my life as it is”\n“I often snack between meals”\n“I often go on long car rides for vacation”\n\nAbstract Constructs or Factors are different ways to break the data into groups. We want to measure how much each person relates to two or more concepts, ideas, or sentiments.\n\nI had two Abstract Constructs.\n\nAbstract Construct 1.\n\nIs our consumer health conscious?\nThis construct was based on the answers to the following questions:\n“I think about the calories in what I eat”\n“I think fast food is all junk”\n“I try to eat healthier food these days”\n“I like to know about the ingredients before I buy food”\nAbstract Construct 2.\n\nIs our consumer brand sensitive?\nThis construct was based on the answers to the following questions:\n“I often buy on the spur of the moment”\n“I change brands for variety/novelty”\n“I always look for brand name”\n\nOnce we have created our clusters, we want to be able to describe those groups and help create some distinction between them. To accomplish this, I identified some Descriptor Variables that included:\n\nIncome\nAge\nGender\nESPN – Time Spent Viewing in the last 7 days\n“How effective is email advertising?”\nPowerade – “Do you drink it?”\n“Have you used Netflix in the last 7 days?”\n“Have you exercised regularly in the past 12 months ?”"
  },
  {
    "objectID": "python-annotation-project/python-annotation-project.html",
    "href": "python-annotation-project/python-annotation-project.html",
    "title": "Python Annotation and Modeling Project",
    "section": "",
    "text": "I worked on this project with 3 of my colleagues from my Graduate Program.\n\nIntroduction\nThe goal of this project was to create different machine learning models trained on data annotations of a reddit comment dataset. The two topics of interest that were chosen to train our models with were ‘technology-related’ and ‘transportation-related.’\n\n\nAnnotation Collection\nThe team created guidelines for our two annotation groups to use in determining the correct labels to place on each comment. After allowing our groups to annotate the first 50 comments, we assessed how well they understood our requirements, and then allowed them to proceed with the remaining 950 comments.\n\n\nAgreement Analysis\nOnce all our comments had been annotated by both groups, we need to measure how well the two groups ‘agreed’ on the comment’s classifications, using Cohen’s Kappa.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn order to adjust for the variances in our two annotation groups, we created a ‘gold standard’ label set for our comments and proceeded with the machine learning modeling process.\n\n\nFeature Selection\nAfter finalizing our annotation dataset for both topics of interest, we began constructing our models. All our models are trained using a Linear SVC algorithm with c values of .01, .1, and 1. We decided to implement the following additional features for both topics:\n\n\nCAPS – Does this comment have at least one word written in all Capital Letters?\n• We used simple string methods and Boolean logic to identify words that met this criterion.\n• Technology: Targeting strong emphasis words related to internet, connectivity, web activity.\n• Transportation: Targeting road names, or strong emphasis words related to traffic, transportation systems, etc.\n\nDigits – Does this comment have at least one “word” that contains both letters and numbers?\n• We used regex expressions to only flag words that matched the above criteria\n• Technology: Targeting tech related terms such as ‘100GB’, ‘1080p’, etc.\n• Transportation: Targeting highways and vehicle models such as ‘IH-10’, ‘F150,’ etc.\n\nLexicon—Does this comment contain a word found in our (transportation/technology) lexicon?\n• We web scraped a list of technology related terms from 2 websites:\no Tech: ageUK\no Transportation: Wikipedia\n• Once we established the html structure, we then cleaned the results to produce our lexicons for each topic.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTechnology Task Model Assessment\nResults: Three different models had the exact same micro scores, indicating that this was not the best metric to use to identify the best model. There was more variance among the macro scores, which led to the conclusion that the best performing model was our CAPS model, with macro scores of .64 in all three categories.\n\n\nTransportation Task Model Assessment\nResults: All these models had identical f1-scores of .95, indicating that our additional features were less effective at improving the transportation models than they were with the technology models. These models also had identical macro values when compared to each other, but individually, these metrics varied considerably. Precision was much higher than recall, meaning that when these models predicted something as positive, they were correct almost all of the time. However, recall was much lower, indicating that there were many positive cases that were missed by the models.\n\n\nAppendix\nTechnology Lexicon: [‘DOWNLOAD’, ‘FACEBOOK’, ‘ICON’, ‘PAYPAL’, ‘WHATSAPP’, ‘PHISHING’, ‘SMARTPHONE’, ‘SOFTWARE’, ‘ZOOM’, ‘LINK’, ‘SKYPE’, ‘ROUTER’, ‘INSTAGRAM’, ‘APPLE’, ‘BANDWIDTH’, ‘APPS’, ‘4G’, ‘URL’, ‘WEBPAGE’, ‘CATFISHING’, ‘CLOUD STORAGE’, ‘DATA ALLOWANCE’, ‘HYPERLINK’, ‘5G’, ‘HARDWARE’, ‘OPERATING SYSTEM’, ‘IOS’, ‘MALWARE’, ‘HACK’, ‘EMAIL’, ‘APPLICATIONS’, ‘PROFILE’, ‘ANDROID’, ‘SPAM’, ‘WIRELESS NETWORK’, ‘SECURITY CERTIFICATE’, ‘TABS’, ‘WEBSITE’, ‘COOKIES’, ‘PROGRAM’, ‘DEVICE’, ‘GOOGLE’, ‘POP-UP’, ‘3G’, ‘TABLET’, ‘UPLOAD’, ‘ENCRYPTED’, ‘HTTP’, ‘TWITTER’, ‘MOBILE DATA’, ‘SPYWARE’, ‘WEBCAM’, ‘ADDRESS BAR’, ‘ANTI-VIRUS’, ‘ATTACHMENT’, ‘ONLINE’, ‘BLUETOOTH’, ‘VIRUSES’, ‘BROADBAND’, ‘BROWSER’, ‘SIM CARD’, ‘YOUTUBE’, ‘INBOX’, ‘LOG IN’, ‘SOCIAL MEDIA’, ‘SEARCH ENGINE’, ‘HTTPS’, ‘SECURE WEBSITE’]\n\nTransportation Lexicon: [‘Street hierarchy’, ‘Concrete step barrier’, ‘Unused highway’, ‘Fog’, ‘Brick’, ‘Ford’, ‘Reinforced concrete’, ‘Dual carriageway Divided highway Expressway’, ‘business route’, ‘Road slipperiness’, ‘2+2 road’, “Botts’ dots”, ‘Street running railway’, ‘Storm drain’, ‘Seat belts’, ‘Country lane’, ‘Aquaplaning’, ‘Wide outside lane’, ‘Superstreet’, ‘Vehicles’, ‘Traffic signal preemption’, ‘Constant-slope barrier’, ‘Road train’, ‘Rumble strip’, ‘Sett’, ‘High-occupancy toll lane’, ‘Traffic barrier’, ‘Raised pavement marker’, ‘Backroad’, ‘Traffic island’, ‘Lane’, ‘Traffic directionality’, ‘Toll road’, ‘Parkway’, ‘Kassel kerb’, ‘Asphalt concrete’, ‘Split intersection’, ‘Jughandle’, ‘Dirt’, ‘Hairpin turn’, ‘Turnaround’, ‘Other terms’, ‘Chipseal’, ‘Rubberized asphalt’, ‘Guard rail’, ‘Road surface marking’, ‘Present serviceability index’, ‘Seagull intersection’, ‘Route number’, ‘Directional T’, ‘Road andenvironment’, ‘Pedestrian zone’, ‘Ring road’, ‘Frontage road’, ‘Gravel’, ‘Traffic cone’, ‘Road types by features’, ‘Passing lane’, ‘Black ice’, ‘Bowtie’, ‘Plank’, ‘Link road’, ‘Bicycle boulevard’, ‘Box junction’, ‘Protected intersection’, ‘Single carriageway’, ‘Runaway truck ramp’, ‘Complete streets’, ‘Road’, ‘Quadrant roadway’, ‘Primitive road’, ‘Shared space’, ‘Glossary of road transport terms’, ‘Sidewalk Pavement’, ‘Concrete’, ‘Alley’, ‘Texas U-turn’, ‘Bridge’, ‘Median Central reservation’, ‘Sunken lane’, ‘Diamond grinding of pavement’, ‘Single-point urban’, ‘Climbing lane’, ‘Collector road’, ‘Tarmac’, ‘Private highway’, ‘Traffic lanes’, ‘Single-vehicle crash’, ‘Overpass Flyover’, ‘SPUI’, ‘Speed bump’, ‘Woonerf’, ‘Crosswind’, ‘Texture’, ‘Diamond’, ‘Roundabout’, ‘Snowsquall’, ‘Crushed stone’, ‘Cloverleaf’, “Driver’s education”, ‘Pavement condition index’, ‘Hook turn’, ‘Rut’, ‘Two-lane expressway’, ‘Glassphalt’, ‘Road verge’, ‘Barrier transfer machine’, ‘High-occupancy vehicle lane’, ‘Whiteout’, ‘Freeway Motorway’, ‘Causeway’, “Dead Man’s Curve”, ‘Manhole cover’, ‘Curb’, ‘Washout’, ‘Intersections’, ‘road transport’, ‘Expansion joint’, ‘Main street’, ‘Single-track road’, ‘Diverging diamond’, ‘2+1 road’, ‘Bleeding’, ‘Level crossing’, ‘Living street’, ‘Avenue’, ‘Truck bypass’, ‘Pavement milling’, ‘Stamped asphalt’, ‘Permeable’, ‘Express-collector setup’, ‘Highway systems by country’, ‘Motorcycle lane’, ‘Right-in/right-out’, ‘Washboarding’, ‘Macadam’, ‘Bicycle lane’, ‘Three-level diamond’, ‘Automotive safety’, ‘F-Shape barrier’, “Cat’s eye”, ‘Human factors’, ‘grade-separated’, ‘Bike freeway’, ‘Oversize load’, ‘Reversible lane’, ‘Full depth recycling’, ‘Cobblestone’, ‘Driving under the influence’, ‘Stack’, ‘Drowsy driving’, ‘at-grade’, ‘road’, ‘Green lane’, ‘Airbag’, ‘special route’, ‘Super two’, ‘Concurrency’, ‘Elevated highway’, ‘Jersey barrier’, ‘Pavement performance modeling’, ‘Managed lane’, ‘Trunk road’, ‘Parclo’, ‘Limited-access’, ‘Pothole’, ‘Road rage’, ‘Free-flow’, ‘Farm-to-market road’, ‘Corduroy’, ‘Bioasphalt’, ‘International roughness index’, ‘Roadkill’, ‘3-way junction’, ‘Traffic calming’, ‘Underride guard’, ‘Local roads’, ‘Ice’, ‘Crocodile cracking’, ‘Arterial road’, ‘Stroad’, ‘Shoulder’, ‘Noise barrier’, ‘Winter road’, ‘Hierarchy of roads’, ‘Pedestrian crossing’, ‘Driveway’, ‘Boulevard’, ‘Risk compensation’, ‘Contraflow lane reversal’, ‘Refuge island’, ‘Main roads’, ‘Bollard’, ‘Channelization’, ‘Highway’, ‘Continuous flow’, ‘Plastic’, ‘Trumpet’, ‘Granular base equivalency’, ‘County highway’, ‘Road diet’, ‘Sealcoat’, ‘Interchanges’, ‘Michigan left’, ‘Rockfall’, ‘Oil spill’, ‘Street’, ‘Cable barrier’, ‘Road debris’, ‘Offset T-intersection’, ‘RIRO’, ‘Dead end’, ‘Contraflow lane’, ‘Underpass Tunnel’, ‘Raindrop’, ‘Side road’, ‘Avalanche’, ‘Detour’]"
  },
  {
    "objectID": "aboutme.html#education",
    "href": "aboutme.html#education",
    "title": "About me",
    "section": "Education",
    "text": "Education\nMaster of Science in Data Analytics \nExpected Graduation: May 2025\nUniversity of Texas at San Antonio\nGPA: 4.0\n\nBachelor of Science in Information Systems\nGraduated May 2022\nTexas Lutheran University\nGPA: 4.0, Minor in Business Administration\nSumma Cum Laude, 2022 Student of the year."
  },
  {
    "objectID": "aboutme.html#experience",
    "href": "aboutme.html#experience",
    "title": "About me",
    "section": "Experience",
    "text": "Experience\nSenior It Project Coordinator - WellMed Medical Management, San Antonio, TX\nJune 2022 - Present\n• Performs scrum master responsibilities (Sprint Planning, Retrospectives, etc.) daily for a cloud application agile development team since November 2022.\n• Compiles weekly status reports for 5 different development projects to present to business sponsors.\n• Monitors and reports on financial variances within a $7M+ project portfolio. Prepares quarterly budgetary reports to send to executive leadership.\n• Guides team through portfolio-wide initiatives such as demand planning, resource planning, and timecard management. Provides support for 8 scrum masters regarding these items.\n• Creates reports, dashboards, and charts for leadership to aid in capital planning, budget adjustments, and demand capacity, including portfolio monthly burn rates.\n• Contributes to demand/capacity data analysis with respect to resource hour planning.\n\nInformation Technology Intern - WellMed Medical Management, San Antonio, TX\nJune 2021 - May 2022\n• Collaborated with a technology project management team responsible for developing and maintaining systems and applications supporting WellMed clinics through 10+ different capital projects.\n• Designed, created, and maintained a program dashboard project to assist a team of 8 senior project managers in planning, budgeting, and financial reconciliation.\n• Managed and updated weekly program status reports for project managers to present to executives."
  },
  {
    "objectID": "aboutme.html#activities",
    "href": "aboutme.html#activities",
    "title": "About me",
    "section": "Activities",
    "text": "Activities\nPresident - Black and Gold President’s Council\nTexas Lutheran University.\nDecember 2019 - May 2022\n• Nominated by faculty, and after an application and interview process was accepted into an honorary organization limited to only 12 students per year.\n• Represented TLU at 8 different donor, outreach, and community events.\n• Advised the President of TLU on changes within policy, including student engagement and student health.\n• Guided group as President of council, was tasked with setting vision, goal, and leading key events.\n\nPresident - Habitat for Humanity\nTexas Lutheran University.\nAugust 2020 - May 2022\n• Founded Habitat for Humanity club on campus and served as first President.\n• Spearheaded student groups in assisting local Habitat for Humanity chapter in constructing 5 new houses for the Seguin community.\n• Served as a point of contact for over 80 different students interested in volunteering with Habitat."
  },
  {
    "objectID": "aboutme.html#awards-certifications",
    "href": "aboutme.html#awards-certifications",
    "title": "About me",
    "section": "Awards & Certifications",
    "text": "Awards & Certifications\n• Won Second Place at UTSA’s 2023 Rowdy Datathon\n• Selected as TLU 2022 Student of the Year by Faculty and Student body.\n• Received the TLU Math, CSCI, and IS Departmental Scholarship Award for 2021 and 2022.\n• Received the 2024 UTSA Cyber & Analytics Board of Advisors Annual Scholarship in Data Analytics.\n• Awarded the Newman Civic Fellowship and named TLU Distinguished Student Leader in 2021.\n• Selected for IT 2020 Summer Research at TLU.\n• Led TLU to winning the Nationally recognized NSLS Distinguished Chapter award while President.\n• Certified Scrum Master (CSM) on 10/31/23 by Scrum Alliance."
  },
  {
    "objectID": "aboutme.html#projects",
    "href": "aboutme.html#projects",
    "title": "About me",
    "section": "Projects",
    "text": "Projects\n2023 Data Vis Project – Exploration of Winning Factors among NBA teams and players\nUTSA Graduate School\nFall 2023\nIdentified data sources and performed data cleaning with R for the team to analyze. Once trends were identified, created many different visualizations including line graphs, bar graphs, correlation charts, shot heat maps, scatterplots and multiple facet charts. Presented our findings through Tableau, using data storytelling techniques and provided conclusions to our fictional client (new NBA team owner).\n\n2023 Rowdy Datathon – Analysis of Funding Level Among School Districts\nUTSA\nOctober 2023\n(Within a 24-hour time limit) Team performed lengthy data cleaning, and exploratory data analysis using SQL and R on four different public-school datasets to identify factors/predictors to focus resources on to increase educational attainment. uncovered many unique observations and trends which we displayed using tableau, and presented to a panel of judges, resulting in winning 2nd Place in our category.\n\nGroup Leader - NBA Player Selector Data Lake\nTexas Lutheran University\nSpring 2022\nCreated a primitive data lake on Google Cloud Platform with a partner, to determine optimal NBA player sponsors for a mock sports drink company. Extracted data from several sources including NBA Player Stats and game attendance datasets, demographic datasets, live Twitter data, and Wikipedia data. Leveraged BigQuery and Google Cloud Storage Buckets to store and analyze data, Python and Cloud Functions to pull in data, and utilized Google Data Studio to present data.\n\nSenior Project - Cloud Based Covid-19 Resource and Information Website\nTexas Lutheran University\nFall 2021\nDeveloped a website to provide information and resources to combat the Covid-19 pandemic in Texas. Displayed real-time covid data, testing and vaccination sites based on user location, and provided latest news articles about Covid-19. Used JavaScript (JS), JSON, Wix, Wix-Velo, Application Programming Interfaces (APIs), Tableau, and Human Centered Design (HCD). Was selected to present project for TLU’s Spring 2022 Academic Symposium."
  },
  {
    "objectID": "aboutme.html#skills",
    "href": "aboutme.html#skills",
    "title": "About me",
    "section": "Skills",
    "text": "Skills\n• Computer Proficiency: Word, Excel, PowerPoint, Outlook, Google Services.\n• Computer System Experience: ServiceNow, Rally, Quickbase.\n• Foundational Knowledge: R, SQL, Python, Wix, Tableau, GCP, Google Data Studio.\n• Graduate Coursework: Tableau, R, SAS, Statistical Modeling, Data Visualization techniques.\n• Extensive Public Speaking experience.\n• Numerous leadership opportunities throughout academic and professional career."
  }
]