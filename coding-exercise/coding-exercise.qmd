---
title: "R Coding Exercise"
---

## Analyzing Life Expectancy in Africa 

We will be using data from the Gapminder package in R

```{r}
#| output: false
#Please install all packages not already installed using
#a command similar to one below
#install.packages("dslabs")

library(dslabs) #How we will access the dataset
library(tidyr) #For cleaning and analyzing the data
library(dplyr) #For creating pipes to sort, filter data
library(ggplot2) # For creating nice visuals
library(scales) # For scaling data 
```


Taking a look at the structure of the data

```{r}
# This will give us dimensions and column details
str(gapminder)
```

Assessing the quartiles for each column

```{r}
#This will give us an idea of how each column's data is spread out, and give us some insight about outliers
summary(gapminder)
```

Verifying the type of object that we will be accesssing 
```{r}
class(gapminder)
# Tells us that R is viewing this as a data frame which will help us with maintaining column types and cleaning the dataset
```

## Processing data

First we will segment only data from African countries into a new data frame.

```{r}
# Using pipes from dplyr
africadata = gapminder |>
  filter(continent == 'Africa') # Using two == signifies comparison operator vs assignment operator
```

Next we will create two new objects from this Africa data set, one with both Life Expectancy and Infant Mortality, and one with both Life Expectancy and Population.


```{r}
africa_IM_LE = africadata[3:4] #Slicing only two columns of interest
africa_POP_LE = africadata[4:6] #Slicing three columns since we want both 4 and 6
africa_POP_LE = africa_POP_LE[-2] #Removing middle unneeded columns
```


Lets take a look at the structure and summary of the two new data objects.

```{r}
str(africa_POP_LE)
str(africa_IM_LE)
summary(africa_POP_LE)
summary(africa_IM_LE)
```

## Plotting


Plotting Life Expectancy as function of Infant Mortality.
```{r}
africa_IM_LE |> # Using pipes again
  ggplot(aes(x=infant_mortality, y=life_expectancy))+ #Using GGplot for better visualizations
  geom_point() #geom_point is ggplots method for scatterplots
```

We can clearly see a negative correlation between our variables of interest, implying as infant mortality increases, life expectancy decreases.


Next plotting Life Expectancy as a function of Population
```{r}
africa_POP_LE |>
  ggplot(aes(x = population, y =life_expectancy))+
  geom_point()+
  scale_x_log10(labels = label_comma()) #Using the scales library to scale the x axis with log10
```
We generally see a positive correlation between these two variables. As in the previous plot we can note several 'lines' of data made up of datapoints very close to each other. These represent the data of distinct countries, year after year, increasing or decreasing. 



## Additional Data Processing

We need find a a singular year to explore.\
In order to do that, we need to identify which years are not missing data for the Infant Mortality variable.

```{r}
#We start by counting the number of NAs per country, per year
CountNAs = africadata |>
  group_by(year) |> # When we group, we need to summarize
  summarise(sum(is.na(infant_mortality)))#so we use the total number of NA values in this column to group on

CountNAs #Generating table
#Clicking through the table will show when the number of NAs drop to 0 for many years
plot(CountNAs) # Plotting our findings

```

As both the table and plot show, around 1981, the number of NAs for the Infant Mortality variable dropped to 0 until 2016, when the number of NAs jumped. So we need to choose a year between that year range.We will choose 2000 for this exercise.

```{r}
# Creating a new data object
africa2000 = africadata |> 
  filter(year == 2000)# We only want rows where the year column is 2000


# Checking both the structure and summary of our new data object

str(africa2000)
summary(africa2000)
```
## Additional Plotting
Now, lets generate the same plots from before, with just data from Africa in the year 2000.

Plotting Life Expectancy as function of Infant Mortality 

```{r}
africa2000 |> # Our new data object
  ggplot(aes(x=infant_mortality, y=life_expectancy))+
  geom_point()
```
We still see the same negative correlation as before, albeit less strong.

Next plotting Life Expectancy as a function of Population

```{r}
africa2000 |>
  ggplot(aes(x = population, y =life_expectancy))+
  geom_point()+
  scale_x_log10(labels = label_comma()) #Using Scales again
```
We do not see a real trend in this plot, which differs from the initial plot with all the data from African.

## Modeling

We will fit two models using two different predictors (infant mortality and population) to predict life expectancy.

```{r}
fit1 = lm(life_expectancy ~ infant_mortality, data=africa2000) # Initializing model using infant_mortality as predictor

fit2 =lm(life_expectancy ~ population, data=africa2000)
#Model using Population as predictor
```


Now we run summary() to display the results of our two model runs.

```{r}
summary(fit1) #Summary will show us all the important info of our two models
```

```{r}
summary(fit2) 
```



## Model Conclusions

As expected model 1 (Predictor: Infant Mortality) has a significant effect (p-value is far below .05), and that effect is negative (intercept is -.1891).

Also as expected, model 2 (Predictor: Population) did not have a substantial effect (p-value .6 > .05).



# This section contributed by Guillermo Gallardo


For this section, I will use the *mice_weights* database from dslabs. Our initial step involves exploring the dataset to offer a clearer explanation of its structure and contents. 

## Data Structure

This dataset contains 7 variables, including movie body_weight, bone_density, and sex, with a total of 780 observations.

```{r}
str(mice_weights)
```

## Data Summary

Here's a brief summary of the *mice_weights* dataset, this will help us understand the available data and identifying any potential outliers.

```{r}
summary(mice_weights)
```

## Data Type

```{r}
class(mice_weights)
```


# Processing Data

Now that we have a clearer understanding of the data, let's create two objects for our analysis and include only the variables of interest.

**Bone Weight and Bone Density**
```{r}
weight_density <- mice_weights %>%
  select(body_weight, bone_density) %>% #selecting only two variables
  filter(!is.na(bone_density)) #removing na (only 4)
```

**Body Weight and Sex**
```{r}
weight_sex = mice_weights %>% 
  select(body_weight, sex) #no na's in this one
```


## Objects Structure

This object now has 776 observations instead of 780.

```{r}
str(weight_density)
```
This object still has the 780 observations.

```{r}
str(weight_sex)
```

## Objects Summary


```{r}
summary(weight_density)
```


```{r}
summary(weight_sex)
```

# Plotting
## Bone Density vs Body Weight

I included a scatterplot to visually examine the relationship between these two variables. It appears there is a positive relationship, and I will now proceed to create a linear model to explore this further.
```{r}
ggplot(weight_density, aes(x = bone_density, y = body_weight)) + 
  geom_point() + #scatterplot
   labs(x = "Bone Density", y = "Body Weight") +
  ggtitle("Boxplot of Body Weight by Bone Density")
```

## Bone Density vs Body Weight

Males generally weigh more, but females exhibit more outliers in weight distribution.
```{r}
ggplot(mice_weights, aes(x = sex, y = body_weight)) + 
  geom_boxplot() + #boxplot
  labs(x = "Sex", y = "Body Weight") +
  ggtitle("Boxplot of Body Weight by Sex")
```

# Linear Models

**Body Weight ~ Bone Density**

```{r}
lmBD = lm(body_weight~bone_density, data = weight_density)
summary(lmBD)
```

**Body Weight ~ Sex**

```{r}
lmS = lm(body_weight~sex, data = weight_sex)
summary(lmS)
```


# Conclusion

**lmBD: After running the linear model, we observe a highly significant p-value (p < 2.2e-16), indicating a strong linear relationship between body weight and bone density. For every unit increase in bone density, body weight is expected to increase by 26.139 units. This model explains 13.05% of the variability in body weight.** 

**lmS: The p-value is 2.2e-16, significantly smaller than our 0.05 significance level, allowing us to reject the null hypothesis and confirm a strong relationship between body weight and sex. On average, males weigh approximately 8.8207 units more than females. This model explains 29.87% of the variability in body weight.** 
